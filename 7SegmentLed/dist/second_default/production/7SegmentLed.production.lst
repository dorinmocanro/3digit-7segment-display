

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun 05 14:19:52 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           ; Version 2.05
    55                           ; Generated 20/12/2018 GMT
    56                           ; 
    57                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F2550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataBANK0
    90  0027FA                     __pidataBANK0:
    91                           	opt callstack 0
    92                           
    93                           ;initializer for stoa@F1152
    94  0027FA  28                 	db	40
    95  0027FB  6E                 	db	110
    96  0027FC  75                 	db	117
    97  0027FD  6C                 	db	108
    98  0027FE  6C                 	db	108
    99  0027FF  29                 	db	41
   100  002800  00                 	db	0
   101                           
   102                           ;initializer for _NR
   103  002801  0001               	dw	1
   104                           
   105                           ;initializer for _count
   106  002803  01                 	db	1
   107                           
   108                           	psect	smallconst
   109  000800                     __psmallconst:
   110                           	opt callstack 0
   111  000800  00                 	db	0
   112  000801  E0                 	db	224
   113  000802                     __end_ofdisplay3@dig_mask:
   114                           	opt callstack 0
   115  000802  0F                 	db	15
   116  000803                     __end_ofsend_digit@com_mask:
   117                           	opt callstack 0
   118  000803                     character_table@h:
   119                           	opt callstack 0
   120  000803  80                 	db	128
   121  000804                     __end_ofcharacter_table@h:
   122                           	opt callstack 0
   123  000804  40                 	db	64
   124  000805                     __end_ofcharacter_table@g:
   125                           	opt callstack 0
   126  000805  20                 	db	32
   127  000806                     __end_ofcharacter_table@f:
   128                           	opt callstack 0
   129  000806  10                 	db	16
   130  000807                     __end_ofcharacter_table@e:
   131                           	opt callstack 0
   132  000807  08                 	db	8
   133  000808                     __end_ofcharacter_table@d:
   134                           	opt callstack 0
   135  000808  04                 	db	4
   136  000809                     __end_ofcharacter_table@c:
   137                           	opt callstack 0
   138  000809  02                 	db	2
   139  00080A                     __end_ofcharacter_table@b:
   140                           	opt callstack 0
   141  00080A  01                 	db	1
   142  00080B                     __end_ofcharacter_table@a:
   143                           	opt callstack 0
   144  00080B                     character_table@o:
   145                           	opt callstack 0
   146  00080B  00                 	db	0
   147  00080C                     __end_ofcharacter_table@o:
   148                           	opt callstack 0
   149  00080C                     _BIT_7:
   150                           	opt callstack 0
   151  00080C  80                 	db	128
   152  00080D                     __end_of_BIT_7:
   153                           	opt callstack 0
   154  00080D                     _BIT_6:
   155                           	opt callstack 0
   156  00080D  40                 	db	64
   157  00080E                     __end_of_BIT_6:
   158                           	opt callstack 0
   159  00080E  20                 	db	32
   160  00080F                     __end_of_BIT_5:
   161                           	opt callstack 0
   162  00080F                     _BIT_4:
   163                           	opt callstack 0
   164  00080F  10                 	db	16
   165  000810                     __end_of_BIT_4:
   166                           	opt callstack 0
   167  000810                     _BIT_3:
   168                           	opt callstack 0
   169  000810  08                 	db	8
   170  000811                     __end_of_BIT_3:
   171                           	opt callstack 0
   172  000811  04                 	db	4
   173  000812                     __end_of_BIT_2:
   174                           	opt callstack 0
   175  000812                     _BIT_1:
   176                           	opt callstack 0
   177  000812  02                 	db	2
   178  000813                     __end_of_BIT_1:
   179                           	opt callstack 0
   180  000813                     _BIT_0:
   181                           	opt callstack 0
   182  000813  01                 	db	1
   183  000814                     __end_of_BIT_0:
   184                           	opt callstack 0
   185  000814  80                 	db	128
   186  000815                     __end_of_DIG3:
   187                           	opt callstack 0
   188  000815  40                 	db	64
   189  000816                     __end_of_DIG2:
   190                           	opt callstack 0
   191  000816  10                 	db	16
   192  000817                     __end_of_OE:
   193                           	opt callstack 0
   194  000817  08                 	db	8
   195  000818                     __end_of_RCLK:
   196                           	opt callstack 0
   197  000818  04                 	db	4
   198  000819                     __end_of_SRCLR:
   199                           	opt callstack 0
   200  000819  02                 	db	2
   201  00081A                     __end_of_SRCLK:
   202                           	opt callstack 0
   203  00081A  20                 	db	32
   204  00081B                     __end_of_DIG1:
   205                           	opt callstack 0
   206  00081B  01                 	db	1
   207  00081C                     __end_of_SER:
   208                           	opt callstack 0
   209  0000                     _RCONbits	set	4048
   210  0000                     _INTCONbits	set	4082
   211  0000                     _TMR0L	set	4054
   212  0000                     _TMR0H	set	4055
   213  0000                     _T0CON	set	4053
   214  0000                     _INTCON	set	4082
   215  0000                     _LATB	set	3978
   216  0000                     _OSCCON	set	4051
   217  0000                     _TRISB	set	3987
   218  0000                     _PORTB	set	3969
   219  0000                     _CMCON	set	4020
   220  0000                     _ADCON1	set	4033
   221  00081C                     STR_78:
   222  00081C  68                 	db	104	;'h'
   223  00081D  68                 	db	104	;'h'
   224  00081E  58                 	db	88	;'X'
   225  00081F  00                 	db	0
   226  000820                     STR_2:
   227  000820  68                 	db	104	;'h'
   228  000821  68                 	db	104	;'h'
   229  000822  64                 	db	100	;'d'
   230  000823  00                 	db	0
   231  000824                     STR_6:
   232  000824  68                 	db	104	;'h'
   233  000825  68                 	db	104	;'h'
   234  000826  69                 	db	105	;'i'
   235  000827  00                 	db	0
   236  000828                     STR_44:
   237  000828  68                 	db	104	;'h'
   238  000829  68                 	db	104	;'h'
   239  00082A  6E                 	db	110	;'n'
   240  00082B  00                 	db	0
   241  00082C                     STR_29:
   242  00082C  68                 	db	104	;'h'
   243  00082D  68                 	db	104	;'h'
   244  00082E  6F                 	db	111	;'o'
   245  00082F  00                 	db	0
   246  000830                     STR_59:
   247  000830  68                 	db	104	;'h'
   248  000831  68                 	db	104	;'h'
   249  000832  75                 	db	117	;'u'
   250  000833  00                 	db	0
   251  000834                     STR_74:
   252  000834  68                 	db	104	;'h'
   253  000835  68                 	db	104	;'h'
   254  000836  78                 	db	120	;'x'
   255  000837  00                 	db	0
   256  000838                     STR_96:
   257  000838  7A                 	db	122	;'z'
   258  000839  58                 	db	88	;'X'
   259  00083A  00                 	db	0
   260  00083B                     STR_20:
   261  00083B  7A                 	db	122	;'z'
   262  00083C  64                 	db	100	;'d'
   263  00083D  00                 	db	0
   264  00083E                     STR_24:
   265  00083E  7A                 	db	122	;'z'
   266  00083F  69                 	db	105	;'i'
   267  000840  00                 	db	0
   268  000841                     STR_54:
   269  000841  7A                 	db	122	;'z'
   270  000842  6E                 	db	110	;'n'
   271  000843  00                 	db	0
   272  000844                     STR_39:
   273  000844  7A                 	db	122	;'z'
   274  000845  6F                 	db	111	;'o'
   275  000846  00                 	db	0
   276  000847                     STR_69:
   277  000847  7A                 	db	122	;'z'
   278  000848  75                 	db	117	;'u'
   279  000849  00                 	db	0
   280  00084A                     STR_92:
   281  00084A  7A                 	db	122	;'z'
   282  00084B  78                 	db	120	;'x'
   283  00084C  00                 	db	0
   284  00084D                     STR_1:
   285  00084D  25                 	db	37
   286  00084E  64                 	db	100	;'d'
   287  00084F  00                 	db	0
   288  0000                     
   289                           ; #config settings
   290  000850  00                 	db	0	; dummy byte at the end
   291  0000                     
   292                           	psect	cinit
   293  0025BA                     __pcinit:
   294                           	opt callstack 0
   295  0025BA                     start_initialization:
   296                           	opt callstack 0
   297  0025BA                     __initialization:
   298                           	opt callstack 0
   299                           
   300                           ; Initialize objects allocated to BANK0 (10 bytes)
   301                           ; load TBLPTR registers with __pidataBANK0
   302  0025BA  0EFA               	movlw	low __pidataBANK0
   303  0025BC  6EF6               	movwf	tblptrl,c
   304  0025BE  0E27               	movlw	high __pidataBANK0
   305  0025C0  6EF7               	movwf	tblptrh,c
   306  0025C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   307  0025C4  6EF8               	movwf	tblptru,c
   308  0025C6  EE00  F0B3         	lfsr	0,__pdataBANK0
   309  0025CA  EE10 F00A          	lfsr	1,10
   310  0025CE                     copy_data0:
   311  0025CE  0009               	tblrd		*+
   312  0025D0  CFF5 FFEE          	movff	tablat,postinc0
   313  0025D4  50E5               	movf	postdec1,w,c
   314  0025D6  50E1               	movf	fsr1l,w,c
   315  0025D8  E1FA               	bnz	copy_data0
   316                           
   317                           ; Clear objects allocated to BANK0 (46 bytes)
   318  0025DA  EE00  F060         	lfsr	0,__pbssBANK0
   319  0025DE  0E2E               	movlw	46
   320  0025E0                     clear_0:
   321  0025E0  6AEE               	clrf	postinc0,c
   322  0025E2  06E8               	decf	wreg,f,c
   323  0025E4  E1FD               	bnz	clear_0
   324  0025E6                     end_of_initialization:
   325                           	opt callstack 0
   326  0025E6                     __end_of__initialization:
   327                           	opt callstack 0
   328  0025E6  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329  0025E8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330  0025EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   331  0025EC  6EF8               	movwf	tblptru,c
   332  0025EE  0100               	movlb	0
   333  0025F0  EFDB  F013         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssBANK0
   336  000060                     __pbssBANK0:
   337                           	opt callstack 0
   338  000060                     _errno:
   339                           	opt callstack 0
   340  000060                     	ds	2
   341  000062                     _nout:
   342                           	opt callstack 0
   343  000062                     	ds	2
   344  000064                     _width:
   345                           	opt callstack 0
   346  000064                     	ds	2
   347  000066                     _prec:
   348                           	opt callstack 0
   349  000066                     	ds	2
   350  000068                     _flags:
   351                           	opt callstack 0
   352  000068                     	ds	2
   353  00006A                     _dbuf:
   354                           	opt callstack 0
   355  00006A                     	ds	32
   356  00008A                     _buffer:
   357                           	opt callstack 0
   358  00008A                     	ds	4
   359                           
   360                           	psect	dataBANK0
   361  0000B3                     __pdataBANK0:
   362                           	opt callstack 0
   363  0000B3                     stoa@F1152:
   364                           	opt callstack 0
   365  0000B3                     	ds	7
   366  0000BA                     _NR:
   367                           	opt callstack 0
   368  0000BA                     	ds	2
   369  0000BC                     _count:
   370                           	opt callstack 0
   371  0000BC                     	ds	1
   372                           
   373                           	psect	cstackBANK0
   374  00008E                     __pcstackBANK0:
   375                           	opt callstack 0
   376  00008E                     ?_vfprintf:
   377                           	opt callstack 0
   378  00008E                     vfprintf@fp:
   379                           	opt callstack 0
   380                           
   381                           ; 1 bytes @ 0x0
   382  00008E                     	ds	1
   383  00008F                     vfprintf@fmt:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0x1
   387  00008F                     	ds	1
   388  000090                     vfprintf@ap:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0x2
   392  000090                     	ds	1
   393  000091                     ?_vsnprintf:
   394                           	opt callstack 0
   395  000091                     vsnprintf@s:
   396                           	opt callstack 0
   397                           
   398                           ; 1 bytes @ 0x3
   399  000091                     	ds	1
   400  000092                     vsnprintf@n:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x4
   404  000092                     	ds	2
   405  000094                     vsnprintf@fmt:
   406                           	opt callstack 0
   407                           
   408                           ; 1 bytes @ 0x6
   409  000094                     	ds	1
   410  000095                     vsnprintf@ap:
   411                           	opt callstack 0
   412                           
   413                           ; 1 bytes @ 0x7
   414  000095                     	ds	1
   415  000096                     ??_vsnprintf:
   416                           
   417                           ; 1 bytes @ 0x8
   418  000096                     	ds	4
   419  00009A                     _vsnprintf$1104:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0xC
   423  00009A                     	ds	2
   424  00009C                     vsnprintf@cnt:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0xE
   428  00009C                     	ds	2
   429  00009E                     vsnprintf@f:
   430                           	opt callstack 0
   431                           
   432                           ; 5 bytes @ 0x10
   433  00009E                     	ds	5
   434  0000A3                     ?_snprintf:
   435                           	opt callstack 0
   436  0000A3                     snprintf@s:
   437                           	opt callstack 0
   438                           
   439                           ; 1 bytes @ 0x15
   440  0000A3                     	ds	1
   441  0000A4                     snprintf@n:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x16
   445  0000A4                     	ds	2
   446  0000A6                     snprintf@fmt:
   447                           	opt callstack 0
   448                           
   449                           ; 1 bytes @ 0x18
   450  0000A6                     	ds	5
   451  0000AB                     snprintf@ap:
   452                           	opt callstack 0
   453                           
   454                           ; 1 bytes @ 0x1D
   455  0000AB                     	ds	1
   456  0000AC                     numarator@nr:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x1E
   460  0000AC                     	ds	2
   461  0000AE                     
   462                           ; 2 bytes @ 0x20
   463  0000AE                     	ds	2
   464  0000B0                     
   465                           ; 3 bytes @ 0x22
   466  0000B0                     	ds	3
   467                           
   468                           	psect	cstackCOMRAM
   469  000001                     __pcstackCOMRAM:
   470                           	opt callstack 0
   471  000001                     ??_character_table:
   472  000001                     ?_strlen:
   473                           	opt callstack 0
   474  000001                     ?_isupper:
   475                           	opt callstack 0
   476  000001                     ?_isalpha:
   477                           	opt callstack 0
   478  000001                     ?_isdigit:
   479                           	opt callstack 0
   480  000001                     ?_strncmp:
   481                           	opt callstack 0
   482  000001                     ?_isspace:
   483                           	opt callstack 0
   484  000001                     ?_islower:
   485                           	opt callstack 0
   486  000001                     ?___wmul:
   487                           	opt callstack 0
   488  000001                     ?___aodiv:
   489                           	opt callstack 0
   490  000001                     ?___aomod:
   491                           	opt callstack 0
   492  000001                     ?___lodiv:
   493                           	opt callstack 0
   494  000001                     ?___lomod:
   495                           	opt callstack 0
   496  000001                     send_digit@data:
   497                           	opt callstack 0
   498  000001                     strlen@s:
   499                           	opt callstack 0
   500  000001                     strncmp@_l:
   501                           	opt callstack 0
   502  000001                     ___wmul@multiplier:
   503                           	opt callstack 0
   504  000001                     isalpha@c:
   505                           	opt callstack 0
   506  000001                     isdigit@c:
   507                           	opt callstack 0
   508  000001                     isspace@c:
   509                           	opt callstack 0
   510  000001                     isupper@c:
   511                           	opt callstack 0
   512  000001                     fputc@c:
   513                           	opt callstack 0
   514  000001                     islower@c:
   515                           	opt callstack 0
   516  000001                     ___aodiv@dividend:
   517                           	opt callstack 0
   518  000001                     ___aomod@dividend:
   519                           	opt callstack 0
   520  000001                     ___lodiv@dividend:
   521                           	opt callstack 0
   522  000001                     ___lomod@dividend:
   523                           	opt callstack 0
   524                           
   525                           ; 8 bytes @ 0x0
   526  000001                     	ds	1
   527  000002                     strncmp@_r:
   528                           	opt callstack 0
   529  000002                     send_digit@i:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0x1
   533  000002                     	ds	1
   534  000003                     ??_isupper:
   535  000003                     ??_isalpha:
   536  000003                     ??_isdigit:
   537  000003                     ??_isspace:
   538  000003                     ??_islower:
   539  000003                     character_table@symbol:
   540                           	opt callstack 0
   541  000003                     fputc@fp:
   542                           	opt callstack 0
   543  000003                     strlen@a:
   544                           	opt callstack 0
   545  000003                     ___wmul@multiplicand:
   546                           	opt callstack 0
   547  000003                     strncmp@n:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x2
   551  000003                     	ds	1
   552  000004                     ??_fputc:
   553  000004                     send_digit@a:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x3
   557  000004                     	ds	1
   558  000005                     ??_strncmp:
   559  000005                     display3@data3:
   560                           	opt callstack 0
   561  000005                     ___wmul@product:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x4
   565  000005                     	ds	1
   566  000006                     ??_display3:
   567  000006                     strncmp@l:
   568                           	opt callstack 0
   569                           
   570                           ; 1 bytes @ 0x5
   571  000006                     	ds	1
   572  000007                     ?_toupper:
   573                           	opt callstack 0
   574  000007                     _isspace$992:
   575                           	opt callstack 0
   576  000007                     strncmp@r:
   577                           	opt callstack 0
   578  000007                     toupper@c:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x6
   582  000007                     	ds	1
   583  000008                     ?_atoi:
   584                           	opt callstack 0
   585  000008                     atoi@s:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x7
   589  000008                     	ds	1
   590  000009                     ??_toupper:
   591  000009                     ?_stoa:
   592                           	opt callstack 0
   593  000009                     stoa@fp:
   594                           	opt callstack 0
   595  000009                     fputs@s:
   596                           	opt callstack 0
   597  000009                     ___aodiv@divisor:
   598                           	opt callstack 0
   599  000009                     ___aomod@divisor:
   600                           	opt callstack 0
   601  000009                     ___lodiv@divisor:
   602                           	opt callstack 0
   603  000009                     ___lomod@divisor:
   604                           	opt callstack 0
   605                           
   606                           ; 8 bytes @ 0x8
   607  000009                     	ds	1
   608  00000A                     ??_atoi:
   609  00000A                     display3@csize:
   610                           	opt callstack 0
   611  00000A                     stoa@s:
   612                           	opt callstack 0
   613  00000A                     fputs@fp:
   614                           	opt callstack 0
   615                           
   616                           ; 1 bytes @ 0x9
   617  00000A                     	ds	1
   618  00000B                     ??_stoa:
   619  00000B                     display3@bit:
   620                           	opt callstack 0
   621  00000B                     fputs@c:
   622                           	opt callstack 0
   623                           
   624                           ; 1 bytes @ 0xA
   625  00000B                     	ds	1
   626  00000C                     fputs@i:
   627                           	opt callstack 0
   628  00000C                     stoa@nuls:
   629                           	opt callstack 0
   630                           
   631                           ; 7 bytes @ 0xB
   632  00000C                     	ds	1
   633  00000D                     _toupper$1072:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0xC
   637  00000D                     	ds	1
   638  00000E                     ?_pad:
   639                           	opt callstack 0
   640  00000E                     pad@fp:
   641                           	opt callstack 0
   642  00000E                     atoi@neg:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0xD
   646  00000E                     	ds	1
   647  00000F                     pad@buf:
   648                           	opt callstack 0
   649                           
   650                           ; 1 bytes @ 0xE
   651  00000F                     	ds	1
   652  000010                     pad@p:
   653                           	opt callstack 0
   654  000010                     _atoi$965:
   655                           	opt callstack 0
   656                           
   657                           ; 2 bytes @ 0xF
   658  000010                     	ds	1
   659  000011                     ___aodiv@counter:
   660                           	opt callstack 0
   661  000011                     ___aomod@counter:
   662                           	opt callstack 0
   663  000011                     ___lomod@counter:
   664                           	opt callstack 0
   665  000011                     ___lodiv@quotient:
   666                           	opt callstack 0
   667                           
   668                           ; 8 bytes @ 0x10
   669  000011                     	ds	1
   670  000012                     ??_pad:
   671  000012                     ___aodiv@sign:
   672                           	opt callstack 0
   673  000012                     ___aomod@sign:
   674                           	opt callstack 0
   675  000012                     _atoi$967:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x11
   679  000012                     	ds	1
   680  000013                     ?_abs:
   681                           	opt callstack 0
   682  000013                     pad@i:
   683                           	opt callstack 0
   684  000013                     stoa@i:
   685                           	opt callstack 0
   686  000013                     abs@a:
   687                           	opt callstack 0
   688  000013                     ___aodiv@quotient:
   689                           	opt callstack 0
   690                           
   691                           ; 8 bytes @ 0x12
   692  000013                     	ds	1
   693  000014                     _atoi$966:
   694                           	opt callstack 0
   695                           
   696                           ; 1 bytes @ 0x13
   697  000014                     	ds	1
   698  000015                     ??_abs:
   699  000015                     pad@w:
   700                           	opt callstack 0
   701  000015                     stoa@w:
   702                           	opt callstack 0
   703  000015                     atoi@n:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x14
   707  000015                     	ds	2
   708  000017                     ?_ctoa:
   709                           	opt callstack 0
   710  000017                     ?_otoa:
   711                           	opt callstack 0
   712  000017                     ?_xtoa:
   713                           	opt callstack 0
   714  000017                     ctoa@fp:
   715                           	opt callstack 0
   716  000017                     otoa@fp:
   717                           	opt callstack 0
   718  000017                     stoa@cp:
   719                           	opt callstack 0
   720  000017                     xtoa@fp:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x16
   724  000017                     	ds	1
   725  000018                     ctoa@c:
   726                           	opt callstack 0
   727  000018                     stoa@p:
   728                           	opt callstack 0
   729  000018                     otoa@d:
   730                           	opt callstack 0
   731  000018                     xtoa@d:
   732                           	opt callstack 0
   733                           
   734                           ; 8 bytes @ 0x17
   735  000018                     	ds	1
   736  000019                     ___lodiv@counter:
   737                           	opt callstack 0
   738  000019                     ctoa@w:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x18
   742  000019                     	ds	1
   743  00001A                     ?_utoa:
   744                           	opt callstack 0
   745  00001A                     utoa@fp:
   746                           	opt callstack 0
   747  00001A                     stoa@l:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x19
   751  00001A                     	ds	1
   752  00001B                     ?_dtoa:
   753                           	opt callstack 0
   754  00001B                     dtoa@fp:
   755                           	opt callstack 0
   756  00001B                     utoa@d:
   757                           	opt callstack 0
   758                           
   759                           ; 8 bytes @ 0x1A
   760  00001B                     	ds	1
   761  00001C                     dtoa@d:
   762                           	opt callstack 0
   763                           
   764                           ; 8 bytes @ 0x1B
   765  00001C                     	ds	4
   766  000020                     ??_otoa:
   767  000020                     xtoa@x:
   768                           	opt callstack 0
   769                           
   770                           ; 1 bytes @ 0x1F
   771  000020                     	ds	1
   772  000021                     ??_xtoa:
   773                           
   774                           ; 1 bytes @ 0x20
   775  000021                     	ds	2
   776  000023                     ??_utoa:
   777                           
   778                           ; 1 bytes @ 0x22
   779  000023                     	ds	1
   780  000024                     ??_dtoa:
   781                           
   782                           ; 1 bytes @ 0x23
   783  000024                     	ds	4
   784  000028                     otoa@p:
   785                           	opt callstack 0
   786                           
   787                           ; 2 bytes @ 0x27
   788  000028                     	ds	1
   789  000029                     _xtoa$388:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x28
   793  000029                     	ds	1
   794  00002A                     otoa@t:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x29
   798  00002A                     	ds	1
   799  00002B                     utoa@p:
   800                           	opt callstack 0
   801  00002B                     _xtoa$389:
   802                           	opt callstack 0
   803                           
   804                           ; 2 bytes @ 0x2A
   805  00002B                     	ds	1
   806  00002C                     _dtoa$352:
   807                           	opt callstack 0
   808  00002C                     otoa@w:
   809                           	opt callstack 0
   810                           
   811                           ; 2 bytes @ 0x2B
   812  00002C                     	ds	1
   813  00002D                     utoa@w:
   814                           	opt callstack 0
   815  00002D                     xtoa@p:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0x2C
   819  00002D                     	ds	1
   820  00002E                     dtoa@p:
   821                           	opt callstack 0
   822  00002E                     otoa@n:
   823                           	opt callstack 0
   824                           
   825                           ; 8 bytes @ 0x2D
   826  00002E                     	ds	1
   827  00002F                     xtoa@w:
   828                           	opt callstack 0
   829  00002F                     utoa@n:
   830                           	opt callstack 0
   831                           
   832                           ; 8 bytes @ 0x2E
   833  00002F                     	ds	1
   834  000030                     dtoa@w:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x2F
   838  000030                     	ds	1
   839  000031                     xtoa@n:
   840                           	opt callstack 0
   841                           
   842                           ; 8 bytes @ 0x30
   843  000031                     	ds	1
   844  000032                     dtoa@s:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x31
   848  000032                     	ds	2
   849  000034                     dtoa@n:
   850                           	opt callstack 0
   851                           
   852                           ; 8 bytes @ 0x33
   853  000034                     	ds	2
   854  000036                     otoa@i:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x35
   858  000036                     	ds	1
   859  000037                     utoa@i:
   860                           	opt callstack 0
   861                           
   862                           ; 2 bytes @ 0x36
   863  000037                     	ds	2
   864  000039                     xtoa@i:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0x38
   868  000039                     	ds	2
   869  00003B                     xtoa@c:
   870                           	opt callstack 0
   871                           
   872                           ; 2 bytes @ 0x3A
   873  00003B                     	ds	1
   874  00003C                     dtoa@i:
   875                           	opt callstack 0
   876                           
   877                           ; 2 bytes @ 0x3B
   878  00003C                     	ds	2
   879  00003E                     ?_vfpfcnvrt:
   880                           	opt callstack 0
   881  00003E                     vfpfcnvrt@fp:
   882                           	opt callstack 0
   883                           
   884                           ; 1 bytes @ 0x3D
   885  00003E                     	ds	1
   886  00003F                     vfpfcnvrt@fmt:
   887                           	opt callstack 0
   888                           
   889                           ; 1 bytes @ 0x3E
   890  00003F                     	ds	1
   891  000040                     vfpfcnvrt@ap:
   892                           	opt callstack 0
   893                           
   894                           ; 1 bytes @ 0x3F
   895  000040                     	ds	1
   896  000041                     ??_vfpfcnvrt:
   897                           
   898                           ; 1 bytes @ 0x40
   899  000041                     	ds	4
   900  000045                     vfpfcnvrt@done:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x44
   904  000045                     	ds	2
   905  000047                     _vfpfcnvrt$403:
   906                           	opt callstack 0
   907                           
   908                           ; 2 bytes @ 0x46
   909  000047                     	ds	2
   910  000049                     _vfpfcnvrt$404:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x48
   914  000049                     	ds	2
   915  00004B                     vfpfcnvrt@cp:
   916                           	opt callstack 0
   917                           
   918                           ; 1 bytes @ 0x4A
   919  00004B                     	ds	1
   920  00004C                     vfpfcnvrt@ll:
   921                           	opt callstack 0
   922                           
   923                           ; 8 bytes @ 0x4B
   924  00004C                     	ds	8
   925  000054                     vfpfcnvrt@vp:
   926                           	opt callstack 0
   927                           
   928                           ; 1 bytes @ 0x53
   929  000054                     	ds	1
   930  000055                     vfpfcnvrt@c:
   931                           	opt callstack 0
   932                           
   933                           ; 1 bytes @ 0x54
   934  000055                     	ds	1
   935  000056                     vfpfcnvrt@llu:
   936                           	opt callstack 0
   937                           
   938                           ; 8 bytes @ 0x55
   939  000056                     	ds	8
   940  00005E                     vfprintf@cfmt:
   941                           	opt callstack 0
   942                           
   943                           ; 1 bytes @ 0x5D
   944  00005E                     	ds	1
   945  00005F                     
   946                           ; 1 bytes @ 0x5E
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   949 ;;
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 265 in file "main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  argc            2   32[BANK0 ] int 
   955 ;;  argv            3   34[BANK0 ] PTR PTR unsigned char 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  2   32[BANK0 ] int 
   960 ;; Registers used:
   961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   967 ;;      Params:         0       5       0       0       0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0       0       0       0       0
   970 ;;      Totals:         0       5       0       0       0       0       0       0       0
   971 ;;Total ram usage:        5 bytes
   972 ;; Hardware stack levels required when called:   11
   973 ;; This function calls:
   974 ;;		_numarator
   975 ;;		_setupPortDisplay
   976 ;;		_setup_TMR0
   977 ;; This function is called by:
   978 ;;		Startup code after reset
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text0
   983  0027B6                     __ptext0:
   984                           	opt callstack 0
   985  0027B6                     _main:
   986                           	opt callstack 20
   987                           
   988                           ;main.c: 267:     setupPortDisplay();
   989                           
   990                           ;incstack = 0
   991  0027B6  ECE8  F013         	call	_setupPortDisplay	;wreg free
   992                           
   993                           ;main.c: 268:     setup_TMR0();
   994  0027BA  ECF3  F013         	call	_setup_TMR0	;wreg free
   995                           
   996                           ;main.c: 272:     NR=123;
   997  0027BE  0E00               	movlw	0
   998  0027C0  0100               	movlb	0	; () banked
   999  0027C2  6FBB               	movwf	(_NR+1)& (0+255),b
  1000  0027C4  0E7B               	movlw	123
  1001  0027C6  6FBA               	movwf	_NR& (0+255),b
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;main.c: 273:     numarator();
  1005  0027C8  EC36  F012         	call	_numarator	;wreg free
  1006  0027CC  EF07  F000         	goto	start
  1007  0027D0                     __end_of_main:
  1008                           	opt callstack 0
  1009                           
  1010 ;; *************** function _setup_TMR0 *****************
  1011 ;; Defined at:
  1012 ;;		line 227 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text1
  1041  0027E6                     __ptext1:
  1042                           	opt callstack 0
  1043  0027E6                     _setup_TMR0:
  1044                           	opt callstack 29
  1045                           
  1046                           ;main.c: 228:     T0CON=0b10001111;
  1047                           
  1048                           ;incstack = 0
  1049  0027E6  0E8F               	movlw	143
  1050  0027E8  6ED5               	movwf	4053,c	;volatile
  1051                           
  1052                           ;main.c: 229:     TMR0H=0x00;
  1053  0027EA  0E00               	movlw	0
  1054  0027EC  6ED7               	movwf	4055,c	;volatile
  1055                           
  1056                           ;main.c: 230:     TMR0L=0x00;
  1057  0027EE  0E00               	movlw	0
  1058  0027F0  6ED6               	movwf	4054,c	;volatile
  1059                           
  1060                           ;main.c: 231:     INTCONbits.TMR0IE=1;
  1061  0027F2  8AF2               	bsf	4082,5,c	;volatile
  1062                           
  1063                           ;main.c: 232:     INTCONbits.GIE=1;
  1064  0027F4  8EF2               	bsf	4082,7,c	;volatile
  1065                           
  1066                           ;main.c: 233:     RCONbits.IPEN=0;
  1067  0027F6  9ED0               	bcf	4048,7,c	;volatile
  1068  0027F8  0012               	return		;funcret
  1069  0027FA                     __end_of_setup_TMR0:
  1070                           	opt callstack 0
  1071                           
  1072 ;; *************** function _setupPortDisplay *****************
  1073 ;; Defined at:
  1074 ;;		line 108 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1091 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1092 ;;Total ram usage:        0 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text2
  1103  0027D0                     __ptext2:
  1104                           	opt callstack 0
  1105  0027D0                     _setupPortDisplay:
  1106                           	opt callstack 29
  1107                           
  1108                           ;main.c: 109:     PORTB=0x00;
  1109                           
  1110                           ;incstack = 0
  1111  0027D0  0E00               	movlw	0
  1112  0027D2  6E81               	movwf	3969,c	;volatile
  1113                           
  1114                           ;main.c: 110:     CMCON=0x07;
  1115  0027D4  0E07               	movlw	7
  1116  0027D6  6EB4               	movwf	4020,c	;volatile
  1117                           
  1118                           ;main.c: 111:     ADCON1=0x0F;
  1119  0027D8  0E0F               	movlw	15
  1120  0027DA  6EC1               	movwf	4033,c	;volatile
  1121                           
  1122                           ;main.c: 114:     TRISB=0x00;
  1123  0027DC  0E00               	movlw	0
  1124  0027DE  6E93               	movwf	3987,c	;volatile
  1125                           
  1126                           ;main.c: 115:     OSCCON=0b01110000;
  1127  0027E0  0E70               	movlw	112
  1128  0027E2  6ED3               	movwf	4051,c	;volatile
  1129  0027E4  0012               	return		;funcret
  1130  0027E6                     __end_of_setupPortDisplay:
  1131                           	opt callstack 0
  1132                           
  1133 ;; *************** function _numarator *****************
  1134 ;; Defined at:
  1135 ;;		line 237 in file "main.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  nr              2   30[BANK0 ] unsigned int 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 3F/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1149 ;;      Params:         0       0       0       0       0       0       0       0       0
  1150 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1152 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1153 ;;Total ram usage:        2 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:   10
  1156 ;; This function calls:
  1157 ;;		_display3
  1158 ;;		_snprintf
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text3
  1165  00246C                     __ptext3:
  1166                           	opt callstack 0
  1167  00246C                     _numarator:
  1168                           	opt callstack 20
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 238:     unsigned int nr=0;
  1172                           
  1173                           ;incstack = 0
  1174  00246C  0E00               	movlw	0
  1175  00246E  6FAD               	movwf	(numarator@nr+1)& (0+255),b
  1176  002470  0E00               	movlw	0
  1177  002472  6FAC               	movwf	numarator@nr& (0+255),b
  1178  002474                     l3501:
  1179                           
  1180                           ;main.c: 240:         if(nr!=NR){
  1181  002474  0100               	movlb	0	; () banked
  1182  002476  51BA               	movf	_NR& (0+255),w,b
  1183  002478  19AC               	xorwf	numarator@nr& (0+255),w,b
  1184  00247A  E104               	bnz	u3460
  1185  00247C  51BB               	movf	(_NR+1)& (0+255),w,b
  1186  00247E  19AD               	xorwf	(numarator@nr+1)& (0+255),w,b
  1187  002480  B4D8               	btfsc	status,2,c
  1188  002482  D012               	goto	l3507
  1189  002484                     u3460:
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;main.c: 243:             snprintf(buffer,4,"%d",NR);
  1193  002484  0E8A               	movlw	low _buffer
  1194  002486  6FA3               	movwf	snprintf@s& (0+255),b
  1195  002488  0E00               	movlw	0
  1196  00248A  6FA5               	movwf	(snprintf@n+1)& (0+255),b
  1197  00248C  0E04               	movlw	4
  1198  00248E  6FA4               	movwf	snprintf@n& (0+255),b
  1199  002490  0E4D               	movlw	low STR_1
  1200  002492  6FA6               	movwf	snprintf@fmt& (0+255),b
  1201  002494  C0BA  F0A7         	movff	_NR,?_snprintf+4
  1202  002498  C0BB  F0A8         	movff	_NR+1,?_snprintf+5
  1203  00249C  ECCC  F013         	call	_snprintf	;wreg free
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;main.c: 244:             nr=NR;
  1207  0024A0  C0BA  F0AC         	movff	_NR,numarator@nr
  1208  0024A4  C0BB  F0AD         	movff	_NR+1,numarator@nr+1
  1209  0024A8                     l3507:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;main.c: 246:         display3(buffer);
  1213  0024A8  0E8A               	movlw	low _buffer
  1214  0024AA  6E05               	movwf	display3@data3,c
  1215  0024AC  EC42  F011         	call	_display3	;wreg free
  1216  0024B0  D7E1               	goto	l3501
  1217  0024B2                     __end_of_numarator:
  1218                           	opt callstack 0
  1219                           
  1220 ;; *************** function _snprintf *****************
  1221 ;; Defined at:
  1222 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  s               1   21[BANK0 ] PTR unsigned char 
  1225 ;;		 -> buffer(4), 
  1226 ;;  n               2   22[BANK0 ] unsigned int 
  1227 ;;  fmt             1   24[BANK0 ] PTR const unsigned char 
  1228 ;;		 -> STR_1(3), 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  ret             2    0        int 
  1231 ;;  ap              1   29[BANK0 ] PTR void [1]
  1232 ;;		 -> ?_snprintf(2), 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  2   21[BANK0 ] int 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 3F/0
  1239 ;;		On exit  : 3F/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1242 ;;      Params:         0       6       0       0       0       0       0       0       0
  1243 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1245 ;;      Totals:         0       9       0       0       0       0       0       0       0
  1246 ;;Total ram usage:        9 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    9
  1249 ;; This function calls:
  1250 ;;		_vsnprintf
  1251 ;; This function is called by:
  1252 ;;		_numarator
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text4
  1257  002798                     __ptext4:
  1258                           	opt callstack 0
  1259  002798                     _snprintf:
  1260                           	opt callstack 20
  1261                           
  1262                           ; BSR set to: 0
  1263                           
  1264                           ;incstack = 0
  1265  002798  0EA7               	movlw	low (?_snprintf+4)
  1266  00279A  6FAB               	movwf	snprintf@ap& (0+255),b
  1267                           
  1268                           ; BSR set to: 0
  1269  00279C  C0A3  F091         	movff	snprintf@s,vsnprintf@s
  1270  0027A0  C0A4  F092         	movff	snprintf@n,vsnprintf@n
  1271  0027A4  C0A5  F093         	movff	snprintf@n+1,vsnprintf@n+1
  1272  0027A8  C0A6  F094         	movff	snprintf@fmt,vsnprintf@fmt
  1273  0027AC  0EAB               	movlw	low snprintf@ap
  1274  0027AE  6F95               	movwf	vsnprintf@ap& (0+255),b
  1275  0027B0  EC3E  F010         	call	_vsnprintf	;wreg free
  1276                           
  1277                           ; BSR set to: 0
  1278  0027B4  0012               	return		;funcret
  1279  0027B6                     __end_of_snprintf:
  1280                           	opt callstack 0
  1281                           
  1282 ;; *************** function _vsnprintf *****************
  1283 ;; Defined at:
  1284 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  s               1    3[BANK0 ] PTR unsigned char 
  1287 ;;		 -> buffer(4), 
  1288 ;;  n               2    4[BANK0 ] unsigned int 
  1289 ;;  fmt             1    6[BANK0 ] PTR const unsigned char 
  1290 ;;		 -> STR_1(3), 
  1291 ;;  ap              1    7[BANK0 ] PTR PTR void 
  1292 ;;		 -> snprintf@ap(1), 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  f               5   16[BANK0 ] struct _IO_FILE
  1295 ;;  cnt             2   14[BANK0 ] int 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  2    3[BANK0 ] int 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 3F/0
  1302 ;;		On exit  : 3F/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1305 ;;      Params:         0       5       0       0       0       0       0       0       0
  1306 ;;      Locals:         0       9       0       0       0       0       0       0       0
  1307 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1308 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1309 ;;Total ram usage:       18 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    8
  1312 ;; This function calls:
  1313 ;;		_vfprintf
  1314 ;; This function is called by:
  1315 ;;		_snprintf
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text5
  1320  00207C                     __ptext5:
  1321                           	opt callstack 0
  1322  00207C                     _vsnprintf:
  1323                           	opt callstack 20
  1324                           
  1325                           ; BSR set to: 0
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;incstack = 0
  1329  00207C  0E80               	movlw	128
  1330  00207E  5D93               	subwf	(vsnprintf@n+1)& (0+255),w,b
  1331  002080  A0D8               	btfss	status,0,c
  1332  002082  D007               	goto	l3427
  1333                           
  1334                           ; BSR set to: 0
  1335  002084  0E00               	movlw	0
  1336  002086  6F61               	movwf	(_errno+1)& (0+255),b
  1337  002088  0E4B               	movlw	75
  1338  00208A  6F60               	movwf	_errno& (0+255),b
  1339                           
  1340                           ; BSR set to: 0
  1341  00208C  6991               	setf	?_vsnprintf& (0+255),b
  1342  00208E  6992               	setf	(?_vsnprintf+1)& (0+255),b
  1343  002090  0012               	return	
  1344  002092                     l3427:
  1345                           
  1346                           ; BSR set to: 0
  1347  002092  C091  F09E         	movff	vsnprintf@s,vsnprintf@f
  1348  002096  5193               	movf	(vsnprintf@n+1)& (0+255),w,b
  1349  002098  E104               	bnz	u3390
  1350  00209A  0E02               	movlw	2
  1351  00209C  5D92               	subwf	vsnprintf@n& (0+255),w,b
  1352  00209E  A0D8               	btfss	status,0,c
  1353  0020A0  D00A               	goto	l3433
  1354  0020A2                     u3390:
  1355                           
  1356                           ; BSR set to: 0
  1357  0020A2  0EFF               	movlw	255
  1358  0020A4  2592               	addwf	vsnprintf@n& (0+255),w,b
  1359  0020A6  6FA1               	movwf	(vsnprintf@f+3)& (0+255),b
  1360  0020A8  0EFF               	movlw	255
  1361  0020AA  2193               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  1362  0020AC  6FA2               	movwf	(vsnprintf@f+4)& (0+255),b
  1363                           
  1364                           ; BSR set to: 0
  1365  0020AE  0E00               	movlw	0
  1366  0020B0  6FA0               	movwf	(vsnprintf@f+2)& (0+255),b
  1367  0020B2  0E00               	movlw	0
  1368  0020B4  D007               	goto	L1
  1369  0020B6                     l3433:
  1370                           
  1371                           ; BSR set to: 0
  1372  0020B6  0E00               	movlw	0
  1373  0020B8  6FA2               	movwf	(vsnprintf@f+4)& (0+255),b
  1374  0020BA  0E01               	movlw	1
  1375  0020BC  6FA1               	movwf	(vsnprintf@f+3)& (0+255),b
  1376  0020BE  0E00               	movlw	0
  1377  0020C0  6FA0               	movwf	(vsnprintf@f+2)& (0+255),b
  1378  0020C2  0E01               	movlw	1
  1379  0020C4                     L1:
  1380  0020C4  6F9F               	movwf	(vsnprintf@f+1)& (0+255),b
  1381                           
  1382                           ; BSR set to: 0
  1383  0020C6  0E9E               	movlw	low vsnprintf@f
  1384  0020C8  6F8E               	movwf	vfprintf@fp& (0+255),b
  1385  0020CA  C094  F08F         	movff	vsnprintf@fmt,vfprintf@fmt
  1386  0020CE  C095  F090         	movff	vsnprintf@ap,vfprintf@ap
  1387  0020D2  EC7C  F012         	call	_vfprintf	;wreg free
  1388  0020D6  C08E  F09C         	movff	?_vfprintf,vsnprintf@cnt
  1389  0020DA  C08F  F09D         	movff	?_vfprintf+1,vsnprintf@cnt+1
  1390                           
  1391                           ; BSR set to: 0
  1392  0020DE  5192               	movf	vsnprintf@n& (0+255),w,b
  1393  0020E0  1193               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  1394  0020E2  A4D8               	btfss	status,2,c
  1395                           
  1396                           ; BSR set to: 0
  1397  0020E4  BF9D               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  1398  0020E6  D023               	goto	l3447
  1399                           
  1400                           ; BSR set to: 0
  1401  0020E8  0EFF               	movlw	255
  1402  0020EA  6F96               	movwf	??_vsnprintf& (0+255),b
  1403  0020EC  0EFF               	movlw	255
  1404  0020EE  6F97               	movwf	(??_vsnprintf+1)& (0+255),b
  1405  0020F0  C092  F098         	movff	vsnprintf@n,??_vsnprintf+2
  1406  0020F4  C093  F099         	movff	vsnprintf@n+1,??_vsnprintf+3
  1407  0020F8  5196               	movf	??_vsnprintf& (0+255),w,b
  1408  0020FA  2798               	addwf	(??_vsnprintf+2)& (0+255),f,b
  1409  0020FC  5197               	movf	(??_vsnprintf+1)& (0+255),w,b
  1410  0020FE  2399               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  1411  002100  5198               	movf	(??_vsnprintf+2)& (0+255),w,b
  1412  002102  5D9C               	subwf	vsnprintf@cnt& (0+255),w,b
  1413  002104  5199               	movf	(??_vsnprintf+3)& (0+255),w,b
  1414  002106  599D               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  1415  002108  A0D8               	btfss	status,0,c
  1416  00210A  D007               	goto	l1221
  1417                           
  1418                           ; BSR set to: 0
  1419  00210C  0EFF               	movlw	255
  1420  00210E  2592               	addwf	vsnprintf@n& (0+255),w,b
  1421  002110  6F9A               	movwf	_vsnprintf$1104& (0+255),b
  1422  002112  0EFF               	movlw	255
  1423  002114  2193               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  1424  002116  6F9B               	movwf	(_vsnprintf$1104+1)& (0+255),b
  1425  002118  D004               	goto	l3445
  1426  00211A                     l1221:
  1427                           
  1428                           ; BSR set to: 0
  1429  00211A  C09C  F09A         	movff	vsnprintf@cnt,_vsnprintf$1104
  1430  00211E  C09D  F09B         	movff	vsnprintf@cnt+1,_vsnprintf$1104+1
  1431  002122                     l3445:
  1432                           
  1433                           ; BSR set to: 0
  1434  002122  5191               	movf	vsnprintf@s& (0+255),w,b
  1435  002124  259A               	addwf	_vsnprintf$1104& (0+255),w,b
  1436  002126  6ED9               	movwf	fsr2l,c
  1437  002128  6ADA               	clrf	fsr2h,c
  1438  00212A  0E00               	movlw	0
  1439  00212C  6EDF               	movwf	indf2,c
  1440  00212E                     l3447:
  1441                           
  1442                           ; BSR set to: 0
  1443  00212E  C09C  F091         	movff	vsnprintf@cnt,?_vsnprintf
  1444  002132  C09D  F092         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  1445                           
  1446                           ; BSR set to: 0
  1447  002136  0012               	return		;funcret
  1448  002138                     __end_of_vsnprintf:
  1449                           	opt callstack 0
  1450                           
  1451 ;; *************** function _vfprintf *****************
  1452 ;; Defined at:
  1453 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  1456 ;;		 -> vsnprintf@f(5), 
  1457 ;;  fmt             1    1[BANK0 ] PTR const unsigned char 
  1458 ;;		 -> STR_1(3), 
  1459 ;;  ap              1    2[BANK0 ] PTR PTR void 
  1460 ;;		 -> snprintf@ap(1), 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  cfmt            1   93[COMRAM] PTR unsigned char 
  1463 ;;		 -> STR_1(3), 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  2    0[BANK0 ] int 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 3F/0
  1470 ;;		On exit  : 3F/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1473 ;;      Params:         0       3       0       0       0       0       0       0       0
  1474 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1476 ;;      Totals:         1       3       0       0       0       0       0       0       0
  1477 ;;Total ram usage:        4 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    7
  1480 ;; This function calls:
  1481 ;;		_vfpfcnvrt
  1482 ;; This function is called by:
  1483 ;;		_vsnprintf
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text6
  1488  0024F8                     __ptext6:
  1489                           	opt callstack 0
  1490  0024F8                     _vfprintf:
  1491                           	opt callstack 20
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;incstack = 0
  1498  0024F8  C08F  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1502  0024FC  0E00               	movlw	0
  1503  0024FE  6F63               	movwf	(_nout+1)& (0+255),b
  1504  002500  0E00               	movlw	0
  1505  002502  6F62               	movwf	_nout& (0+255),b
  1506                           
  1507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1508  002504  D00D               	goto	l3309
  1509  002506                     l3307:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1513  002506  C08E  F03E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1514  00250A  0E5E               	movlw	low vfprintf@cfmt
  1515  00250C  6E3F               	movwf	vfpfcnvrt@fmt,c
  1516  00250E  C090  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  1517  002512  EC29  F004         	call	_vfpfcnvrt	;wreg free
  1518  002516  503E               	movf	?_vfpfcnvrt,w,c
  1519  002518  0100               	movlb	0	; () banked
  1520  00251A  2762               	addwf	_nout& (0+255),f,b
  1521  00251C  503F               	movf	?_vfpfcnvrt+1,w,c
  1522  00251E  2363               	addwfc	(_nout+1)& (0+255),f,b
  1523  002520                     l3309:
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1527  002520  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1528  002524                     	if	1	;There is more than 1 active tblptr byte
  1529  002524  0E08               	movlw	high __smallconst
  1530  002526  6EF7               	movwf	tblptrh,c
  1531  002528                     	endif
  1532  002528                     	if	0	;tblptru may be non-zero
  1533  002528                     	endif
  1534  002528                     	if	0	;tblptru may be non-zero
  1535  002528                     	endif
  1536  002528  0008               	tblrd		*
  1537  00252A  50F5               	movf	tablat,w,c
  1538  00252C  0900               	iorlw	0
  1539  00252E  A4D8               	btfss	status,2,c
  1540  002530  D7EA               	goto	l3307
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1544  002532  C062  F08E         	movff	_nout,?_vfprintf
  1545  002536  C063  F08F         	movff	_nout+1,?_vfprintf+1
  1546                           
  1547                           ; BSR set to: 0
  1548  00253A  0012               	return		;funcret
  1549  00253C                     __end_of_vfprintf:
  1550                           	opt callstack 0
  1551                           
  1552 ;; *************** function _vfpfcnvrt *****************
  1553 ;; Defined at:
  1554 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  fp              1   61[COMRAM] PTR struct _IO_FILE
  1557 ;;		 -> vsnprintf@f(5), 
  1558 ;;  fmt             1   62[COMRAM] PTR PTR unsigned char 
  1559 ;;		 -> vfprintf@cfmt(1), 
  1560 ;;  ap              1   63[COMRAM] PTR PTR void 
  1561 ;;		 -> snprintf@ap(1), 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  llu             8   85[COMRAM] unsigned long long 
  1564 ;;  ll              8   75[COMRAM] long long 
  1565 ;;  f               4    0        long long 
  1566 ;;  ct              3    0        unsigned char [3]
  1567 ;;  done            2   68[COMRAM] int 
  1568 ;;  i               2    0        int 
  1569 ;;  c               1   84[COMRAM] unsigned char 
  1570 ;;  vp              1   83[COMRAM] PTR void 
  1571 ;;		 -> ?_snprintf(2), 
  1572 ;;  cp              1   74[COMRAM] PTR unsigned char 
  1573 ;;		 -> ?_snprintf(2), 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2   61[COMRAM] int 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 3F/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1583 ;;      Params:         3       0       0       0       0       0       0       0       0
  1584 ;;      Locals:        25       0       0       0       0       0       0       0       0
  1585 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1586 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1587 ;;Total ram usage:       32 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    6
  1590 ;; This function calls:
  1591 ;;		_atoi
  1592 ;;		_ctoa
  1593 ;;		_dtoa
  1594 ;;		_fputc
  1595 ;;		_isdigit
  1596 ;;		_otoa
  1597 ;;		_stoa
  1598 ;;		_strncmp
  1599 ;;		_utoa
  1600 ;;		_xtoa
  1601 ;; This function is called by:
  1602 ;;		_vfprintf
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text7
  1607  000852                     __ptext7:
  1608                           	opt callstack 0
  1609  000852                     _vfpfcnvrt:
  1610                           	opt callstack 20
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;incstack = 0
  1617  000852  503F               	movf	vfpfcnvrt@fmt,w,c
  1618  000854  6ED9               	movwf	fsr2l,c
  1619  000856  6ADA               	clrf	fsr2h,c
  1620  000858  CFDF FFF6          	movff	indf2,tblptrl
  1621  00085C                     	if	1	;There is more than 1 active tblptr byte
  1622  00085C  0E08               	movlw	high __smallconst
  1623  00085E  6EF7               	movwf	tblptrh,c
  1624  000860                     	endif
  1625  000860                     	if	0	;tblptru may be non-zero
  1626  000860                     	endif
  1627  000860                     	if	0	;tblptru may be non-zero
  1628  000860                     	endif
  1629  000860  0008               	tblrd		*
  1630  000862  50F5               	movf	tablat,w,c
  1631  000864  0A25               	xorlw	37
  1632  000866  A4D8               	btfss	status,2,c
  1633  000868  EF44  F009         	goto	l3289
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1637  00086C  503F               	movf	vfpfcnvrt@fmt,w,c
  1638  00086E  6ED9               	movwf	fsr2l,c
  1639  000870  6ADA               	clrf	fsr2h,c
  1640  000872  2ADF               	incf	indf2,f,c
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1644  000874  0E00               	movlw	0
  1645  000876  6F65               	movwf	(_width+1)& (0+255),b
  1646  000878  0E00               	movlw	0
  1647  00087A  6F64               	movwf	_width& (0+255),b
  1648  00087C  C064  F068         	movff	_width,_flags
  1649  000880  C065  F069         	movff	_width+1,_flags+1
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1653  000884  6966               	setf	_prec& (0+255),b
  1654  000886  6967               	setf	(_prec+1)& (0+255),b
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1658  000888  0E00               	movlw	0
  1659  00088A  6E46               	movwf	vfpfcnvrt@done+1,c
  1660  00088C  0E00               	movlw	0
  1661  00088E  D011               	goto	L2
  1662  000890                     l2967:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1666  000890  8168               	bsf	_flags& (0+255),0,b
  1667  000892                     l2969:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1671  000892  503F               	movf	vfpfcnvrt@fmt,w,c
  1672  000894  6ED9               	movwf	fsr2l,c
  1673  000896  6ADA               	clrf	fsr2h,c
  1674  000898  2ADF               	incf	indf2,f,c
  1675                           
  1676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1677  00089A  D02D               	goto	l2993
  1678  00089C                     l2971:
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1682  00089C  8368               	bsf	_flags& (0+255),1,b
  1683  00089E  D7F9               	goto	l2969
  1684  0008A0                     l2975:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1688  0008A0  8568               	bsf	_flags& (0+255),2,b
  1689  0008A2  D7F7               	goto	l2969
  1690  0008A4                     l2979:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1694  0008A4  8768               	bsf	_flags& (0+255),3,b
  1695  0008A6  D7F5               	goto	l2969
  1696  0008A8                     l2983:
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1700  0008A8  8968               	bsf	_flags& (0+255),4,b
  1701  0008AA  D7F3               	goto	l2969
  1702  0008AC                     l2987:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1706  0008AC  0E00               	movlw	0
  1707  0008AE  6E46               	movwf	vfpfcnvrt@done+1,c
  1708  0008B0  0E01               	movlw	1
  1709  0008B2                     L2:
  1710  0008B2  6E45               	movwf	vfpfcnvrt@done,c
  1711                           
  1712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1713  0008B4  D020               	goto	l2993
  1714  0008B6                     l2991:
  1715                           
  1716                           ; BSR set to: 0
  1717  0008B6  503F               	movf	vfpfcnvrt@fmt,w,c
  1718  0008B8  6ED9               	movwf	fsr2l,c
  1719  0008BA  6ADA               	clrf	fsr2h,c
  1720  0008BC  CFDF FFF6          	movff	indf2,tblptrl
  1721  0008C0                     	if	1	;There is more than 1 active tblptr byte
  1722  0008C0  0E08               	movlw	high __smallconst
  1723  0008C2  6EF7               	movwf	tblptrh,c
  1724  0008C4                     	endif
  1725  0008C4                     	if	0	;tblptru may be non-zero
  1726  0008C4                     	endif
  1727  0008C4                     	if	0	;tblptru may be non-zero
  1728  0008C4                     	endif
  1729  0008C4  0008               	tblrd		*
  1730  0008C6  50F5               	movf	tablat,w,c
  1731  0008C8  6E41               	movwf	??_vfpfcnvrt& (0+255),c
  1732  0008CA  6A42               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1733                           
  1734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1735                           ; Switch size 1, requested type "simple"
  1736                           ; Number of cases is 1, Range of values is 0 to 0
  1737                           ; switch strategies available:
  1738                           ; Name         Instructions Cycles
  1739                           ; simple_byte            4     3 (average)
  1740                           ;	Chosen strategy is simple_byte
  1741  0008CC  5042               	movf	??_vfpfcnvrt+1,w,c
  1742  0008CE  0A00               	xorlw	0	; case 0
  1743  0008D0  A4D8               	btfss	status,2,c
  1744  0008D2  D7EC               	goto	l2987
  1745                           
  1746                           ; BSR set to: 0
  1747                           ; Switch size 1, requested type "simple"
  1748                           ; Number of cases is 5, Range of values is 32 to 48
  1749                           ; switch strategies available:
  1750                           ; Name         Instructions Cycles
  1751                           ; simple_byte           16     9 (average)
  1752                           ;	Chosen strategy is simple_byte
  1753  0008D4  5041               	movf	??_vfpfcnvrt,w,c
  1754  0008D6  0A20               	xorlw	32	; case 32
  1755  0008D8  B4D8               	btfsc	status,2,c
  1756  0008DA  D7E4               	goto	l2979
  1757  0008DC  0A03               	xorlw	3	; case 35
  1758  0008DE  B4D8               	btfsc	status,2,c
  1759  0008E0  D7E3               	goto	l2983
  1760  0008E2  0A08               	xorlw	8	; case 43
  1761  0008E4  B4D8               	btfsc	status,2,c
  1762  0008E6  D7DC               	goto	l2975
  1763  0008E8  0A06               	xorlw	6	; case 45
  1764  0008EA  B4D8               	btfsc	status,2,c
  1765  0008EC  D7D1               	goto	l2967
  1766  0008EE  0A1D               	xorlw	29	; case 48
  1767  0008F0  B4D8               	btfsc	status,2,c
  1768  0008F2  D7D4               	goto	l2971
  1769  0008F4  D7DB               	goto	l2987
  1770  0008F6                     l2993:
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1774  0008F6  5045               	movf	vfpfcnvrt@done,w,c
  1775  0008F8  1046               	iorwf	vfpfcnvrt@done+1,w,c
  1776  0008FA  B4D8               	btfsc	status,2,c
  1777  0008FC  D7DC               	goto	l2991
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1781  0008FE  B168               	btfsc	_flags& (0+255),0,b
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1785  000900  9368               	bcf	_flags& (0+255),1,b
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1789  000902  503F               	movf	vfpfcnvrt@fmt,w,c
  1790  000904  6ED9               	movwf	fsr2l,c
  1791  000906  6ADA               	clrf	fsr2h,c
  1792  000908  CFDF FFF6          	movff	indf2,tblptrl
  1793  00090C                     	if	1	;There is more than 1 active tblptr byte
  1794  00090C  0E08               	movlw	high __smallconst
  1795  00090E  6EF7               	movwf	tblptrh,c
  1796  000910                     	endif
  1797  000910                     	if	0	;tblptru may be non-zero
  1798  000910                     	endif
  1799  000910                     	if	0	;tblptru may be non-zero
  1800  000910                     	endif
  1801  000910  0008               	tblrd		*
  1802  000912  50F5               	movf	tablat,w,c
  1803  000914  0A2A               	xorlw	42
  1804  000916  A4D8               	btfss	status,2,c
  1805  000918  D018               	goto	l3007
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1809  00091A  503F               	movf	vfpfcnvrt@fmt,w,c
  1810  00091C  6ED9               	movwf	fsr2l,c
  1811  00091E  6ADA               	clrf	fsr2h,c
  1812  000920  2ADF               	incf	indf2,f,c
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1816  000922  5040               	movf	vfpfcnvrt@ap,w,c
  1817  000924  6ED9               	movwf	fsr2l,c
  1818  000926  6ADA               	clrf	fsr2h,c
  1819  000928  0E02               	movlw	2
  1820  00092A  26DF               	addwf	indf2,f,c
  1821  00092C  5CDF               	subwf	indf2,w,c
  1822  00092E  6ED9               	movwf	fsr2l,c
  1823  000930  6ADA               	clrf	fsr2h,c
  1824  000932  CFDE F064          	movff	postinc2,_width
  1825  000936  CFDE F065          	movff	postinc2,_width+1
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1829  00093A  AF65               	btfss	(_width+1)& (0+255),7,b
  1830  00093C  D038               	goto	u2980
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1834  00093E  8168               	bsf	_flags& (0+255),0,b
  1835                           
  1836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1837  000940  6D64               	negf	_width& (0+255),b
  1838  000942  1F65               	comf	(_width+1)& (0+255),f,b
  1839  000944  B0D8               	btfsc	status,0,c
  1840  000946  2B65               	incf	(_width+1)& (0+255),f,b
  1841  000948  D032               	goto	u2980
  1842  00094A                     l3007:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1846  00094A  503F               	movf	vfpfcnvrt@fmt,w,c
  1847  00094C  6ED9               	movwf	fsr2l,c
  1848  00094E  6ADA               	clrf	fsr2h,c
  1849  000950  50DF               	movf	indf2,w,c
  1850  000952  6E08               	movwf	atoi@s,c
  1851  000954  ECAC  F00D         	call	_atoi	;wreg free
  1852  000958  C008  F064         	movff	?_atoi,_width
  1853  00095C  C009  F065         	movff	?_atoi+1,_width+1
  1854                           
  1855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1856  000960  D004               	goto	l3011
  1857  000962                     l3009:
  1858                           
  1859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1860  000962  503F               	movf	vfpfcnvrt@fmt,w,c
  1861  000964  6ED9               	movwf	fsr2l,c
  1862  000966  6ADA               	clrf	fsr2h,c
  1863  000968  2ADF               	incf	indf2,f,c
  1864  00096A                     l3011:
  1865  00096A  0ED0               	movlw	208
  1866  00096C  6E41               	movwf	??_vfpfcnvrt& (0+255),c
  1867  00096E  0EFF               	movlw	255
  1868  000970  6E42               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1869  000972  503F               	movf	vfpfcnvrt@fmt,w,c
  1870  000974  6ED9               	movwf	fsr2l,c
  1871  000976  6ADA               	clrf	fsr2h,c
  1872  000978  CFDF FFF6          	movff	indf2,tblptrl
  1873  00097C                     	if	1	;There is more than 1 active tblptr byte
  1874  00097C  0E08               	movlw	high __smallconst
  1875  00097E  6EF7               	movwf	tblptrh,c
  1876  000980                     	endif
  1877  000980                     	if	0	;tblptru may be non-zero
  1878  000980                     	endif
  1879  000980                     	if	0	;tblptru may be non-zero
  1880  000980                     	endif
  1881  000980  0008               	tblrd		*
  1882  000982  50F5               	movf	tablat,w,c
  1883  000984  6E43               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1884  000986  6A44               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1885  000988  5041               	movf	??_vfpfcnvrt,w,c
  1886  00098A  2643               	addwf	??_vfpfcnvrt+2,f,c
  1887  00098C  5042               	movf	??_vfpfcnvrt+1,w,c
  1888  00098E  2244               	addwfc	??_vfpfcnvrt+3,f,c
  1889  000990  5044               	movf	??_vfpfcnvrt+3,w,c
  1890  000992  E106               	bnz	u2960
  1891  000994  0E0A               	movlw	10
  1892  000996  5C43               	subwf	??_vfpfcnvrt+2,w,c
  1893  000998  B0D8               	btfsc	status,0,c
  1894  00099A  D002               	goto	u2960
  1895  00099C  0E01               	movlw	1
  1896  00099E  D001               	goto	u2970
  1897  0009A0                     u2960:
  1898  0009A0  0E00               	movlw	0
  1899  0009A2                     u2970:
  1900  0009A2  6E47               	movwf	_vfpfcnvrt$403,c
  1901  0009A4  6A48               	clrf	_vfpfcnvrt$403+1,c
  1902  0009A6  5047               	movf	_vfpfcnvrt$403,w,c
  1903  0009A8  1048               	iorwf	_vfpfcnvrt$403+1,w,c
  1904  0009AA  A4D8               	btfss	status,2,c
  1905  0009AC  D7DA               	goto	l3009
  1906  0009AE                     u2980:
  1907                           
  1908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1909  0009AE  503F               	movf	vfpfcnvrt@fmt,w,c
  1910  0009B0  6ED9               	movwf	fsr2l,c
  1911  0009B2  6ADA               	clrf	fsr2h,c
  1912  0009B4  CFDF FFF6          	movff	indf2,tblptrl
  1913  0009B8                     	if	1	;There is more than 1 active tblptr byte
  1914  0009B8  0E08               	movlw	high __smallconst
  1915  0009BA  6EF7               	movwf	tblptrh,c
  1916  0009BC                     	endif
  1917  0009BC                     	if	0	;tblptru may be non-zero
  1918  0009BC                     	endif
  1919  0009BC                     	if	0	;tblptru may be non-zero
  1920  0009BC                     	endif
  1921  0009BC  0008               	tblrd		*
  1922  0009BE  50F5               	movf	tablat,w,c
  1923  0009C0  0A2E               	xorlw	46
  1924  0009C2  A4D8               	btfss	status,2,c
  1925  0009C4  D058               	goto	u3030
  1926                           
  1927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1928  0009C6  0E00               	movlw	0
  1929  0009C8  0100               	movlb	0	; () banked
  1930  0009CA  6F67               	movwf	(_prec+1)& (0+255),b
  1931  0009CC  0E00               	movlw	0
  1932  0009CE  6F66               	movwf	_prec& (0+255),b
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1936  0009D0  503F               	movf	vfpfcnvrt@fmt,w,c
  1937  0009D2  6ED9               	movwf	fsr2l,c
  1938  0009D4  6ADA               	clrf	fsr2h,c
  1939  0009D6  2ADF               	incf	indf2,f,c
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1943  0009D8  503F               	movf	vfpfcnvrt@fmt,w,c
  1944  0009DA  6ED9               	movwf	fsr2l,c
  1945  0009DC  6ADA               	clrf	fsr2h,c
  1946  0009DE  CFDF FFF6          	movff	indf2,tblptrl
  1947  0009E2                     	if	1	;There is more than 1 active tblptr byte
  1948  0009E2  0E08               	movlw	high __smallconst
  1949  0009E4  6EF7               	movwf	tblptrh,c
  1950  0009E6                     	endif
  1951  0009E6                     	if	0	;tblptru may be non-zero
  1952  0009E6                     	endif
  1953  0009E6                     	if	0	;tblptru may be non-zero
  1954  0009E6                     	endif
  1955  0009E6  0008               	tblrd		*
  1956  0009E8  50F5               	movf	tablat,w,c
  1957  0009EA  0A2A               	xorlw	42
  1958  0009EC  A4D8               	btfss	status,2,c
  1959  0009EE  D011               	goto	l3029
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1963  0009F0  503F               	movf	vfpfcnvrt@fmt,w,c
  1964  0009F2  6ED9               	movwf	fsr2l,c
  1965  0009F4  6ADA               	clrf	fsr2h,c
  1966  0009F6  2ADF               	incf	indf2,f,c
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1970  0009F8  5040               	movf	vfpfcnvrt@ap,w,c
  1971  0009FA  6ED9               	movwf	fsr2l,c
  1972  0009FC  6ADA               	clrf	fsr2h,c
  1973  0009FE  0E02               	movlw	2
  1974  000A00  26DF               	addwf	indf2,f,c
  1975  000A02  5CDF               	subwf	indf2,w,c
  1976  000A04  6ED9               	movwf	fsr2l,c
  1977  000A06  6ADA               	clrf	fsr2h,c
  1978  000A08  CFDE F066          	movff	postinc2,_prec
  1979  000A0C  CFDE F067          	movff	postinc2,_prec+1
  1980                           
  1981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1982  000A10  D032               	goto	u3030
  1983  000A12                     l3029:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1987  000A12  503F               	movf	vfpfcnvrt@fmt,w,c
  1988  000A14  6ED9               	movwf	fsr2l,c
  1989  000A16  6ADA               	clrf	fsr2h,c
  1990  000A18  50DF               	movf	indf2,w,c
  1991  000A1A  6E08               	movwf	atoi@s,c
  1992  000A1C  ECAC  F00D         	call	_atoi	;wreg free
  1993  000A20  C008  F066         	movff	?_atoi,_prec
  1994  000A24  C009  F067         	movff	?_atoi+1,_prec+1
  1995                           
  1996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1997  000A28  D004               	goto	l3033
  1998  000A2A                     l3031:
  1999                           
  2000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2001  000A2A  503F               	movf	vfpfcnvrt@fmt,w,c
  2002  000A2C  6ED9               	movwf	fsr2l,c
  2003  000A2E  6ADA               	clrf	fsr2h,c
  2004  000A30  2ADF               	incf	indf2,f,c
  2005  000A32                     l3033:
  2006  000A32  0ED0               	movlw	208
  2007  000A34  6E41               	movwf	??_vfpfcnvrt& (0+255),c
  2008  000A36  0EFF               	movlw	255
  2009  000A38  6E42               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2010  000A3A  503F               	movf	vfpfcnvrt@fmt,w,c
  2011  000A3C  6ED9               	movwf	fsr2l,c
  2012  000A3E  6ADA               	clrf	fsr2h,c
  2013  000A40  CFDF FFF6          	movff	indf2,tblptrl
  2014  000A44                     	if	1	;There is more than 1 active tblptr byte
  2015  000A44  0E08               	movlw	high __smallconst
  2016  000A46  6EF7               	movwf	tblptrh,c
  2017  000A48                     	endif
  2018  000A48                     	if	0	;tblptru may be non-zero
  2019  000A48                     	endif
  2020  000A48                     	if	0	;tblptru may be non-zero
  2021  000A48                     	endif
  2022  000A48  0008               	tblrd		*
  2023  000A4A  50F5               	movf	tablat,w,c
  2024  000A4C  6E43               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2025  000A4E  6A44               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2026  000A50  5041               	movf	??_vfpfcnvrt,w,c
  2027  000A52  2643               	addwf	??_vfpfcnvrt+2,f,c
  2028  000A54  5042               	movf	??_vfpfcnvrt+1,w,c
  2029  000A56  2244               	addwfc	??_vfpfcnvrt+3,f,c
  2030  000A58  5044               	movf	??_vfpfcnvrt+3,w,c
  2031  000A5A  E106               	bnz	u3010
  2032  000A5C  0E0A               	movlw	10
  2033  000A5E  5C43               	subwf	??_vfpfcnvrt+2,w,c
  2034  000A60  B0D8               	btfsc	status,0,c
  2035  000A62  D002               	goto	u3010
  2036  000A64  0E01               	movlw	1
  2037  000A66  D001               	goto	u3020
  2038  000A68                     u3010:
  2039  000A68  0E00               	movlw	0
  2040  000A6A                     u3020:
  2041  000A6A  6E49               	movwf	_vfpfcnvrt$404,c
  2042  000A6C  6A4A               	clrf	_vfpfcnvrt$404+1,c
  2043  000A6E  5049               	movf	_vfpfcnvrt$404,w,c
  2044  000A70  104A               	iorwf	_vfpfcnvrt$404+1,w,c
  2045  000A72  A4D8               	btfss	status,2,c
  2046  000A74  D7DA               	goto	l3031
  2047  000A76                     u3030:
  2048                           
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2050  000A76  503F               	movf	vfpfcnvrt@fmt,w,c
  2051  000A78  6ED9               	movwf	fsr2l,c
  2052  000A7A  6ADA               	clrf	fsr2h,c
  2053  000A7C  CFDF FFF6          	movff	indf2,tblptrl
  2054  000A80                     	if	1	;There is more than 1 active tblptr byte
  2055  000A80  0E08               	movlw	high __smallconst
  2056  000A82  6EF7               	movwf	tblptrh,c
  2057  000A84                     	endif
  2058  000A84                     	if	0	;tblptru may be non-zero
  2059  000A84                     	endif
  2060  000A84                     	if	0	;tblptru may be non-zero
  2061  000A84                     	endif
  2062  000A84  0008               	tblrd		*
  2063  000A86  50F5               	movf	tablat,w,c
  2064  000A88  0A63               	xorlw	99
  2065  000A8A  A4D8               	btfss	status,2,c
  2066  000A8C  D019               	goto	l3049
  2067                           
  2068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2069  000A8E  503F               	movf	vfpfcnvrt@fmt,w,c
  2070  000A90  6ED9               	movwf	fsr2l,c
  2071  000A92  6ADA               	clrf	fsr2h,c
  2072  000A94  2ADF               	incf	indf2,f,c
  2073                           
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2075  000A96  5040               	movf	vfpfcnvrt@ap,w,c
  2076  000A98  6ED9               	movwf	fsr2l,c
  2077  000A9A  6ADA               	clrf	fsr2h,c
  2078  000A9C  50DF               	movf	indf2,w,c
  2079  000A9E  2ADF               	incf	indf2,f,c
  2080  000AA0  2ADF               	incf	indf2,f,c
  2081  000AA2  6ED9               	movwf	fsr2l,c
  2082  000AA4  6ADA               	clrf	fsr2h,c
  2083  000AA6  50DF               	movf	indf2,w,c
  2084  000AA8  6E55               	movwf	vfpfcnvrt@c,c
  2085                           
  2086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2087  000AAA  C03E  F017         	movff	vfpfcnvrt@fp,ctoa@fp
  2088  000AAE  C055  F018         	movff	vfpfcnvrt@c,ctoa@c
  2089  000AB2  EC59  F012         	call	_ctoa	;wreg free
  2090  000AB6  C017  F03E         	movff	?_ctoa,?_vfpfcnvrt
  2091  000ABA  C018  F03F         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2092  000ABE  0012               	return	
  2093  000AC0                     l3049:
  2094                           
  2095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  2096  000AC0  503F               	movf	vfpfcnvrt@fmt,w,c
  2097  000AC2  6ED9               	movwf	fsr2l,c
  2098  000AC4  6ADA               	clrf	fsr2h,c
  2099  000AC6  50DF               	movf	indf2,w,c
  2100  000AC8  6E01               	movwf	strncmp@_l,c
  2101  000ACA  0E20               	movlw	low STR_2
  2102  000ACC  6E02               	movwf	strncmp@_r,c
  2103  000ACE  0E00               	movlw	0
  2104  000AD0  6E04               	movwf	strncmp@n+1,c
  2105  000AD2  0E03               	movlw	3
  2106  000AD4  6E03               	movwf	strncmp@n,c
  2107  000AD6  ECF3  F010         	call	_strncmp	;wreg free
  2108  000ADA  5001               	movf	?_strncmp,w,c
  2109  000ADC  1002               	iorwf	?_strncmp+1,w,c
  2110  000ADE  B4D8               	btfsc	status,2,c
  2111  000AE0  D011               	goto	u3060
  2112  000AE2  503F               	movf	vfpfcnvrt@fmt,w,c
  2113  000AE4  6ED9               	movwf	fsr2l,c
  2114  000AE6  6ADA               	clrf	fsr2h,c
  2115  000AE8  50DF               	movf	indf2,w,c
  2116  000AEA  6E01               	movwf	strncmp@_l,c
  2117  000AEC  0E24               	movlw	low STR_6
  2118  000AEE  6E02               	movwf	strncmp@_r,c
  2119  000AF0  0E00               	movlw	0
  2120  000AF2  6E04               	movwf	strncmp@n+1,c
  2121  000AF4  0E03               	movlw	3
  2122  000AF6  6E03               	movwf	strncmp@n,c
  2123  000AF8  ECF3  F010         	call	_strncmp	;wreg free
  2124  000AFC  5001               	movf	?_strncmp,w,c
  2125  000AFE  1002               	iorwf	?_strncmp+1,w,c
  2126  000B00  A4D8               	btfss	status,2,c
  2127  000B02  D032               	goto	l3059
  2128  000B04                     u3060:
  2129                           
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  2131  000B04  503F               	movf	vfpfcnvrt@fmt,w,c
  2132  000B06  6ED9               	movwf	fsr2l,c
  2133  000B08  6ADA               	clrf	fsr2h,c
  2134  000B0A  0E03               	movlw	3
  2135  000B0C  26DF               	addwf	indf2,f,c
  2136                           
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2138  000B0E  5040               	movf	vfpfcnvrt@ap,w,c
  2139  000B10  6ED9               	movwf	fsr2l,c
  2140  000B12  6ADA               	clrf	fsr2h,c
  2141  000B14  50DF               	movf	indf2,w,c
  2142  000B16  2ADF               	incf	indf2,f,c
  2143  000B18  2ADF               	incf	indf2,f,c
  2144  000B1A  6ED9               	movwf	fsr2l,c
  2145  000B1C  6ADA               	clrf	fsr2h,c
  2146  000B1E  50DF               	movf	indf2,w,c
  2147  000B20  6E4C               	movwf	vfpfcnvrt@ll,c
  2148  000B22  0E00               	movlw	0
  2149  000B24  BE4C               	btfsc	vfpfcnvrt@ll,7,c
  2150  000B26  0EFF               	movlw	-1
  2151  000B28  6E4D               	movwf	vfpfcnvrt@ll+1,c
  2152  000B2A                     L3:
  2153  000B2A  6E4E               	movwf	vfpfcnvrt@ll+2,c
  2154  000B2C  6E4F               	movwf	vfpfcnvrt@ll+3,c
  2155  000B2E  6E50               	movwf	vfpfcnvrt@ll+4,c
  2156  000B30  6E51               	movwf	vfpfcnvrt@ll+5,c
  2157  000B32  6E52               	movwf	vfpfcnvrt@ll+6,c
  2158  000B34  6E53               	movwf	vfpfcnvrt@ll+7,c
  2159  000B36                     l3055:
  2160                           
  2161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  2162  000B36  C03E  F01B         	movff	vfpfcnvrt@fp,dtoa@fp
  2163  000B3A  C04C  F01C         	movff	vfpfcnvrt@ll,dtoa@d
  2164  000B3E  C04D  F01D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2165  000B42  C04E  F01E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2166  000B46  C04F  F01F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2167  000B4A  C050  F020         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2168  000B4E  C051  F021         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2169  000B52  C052  F022         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2170  000B56  C053  F023         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2171  000B5A  EC58  F009         	call	_dtoa	;wreg free
  2172  000B5E  C01B  F03E         	movff	?_dtoa,?_vfpfcnvrt
  2173  000B62  C01C  F03F         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2174  000B66  0012               	return	
  2175  000B68                     l3059:
  2176                           
  2177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  2178  000B68  503F               	movf	vfpfcnvrt@fmt,w,c
  2179  000B6A  6ED9               	movwf	fsr2l,c
  2180  000B6C  6ADA               	clrf	fsr2h,c
  2181  000B6E  50DF               	movf	indf2,w,c
  2182  000B70  6E01               	movwf	strncmp@_l,c
  2183  000B72  0E21               	movlw	low (STR_2+1)
  2184  000B74  6E02               	movwf	strncmp@_r,c
  2185  000B76  0E00               	movlw	0
  2186  000B78  6E04               	movwf	strncmp@n+1,c
  2187  000B7A  0E02               	movlw	2
  2188  000B7C  6E03               	movwf	strncmp@n,c
  2189  000B7E  ECF3  F010         	call	_strncmp	;wreg free
  2190  000B82  5001               	movf	?_strncmp,w,c
  2191  000B84  1002               	iorwf	?_strncmp+1,w,c
  2192  000B86  B4D8               	btfsc	status,2,c
  2193  000B88  D011               	goto	u3080
  2194  000B8A  503F               	movf	vfpfcnvrt@fmt,w,c
  2195  000B8C  6ED9               	movwf	fsr2l,c
  2196  000B8E  6ADA               	clrf	fsr2h,c
  2197  000B90  50DF               	movf	indf2,w,c
  2198  000B92  6E01               	movwf	strncmp@_l,c
  2199  000B94  0E25               	movlw	low (STR_6+1)
  2200  000B96  6E02               	movwf	strncmp@_r,c
  2201  000B98  0E00               	movlw	0
  2202  000B9A  6E04               	movwf	strncmp@n+1,c
  2203  000B9C  0E02               	movlw	2
  2204  000B9E  6E03               	movwf	strncmp@n,c
  2205  000BA0  ECF3  F010         	call	_strncmp	;wreg free
  2206  000BA4  5001               	movf	?_strncmp,w,c
  2207  000BA6  1002               	iorwf	?_strncmp+1,w,c
  2208  000BA8  A4D8               	btfss	status,2,c
  2209  000BAA  D006               	goto	l3069
  2210  000BAC                     u3080:
  2211                           
  2212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  2213  000BAC  503F               	movf	vfpfcnvrt@fmt,w,c
  2214  000BAE  6ED9               	movwf	fsr2l,c
  2215  000BB0  6ADA               	clrf	fsr2h,c
  2216  000BB2  0E02               	movlw	2
  2217  000BB4  26DF               	addwf	indf2,f,c
  2218  000BB6  D01C               	goto	l3075
  2219  000BB8                     l3069:
  2220                           
  2221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2222  000BB8  503F               	movf	vfpfcnvrt@fmt,w,c
  2223  000BBA  6ED9               	movwf	fsr2l,c
  2224  000BBC  6ADA               	clrf	fsr2h,c
  2225  000BBE  CFDF FFF6          	movff	indf2,tblptrl
  2226  000BC2                     	if	1	;There is more than 1 active tblptr byte
  2227  000BC2  0E08               	movlw	high __smallconst
  2228  000BC4  6EF7               	movwf	tblptrh,c
  2229  000BC6                     	endif
  2230  000BC6                     	if	0	;tblptru may be non-zero
  2231  000BC6                     	endif
  2232  000BC6                     	if	0	;tblptru may be non-zero
  2233  000BC6                     	endif
  2234  000BC6  0008               	tblrd		*
  2235  000BC8  50F5               	movf	tablat,w,c
  2236  000BCA  0A64               	xorlw	100
  2237  000BCC  B4D8               	btfsc	status,2,c
  2238  000BCE  D00C               	goto	u3100
  2239  000BD0  503F               	movf	vfpfcnvrt@fmt,w,c
  2240  000BD2  6ED9               	movwf	fsr2l,c
  2241  000BD4  6ADA               	clrf	fsr2h,c
  2242  000BD6  CFDF FFF6          	movff	indf2,tblptrl
  2243  000BDA                     	if	1	;There is more than 1 active tblptr byte
  2244  000BDA  0E08               	movlw	high __smallconst
  2245  000BDC  6EF7               	movwf	tblptrh,c
  2246  000BDE                     	endif
  2247  000BDE                     	if	0	;tblptru may be non-zero
  2248  000BDE                     	endif
  2249  000BDE                     	if	0	;tblptru may be non-zero
  2250  000BDE                     	endif
  2251  000BDE  0008               	tblrd		*
  2252  000BE0  50F5               	movf	tablat,w,c
  2253  000BE2  0A69               	xorlw	105
  2254  000BE4  A4D8               	btfss	status,2,c
  2255  000BE6  D014               	goto	l3081
  2256  000BE8                     u3100:
  2257                           
  2258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2259  000BE8  503F               	movf	vfpfcnvrt@fmt,w,c
  2260  000BEA  6ED9               	movwf	fsr2l,c
  2261  000BEC  6ADA               	clrf	fsr2h,c
  2262  000BEE  2ADF               	incf	indf2,f,c
  2263  000BF0                     l3075:
  2264                           
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2266  000BF0  5040               	movf	vfpfcnvrt@ap,w,c
  2267  000BF2  6ED9               	movwf	fsr2l,c
  2268  000BF4  6ADA               	clrf	fsr2h,c
  2269  000BF6  50DF               	movf	indf2,w,c
  2270  000BF8  2ADF               	incf	indf2,f,c
  2271  000BFA  2ADF               	incf	indf2,f,c
  2272  000BFC  6ED9               	movwf	fsr2l,c
  2273  000BFE  6ADA               	clrf	fsr2h,c
  2274  000C00  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  2275  000C04  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  2276  000C08  0E00               	movlw	0
  2277  000C0A  BE4D               	btfsc	vfpfcnvrt@ll+1,7,c
  2278  000C0C  0EFF               	movlw	-1
  2279  000C0E  D78D               	goto	L3
  2280  000C10                     l3081:
  2281                           
  2282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  2283  000C10  503F               	movf	vfpfcnvrt@fmt,w,c
  2284  000C12  6ED9               	movwf	fsr2l,c
  2285  000C14  6ADA               	clrf	fsr2h,c
  2286  000C16  50DF               	movf	indf2,w,c
  2287  000C18  6E01               	movwf	strncmp@_l,c
  2288  000C1A  0E3B               	movlw	low STR_20
  2289  000C1C  6E02               	movwf	strncmp@_r,c
  2290  000C1E  0E00               	movlw	0
  2291  000C20  6E04               	movwf	strncmp@n+1,c
  2292  000C22  0E02               	movlw	2
  2293  000C24  6E03               	movwf	strncmp@n,c
  2294  000C26  ECF3  F010         	call	_strncmp	;wreg free
  2295  000C2A  5001               	movf	?_strncmp,w,c
  2296  000C2C  1002               	iorwf	?_strncmp+1,w,c
  2297  000C2E  B4D8               	btfsc	status,2,c
  2298  000C30  D011               	goto	u3120
  2299  000C32  503F               	movf	vfpfcnvrt@fmt,w,c
  2300  000C34  6ED9               	movwf	fsr2l,c
  2301  000C36  6ADA               	clrf	fsr2h,c
  2302  000C38  50DF               	movf	indf2,w,c
  2303  000C3A  6E01               	movwf	strncmp@_l,c
  2304  000C3C  0E3E               	movlw	low STR_24
  2305  000C3E  6E02               	movwf	strncmp@_r,c
  2306  000C40  0E00               	movlw	0
  2307  000C42  6E04               	movwf	strncmp@n+1,c
  2308  000C44  0E02               	movlw	2
  2309  000C46  6E03               	movwf	strncmp@n,c
  2310  000C48  ECF3  F010         	call	_strncmp	;wreg free
  2311  000C4C  5001               	movf	?_strncmp,w,c
  2312  000C4E  1002               	iorwf	?_strncmp+1,w,c
  2313  000C50  A4D8               	btfss	status,2,c
  2314  000C52  D01C               	goto	l3091
  2315  000C54                     u3120:
  2316                           
  2317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  2318  000C54  503F               	movf	vfpfcnvrt@fmt,w,c
  2319  000C56  6ED9               	movwf	fsr2l,c
  2320  000C58  6ADA               	clrf	fsr2h,c
  2321  000C5A  0E02               	movlw	2
  2322  000C5C  26DF               	addwf	indf2,f,c
  2323                           
  2324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2325  000C5E  5040               	movf	vfpfcnvrt@ap,w,c
  2326  000C60  6ED9               	movwf	fsr2l,c
  2327  000C62  6ADA               	clrf	fsr2h,c
  2328  000C64  50DF               	movf	indf2,w,c
  2329  000C66  2ADF               	incf	indf2,f,c
  2330  000C68  2ADF               	incf	indf2,f,c
  2331  000C6A  6ED9               	movwf	fsr2l,c
  2332  000C6C  6ADA               	clrf	fsr2h,c
  2333  000C6E  CFDE F041          	movff	postinc2,??_vfpfcnvrt
  2334  000C72  CFDD F042          	movff	postdec2,??_vfpfcnvrt+1
  2335  000C76  C041  F04C         	movff	??_vfpfcnvrt,vfpfcnvrt@ll
  2336  000C7A  C042  F04D         	movff	??_vfpfcnvrt+1,vfpfcnvrt@ll+1
  2337  000C7E  6A4E               	clrf	vfpfcnvrt@ll+2,c
  2338  000C80  6A4F               	clrf	vfpfcnvrt@ll+3,c
  2339  000C82  6A50               	clrf	vfpfcnvrt@ll+4,c
  2340  000C84  6A51               	clrf	vfpfcnvrt@ll+5,c
  2341  000C86  6A52               	clrf	vfpfcnvrt@ll+6,c
  2342  000C88  6A53               	clrf	vfpfcnvrt@ll+7,c
  2343  000C8A  D755               	goto	l3055
  2344  000C8C                     l3091:
  2345                           
  2346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2347  000C8C  503F               	movf	vfpfcnvrt@fmt,w,c
  2348  000C8E  6ED9               	movwf	fsr2l,c
  2349  000C90  6ADA               	clrf	fsr2h,c
  2350  000C92  50DF               	movf	indf2,w,c
  2351  000C94  6E01               	movwf	strncmp@_l,c
  2352  000C96  0E2C               	movlw	low STR_29
  2353  000C98  6E02               	movwf	strncmp@_r,c
  2354  000C9A  0E00               	movlw	0
  2355  000C9C  6E04               	movwf	strncmp@n+1,c
  2356  000C9E  0E03               	movlw	3
  2357  000CA0  6E03               	movwf	strncmp@n,c
  2358  000CA2  ECF3  F010         	call	_strncmp	;wreg free
  2359  000CA6  5001               	movf	?_strncmp,w,c
  2360  000CA8  1002               	iorwf	?_strncmp+1,w,c
  2361  000CAA  A4D8               	btfss	status,2,c
  2362  000CAC  D031               	goto	l3101
  2363                           
  2364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  2365  000CAE  503F               	movf	vfpfcnvrt@fmt,w,c
  2366  000CB0  6ED9               	movwf	fsr2l,c
  2367  000CB2  6ADA               	clrf	fsr2h,c
  2368  000CB4  0E03               	movlw	3
  2369  000CB6  26DF               	addwf	indf2,f,c
  2370                           
  2371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2372  000CB8  5040               	movf	vfpfcnvrt@ap,w,c
  2373  000CBA  6ED9               	movwf	fsr2l,c
  2374  000CBC  6ADA               	clrf	fsr2h,c
  2375  000CBE  50DF               	movf	indf2,w,c
  2376  000CC0  2ADF               	incf	indf2,f,c
  2377  000CC2  2ADF               	incf	indf2,f,c
  2378  000CC4  6ED9               	movwf	fsr2l,c
  2379  000CC6  6ADA               	clrf	fsr2h,c
  2380  000CC8  50DF               	movf	indf2,w,c
  2381  000CCA  6E41               	movwf	??_vfpfcnvrt& (0+255),c
  2382  000CCC  5041               	movf	??_vfpfcnvrt,w,c
  2383  000CCE  6E56               	movwf	vfpfcnvrt@llu,c
  2384  000CD0  6A57               	clrf	vfpfcnvrt@llu+1,c
  2385  000CD2                     L4:
  2386  000CD2  6A58               	clrf	vfpfcnvrt@llu+2,c
  2387  000CD4  6A59               	clrf	vfpfcnvrt@llu+3,c
  2388  000CD6  6A5A               	clrf	vfpfcnvrt@llu+4,c
  2389  000CD8  6A5B               	clrf	vfpfcnvrt@llu+5,c
  2390  000CDA  6A5C               	clrf	vfpfcnvrt@llu+6,c
  2391  000CDC  6A5D               	clrf	vfpfcnvrt@llu+7,c
  2392                           
  2393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  2394  000CDE  C03E  F017         	movff	vfpfcnvrt@fp,otoa@fp
  2395  000CE2  C056  F018         	movff	vfpfcnvrt@llu,otoa@d
  2396  000CE6  C057  F019         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2397  000CEA  C058  F01A         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2398  000CEE  C059  F01B         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2399  000CF2  C05A  F01C         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2400  000CF6  C05B  F01D         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2401  000CFA  C05C  F01E         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2402  000CFE  C05D  F01F         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2403  000D02  EC50  F00C         	call	_otoa	;wreg free
  2404  000D06  C017  F03E         	movff	?_otoa,?_vfpfcnvrt
  2405  000D0A  C018  F03F         	movff	?_otoa+1,?_vfpfcnvrt+1
  2406  000D0E  0012               	return	
  2407  000D10                     l3101:
  2408                           
  2409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2410  000D10  503F               	movf	vfpfcnvrt@fmt,w,c
  2411  000D12  6ED9               	movwf	fsr2l,c
  2412  000D14  6ADA               	clrf	fsr2h,c
  2413  000D16  50DF               	movf	indf2,w,c
  2414  000D18  6E01               	movwf	strncmp@_l,c
  2415  000D1A  0E2D               	movlw	low (STR_29+1)
  2416  000D1C  6E02               	movwf	strncmp@_r,c
  2417  000D1E  0E00               	movlw	0
  2418  000D20  6E04               	movwf	strncmp@n+1,c
  2419  000D22  0E02               	movlw	2
  2420  000D24  6E03               	movwf	strncmp@n,c
  2421  000D26  ECF3  F010         	call	_strncmp	;wreg free
  2422  000D2A  5001               	movf	?_strncmp,w,c
  2423  000D2C  1002               	iorwf	?_strncmp+1,w,c
  2424  000D2E  B4D8               	btfsc	status,2,c
  2425  000D30  D022               	goto	u3160
  2426                           
  2427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  2428                           
  2429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2430                           
  2431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  2432  000D32  503F               	movf	vfpfcnvrt@fmt,w,c
  2433  000D34  6ED9               	movwf	fsr2l,c
  2434  000D36  6ADA               	clrf	fsr2h,c
  2435  000D38  CFDF FFF6          	movff	indf2,tblptrl
  2436  000D3C                     	if	1	;There is more than 1 active tblptr byte
  2437  000D3C  0E08               	movlw	high __smallconst
  2438  000D3E  6EF7               	movwf	tblptrh,c
  2439  000D40                     	endif
  2440  000D40                     	if	0	;tblptru may be non-zero
  2441  000D40                     	endif
  2442  000D40                     	if	0	;tblptru may be non-zero
  2443  000D40                     	endif
  2444  000D40  0008               	tblrd		*
  2445  000D42  50F5               	movf	tablat,w,c
  2446  000D44  0A6F               	xorlw	111
  2447  000D46  A4D8               	btfss	status,2,c
  2448  000D48  D005               	goto	l3119
  2449                           
  2450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  2451  000D4A  503F               	movf	vfpfcnvrt@fmt,w,c
  2452  000D4C  6ED9               	movwf	fsr2l,c
  2453  000D4E  6ADA               	clrf	fsr2h,c
  2454  000D50  2ADF               	incf	indf2,f,c
  2455  000D52  D016               	goto	L8
  2456  000D54                     l3119:
  2457                           
  2458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2459  000D54  503F               	movf	vfpfcnvrt@fmt,w,c
  2460  000D56  6ED9               	movwf	fsr2l,c
  2461  000D58  6ADA               	clrf	fsr2h,c
  2462  000D5A  50DF               	movf	indf2,w,c
  2463  000D5C  6E01               	movwf	strncmp@_l,c
  2464  000D5E  0E44               	movlw	low STR_39
  2465  000D60  6E02               	movwf	strncmp@_r,c
  2466  000D62  0E00               	movlw	0
  2467  000D64  6E04               	movwf	strncmp@n+1,c
  2468  000D66  0E02               	movlw	2
  2469  000D68  6E03               	movwf	strncmp@n,c
  2470  000D6A  ECF3  F010         	call	_strncmp	;wreg free
  2471  000D6E  5001               	movf	?_strncmp,w,c
  2472  000D70  1002               	iorwf	?_strncmp+1,w,c
  2473  000D72  A4D8               	btfss	status,2,c
  2474  000D74  D016               	goto	l3127
  2475  000D76                     u3160:
  2476                           
  2477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  2478  000D76  503F               	movf	vfpfcnvrt@fmt,w,c
  2479  000D78  6ED9               	movwf	fsr2l,c
  2480  000D7A  6ADA               	clrf	fsr2h,c
  2481  000D7C  0E02               	movlw	2
  2482  000D7E  26DF               	addwf	indf2,f,c
  2483  000D80                     L8:
  2484                           
  2485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2486  000D80  5040               	movf	vfpfcnvrt@ap,w,c
  2487  000D82  6ED9               	movwf	fsr2l,c
  2488  000D84  6ADA               	clrf	fsr2h,c
  2489  000D86  50DF               	movf	indf2,w,c
  2490  000D88  2ADF               	incf	indf2,f,c
  2491  000D8A  2ADF               	incf	indf2,f,c
  2492  000D8C  6ED9               	movwf	fsr2l,c
  2493  000D8E  6ADA               	clrf	fsr2h,c
  2494  000D90  CFDE F041          	movff	postinc2,??_vfpfcnvrt
  2495  000D94  CFDD F042          	movff	postdec2,??_vfpfcnvrt+1
  2496  000D98  C041  F056         	movff	??_vfpfcnvrt,vfpfcnvrt@llu
  2497  000D9C  C042  F057         	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
  2498  000DA0  D798               	goto	L4
  2499  000DA2                     l3127:
  2500                           
  2501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2502  000DA2  503F               	movf	vfpfcnvrt@fmt,w,c
  2503  000DA4  6ED9               	movwf	fsr2l,c
  2504  000DA6  6ADA               	clrf	fsr2h,c
  2505  000DA8  50DF               	movf	indf2,w,c
  2506  000DAA  6E01               	movwf	strncmp@_l,c
  2507  000DAC  0E28               	movlw	low STR_44
  2508  000DAE  6E02               	movwf	strncmp@_r,c
  2509  000DB0  0E00               	movlw	0
  2510  000DB2  6E04               	movwf	strncmp@n+1,c
  2511  000DB4  0E03               	movlw	3
  2512  000DB6  6E03               	movwf	strncmp@n,c
  2513  000DB8  ECF3  F010         	call	_strncmp	;wreg free
  2514  000DBC  5001               	movf	?_strncmp,w,c
  2515  000DBE  1002               	iorwf	?_strncmp+1,w,c
  2516  000DC0  A4D8               	btfss	status,2,c
  2517  000DC2  D018               	goto	l3135
  2518                           
  2519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  2520  000DC4  503F               	movf	vfpfcnvrt@fmt,w,c
  2521  000DC6  6ED9               	movwf	fsr2l,c
  2522  000DC8  6ADA               	clrf	fsr2h,c
  2523  000DCA  0E03               	movlw	3
  2524  000DCC  26DF               	addwf	indf2,f,c
  2525                           
  2526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2527  000DCE  5040               	movf	vfpfcnvrt@ap,w,c
  2528  000DD0  6ED9               	movwf	fsr2l,c
  2529  000DD2  6ADA               	clrf	fsr2h,c
  2530  000DD4  2ADF               	incf	indf2,f,c
  2531  000DD6  04DF               	decf	indf2,w,c
  2532  000DD8  6ED9               	movwf	fsr2l,c
  2533  000DDA  6ADA               	clrf	fsr2h,c
  2534  000DDC  CFDE F054          	movff	postinc2,vfpfcnvrt@vp
  2535                           
  2536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  2537  000DE0  5054               	movf	vfpfcnvrt@vp,w,c
  2538  000DE2  6ED9               	movwf	fsr2l,c
  2539  000DE4  6ADA               	clrf	fsr2h,c
  2540  000DE6  C062  FFDF         	movff	_nout,indf2
  2541  000DEA                     l3131:
  2542                           
  2543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  2544  000DEA  0E00               	movlw	0
  2545  000DEC  6E3F               	movwf	?_vfpfcnvrt+1,c
  2546  000DEE  0E00               	movlw	0
  2547  000DF0  6E3E               	movwf	?_vfpfcnvrt,c
  2548  000DF2  0012               	return	
  2549  000DF4                     l3135:
  2550                           
  2551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2552  000DF4  503F               	movf	vfpfcnvrt@fmt,w,c
  2553  000DF6  6ED9               	movwf	fsr2l,c
  2554  000DF8  6ADA               	clrf	fsr2h,c
  2555  000DFA  50DF               	movf	indf2,w,c
  2556  000DFC  6E01               	movwf	strncmp@_l,c
  2557  000DFE  0E29               	movlw	low (STR_44+1)
  2558  000E00  6E02               	movwf	strncmp@_r,c
  2559  000E02  0E00               	movlw	0
  2560  000E04  6E04               	movwf	strncmp@n+1,c
  2561  000E06  0E02               	movlw	2
  2562  000E08  6E03               	movwf	strncmp@n,c
  2563  000E0A  ECF3  F010         	call	_strncmp	;wreg free
  2564  000E0E  5001               	movf	?_strncmp,w,c
  2565  000E10  1002               	iorwf	?_strncmp+1,w,c
  2566  000E12  B4D8               	btfsc	status,2,c
  2567  000E14  D02A               	goto	u3200
  2568                           
  2569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  2570                           
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  2572                           
  2573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  2574                           
  2575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  2576  000E16  503F               	movf	vfpfcnvrt@fmt,w,c
  2577  000E18  6ED9               	movwf	fsr2l,c
  2578  000E1A  6ADA               	clrf	fsr2h,c
  2579  000E1C  CFDF FFF6          	movff	indf2,tblptrl
  2580  000E20                     	if	1	;There is more than 1 active tblptr byte
  2581  000E20  0E08               	movlw	high __smallconst
  2582  000E22  6EF7               	movwf	tblptrh,c
  2583  000E24                     	endif
  2584  000E24                     	if	0	;tblptru may be non-zero
  2585  000E24                     	endif
  2586  000E24                     	if	0	;tblptru may be non-zero
  2587  000E24                     	endif
  2588  000E24  0008               	tblrd		*
  2589  000E26  50F5               	movf	tablat,w,c
  2590  000E28  0A6E               	xorlw	110
  2591  000E2A  A4D8               	btfss	status,2,c
  2592  000E2C  D00D               	goto	l3155
  2593                           
  2594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  2595  000E2E  503F               	movf	vfpfcnvrt@fmt,w,c
  2596  000E30  6ED9               	movwf	fsr2l,c
  2597  000E32  6ADA               	clrf	fsr2h,c
  2598  000E34  2ADF               	incf	indf2,f,c
  2599  000E36  D01E               	goto	L5
  2600  000E38                     l3149:
  2601                           
  2602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  2603  000E38  5054               	movf	vfpfcnvrt@vp,w,c
  2604  000E3A  6ED9               	movwf	fsr2l,c
  2605  000E3C  6ADA               	clrf	fsr2h,c
  2606  000E3E  C062  FFDE         	movff	_nout,postinc2
  2607  000E42  C063  FFDD         	movff	_nout+1,postdec2
  2608  000E46  D7D1               	goto	l3131
  2609  000E48                     l3155:
  2610                           
  2611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2612  000E48  503F               	movf	vfpfcnvrt@fmt,w,c
  2613  000E4A  6ED9               	movwf	fsr2l,c
  2614  000E4C  6ADA               	clrf	fsr2h,c
  2615  000E4E  50DF               	movf	indf2,w,c
  2616  000E50  6E01               	movwf	strncmp@_l,c
  2617  000E52  0E41               	movlw	low STR_54
  2618  000E54  6E02               	movwf	strncmp@_r,c
  2619  000E56  0E00               	movlw	0
  2620  000E58  6E04               	movwf	strncmp@n+1,c
  2621  000E5A  0E02               	movlw	2
  2622  000E5C  6E03               	movwf	strncmp@n,c
  2623  000E5E  ECF3  F010         	call	_strncmp	;wreg free
  2624  000E62  5001               	movf	?_strncmp,w,c
  2625  000E64  1002               	iorwf	?_strncmp+1,w,c
  2626  000E66  A4D8               	btfss	status,2,c
  2627  000E68  D00F               	goto	l3163
  2628  000E6A                     u3200:
  2629                           
  2630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  2631  000E6A  503F               	movf	vfpfcnvrt@fmt,w,c
  2632  000E6C  6ED9               	movwf	fsr2l,c
  2633  000E6E  6ADA               	clrf	fsr2h,c
  2634  000E70  0E02               	movlw	2
  2635  000E72  26DF               	addwf	indf2,f,c
  2636  000E74                     L5:
  2637                           
  2638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  2639  000E74  5040               	movf	vfpfcnvrt@ap,w,c
  2640  000E76  6ED9               	movwf	fsr2l,c
  2641  000E78  6ADA               	clrf	fsr2h,c
  2642  000E7A  2ADF               	incf	indf2,f,c
  2643  000E7C  04DF               	decf	indf2,w,c
  2644  000E7E  6ED9               	movwf	fsr2l,c
  2645  000E80  6ADA               	clrf	fsr2h,c
  2646  000E82  CFDE F054          	movff	postinc2,vfpfcnvrt@vp
  2647  000E86  D7D8               	goto	l3149
  2648  000E88                     l3163:
  2649                           
  2650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  2651  000E88  503F               	movf	vfpfcnvrt@fmt,w,c
  2652  000E8A  6ED9               	movwf	fsr2l,c
  2653  000E8C  6ADA               	clrf	fsr2h,c
  2654  000E8E  CFDF FFF6          	movff	indf2,tblptrl
  2655  000E92                     	if	1	;There is more than 1 active tblptr byte
  2656  000E92  0E08               	movlw	high __smallconst
  2657  000E94  6EF7               	movwf	tblptrh,c
  2658  000E96                     	endif
  2659  000E96                     	if	0	;tblptru may be non-zero
  2660  000E96                     	endif
  2661  000E96                     	if	0	;tblptru may be non-zero
  2662  000E96                     	endif
  2663  000E96  0008               	tblrd		*
  2664  000E98  50F5               	movf	tablat,w,c
  2665  000E9A  0A70               	xorlw	112
  2666  000E9C  A4D8               	btfss	status,2,c
  2667  000E9E  D031               	goto	l3171
  2668                           
  2669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  2670  000EA0  503F               	movf	vfpfcnvrt@fmt,w,c
  2671  000EA2  6ED9               	movwf	fsr2l,c
  2672  000EA4  6ADA               	clrf	fsr2h,c
  2673  000EA6  2ADF               	incf	indf2,f,c
  2674                           
  2675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  2676  000EA8  5040               	movf	vfpfcnvrt@ap,w,c
  2677  000EAA  6ED9               	movwf	fsr2l,c
  2678  000EAC  6ADA               	clrf	fsr2h,c
  2679  000EAE  50DF               	movf	indf2,w,c
  2680  000EB0  2ADF               	incf	indf2,f,c
  2681  000EB2  6ED9               	movwf	fsr2l,c
  2682  000EB4  6ADA               	clrf	fsr2h,c
  2683  000EB6  50DF               	movf	indf2,w,c
  2684  000EB8  6E41               	movwf	??_vfpfcnvrt& (0+255),c
  2685  000EBA  5041               	movf	??_vfpfcnvrt,w,c
  2686  000EBC  6E56               	movwf	vfpfcnvrt@llu,c
  2687  000EBE  6A57               	clrf	vfpfcnvrt@llu+1,c
  2688  000EC0  6A58               	clrf	vfpfcnvrt@llu+2,c
  2689  000EC2  6A59               	clrf	vfpfcnvrt@llu+3,c
  2690  000EC4  6A5A               	clrf	vfpfcnvrt@llu+4,c
  2691  000EC6  6A5B               	clrf	vfpfcnvrt@llu+5,c
  2692  000EC8  6A5C               	clrf	vfpfcnvrt@llu+6,c
  2693  000ECA  6A5D               	clrf	vfpfcnvrt@llu+7,c
  2694                           
  2695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  2696  000ECC  C03E  F017         	movff	vfpfcnvrt@fp,xtoa@fp
  2697  000ED0  C056  F018         	movff	vfpfcnvrt@llu,xtoa@d
  2698  000ED4  C057  F019         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2699  000ED8  C058  F01A         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2700  000EDC  C059  F01B         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2701  000EE0  C05A  F01C         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2702  000EE4  C05B  F01D         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2703  000EE8  C05C  F01E         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2704  000EEC  C05D  F01F         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2705  000EF0  0E78               	movlw	120
  2706  000EF2  6E20               	movwf	xtoa@x,c
  2707  000EF4  EC72  F00A         	call	_xtoa	;wreg free
  2708  000EF8  C017  F03E         	movff	?_xtoa,?_vfpfcnvrt
  2709  000EFC  C018  F03F         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2710  000F00  0012               	return	
  2711  000F02                     l3171:
  2712                           
  2713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  2714  000F02  503F               	movf	vfpfcnvrt@fmt,w,c
  2715  000F04  6ED9               	movwf	fsr2l,c
  2716  000F06  6ADA               	clrf	fsr2h,c
  2717  000F08  CFDF FFF6          	movff	indf2,tblptrl
  2718  000F0C                     	if	1	;There is more than 1 active tblptr byte
  2719  000F0C  0E08               	movlw	high __smallconst
  2720  000F0E  6EF7               	movwf	tblptrh,c
  2721  000F10                     	endif
  2722  000F10                     	if	0	;tblptru may be non-zero
  2723  000F10                     	endif
  2724  000F10                     	if	0	;tblptru may be non-zero
  2725  000F10                     	endif
  2726  000F10  0008               	tblrd		*
  2727  000F12  50F5               	movf	tablat,w,c
  2728  000F14  0A73               	xorlw	115
  2729  000F16  A4D8               	btfss	status,2,c
  2730  000F18  D018               	goto	l3181
  2731                           
  2732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  2733  000F1A  503F               	movf	vfpfcnvrt@fmt,w,c
  2734  000F1C  6ED9               	movwf	fsr2l,c
  2735  000F1E  6ADA               	clrf	fsr2h,c
  2736  000F20  2ADF               	incf	indf2,f,c
  2737                           
  2738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2739  000F22  5040               	movf	vfpfcnvrt@ap,w,c
  2740  000F24  6ED9               	movwf	fsr2l,c
  2741  000F26  6ADA               	clrf	fsr2h,c
  2742  000F28  2ADF               	incf	indf2,f,c
  2743  000F2A  04DF               	decf	indf2,w,c
  2744  000F2C  6ED9               	movwf	fsr2l,c
  2745  000F2E  6ADA               	clrf	fsr2h,c
  2746  000F30  CFDE F04B          	movff	postinc2,vfpfcnvrt@cp
  2747                           
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  2749  000F34  C03E  F009         	movff	vfpfcnvrt@fp,stoa@fp
  2750  000F38  C04B  F00A         	movff	vfpfcnvrt@cp,stoa@s
  2751  000F3C  ECDC  F00E         	call	_stoa	;wreg free
  2752  000F40  C009  F03E         	movff	?_stoa,?_vfpfcnvrt
  2753  000F44  C00A  F03F         	movff	?_stoa+1,?_vfpfcnvrt+1
  2754  000F48  0012               	return	
  2755  000F4A                     l3181:
  2756                           
  2757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  2758  000F4A  503F               	movf	vfpfcnvrt@fmt,w,c
  2759  000F4C  6ED9               	movwf	fsr2l,c
  2760  000F4E  6ADA               	clrf	fsr2h,c
  2761  000F50  50DF               	movf	indf2,w,c
  2762  000F52  6E01               	movwf	strncmp@_l,c
  2763  000F54  0E30               	movlw	low STR_59
  2764  000F56  6E02               	movwf	strncmp@_r,c
  2765  000F58  0E00               	movlw	0
  2766  000F5A  6E04               	movwf	strncmp@n+1,c
  2767  000F5C  0E03               	movlw	3
  2768  000F5E  6E03               	movwf	strncmp@n,c
  2769  000F60  ECF3  F010         	call	_strncmp	;wreg free
  2770  000F64  5001               	movf	?_strncmp,w,c
  2771  000F66  1002               	iorwf	?_strncmp+1,w,c
  2772  000F68  A4D8               	btfss	status,2,c
  2773  000F6A  D031               	goto	l3191
  2774                           
  2775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  2776  000F6C  503F               	movf	vfpfcnvrt@fmt,w,c
  2777  000F6E  6ED9               	movwf	fsr2l,c
  2778  000F70  6ADA               	clrf	fsr2h,c
  2779  000F72  0E03               	movlw	3
  2780  000F74  26DF               	addwf	indf2,f,c
  2781                           
  2782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2783  000F76  5040               	movf	vfpfcnvrt@ap,w,c
  2784  000F78  6ED9               	movwf	fsr2l,c
  2785  000F7A  6ADA               	clrf	fsr2h,c
  2786  000F7C  50DF               	movf	indf2,w,c
  2787  000F7E  2ADF               	incf	indf2,f,c
  2788  000F80  2ADF               	incf	indf2,f,c
  2789  000F82  6ED9               	movwf	fsr2l,c
  2790  000F84  6ADA               	clrf	fsr2h,c
  2791  000F86  50DF               	movf	indf2,w,c
  2792  000F88  6E41               	movwf	??_vfpfcnvrt& (0+255),c
  2793  000F8A  5041               	movf	??_vfpfcnvrt,w,c
  2794  000F8C  6E56               	movwf	vfpfcnvrt@llu,c
  2795  000F8E  6A57               	clrf	vfpfcnvrt@llu+1,c
  2796  000F90                     L6:
  2797  000F90  6A58               	clrf	vfpfcnvrt@llu+2,c
  2798  000F92  6A59               	clrf	vfpfcnvrt@llu+3,c
  2799  000F94  6A5A               	clrf	vfpfcnvrt@llu+4,c
  2800  000F96  6A5B               	clrf	vfpfcnvrt@llu+5,c
  2801  000F98  6A5C               	clrf	vfpfcnvrt@llu+6,c
  2802  000F9A  6A5D               	clrf	vfpfcnvrt@llu+7,c
  2803                           
  2804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  2805  000F9C  C03E  F01A         	movff	vfpfcnvrt@fp,utoa@fp
  2806  000FA0  C056  F01B         	movff	vfpfcnvrt@llu,utoa@d
  2807  000FA4  C057  F01C         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2808  000FA8  C058  F01D         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2809  000FAC  C059  F01E         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2810  000FB0  C05A  F01F         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2811  000FB4  C05B  F020         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2812  000FB8  C05C  F021         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2813  000FBC  C05D  F022         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2814  000FC0  EC7F  F00B         	call	_utoa	;wreg free
  2815  000FC4  C01A  F03E         	movff	?_utoa,?_vfpfcnvrt
  2816  000FC8  C01B  F03F         	movff	?_utoa+1,?_vfpfcnvrt+1
  2817  000FCC  0012               	return	
  2818  000FCE                     l3191:
  2819                           
  2820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  2821  000FCE  503F               	movf	vfpfcnvrt@fmt,w,c
  2822  000FD0  6ED9               	movwf	fsr2l,c
  2823  000FD2  6ADA               	clrf	fsr2h,c
  2824  000FD4  50DF               	movf	indf2,w,c
  2825  000FD6  6E01               	movwf	strncmp@_l,c
  2826  000FD8  0E31               	movlw	low (STR_59+1)
  2827  000FDA  6E02               	movwf	strncmp@_r,c
  2828  000FDC  0E00               	movlw	0
  2829  000FDE  6E04               	movwf	strncmp@n+1,c
  2830  000FE0  0E02               	movlw	2
  2831  000FE2  6E03               	movwf	strncmp@n,c
  2832  000FE4  ECF3  F010         	call	_strncmp	;wreg free
  2833  000FE8  5001               	movf	?_strncmp,w,c
  2834  000FEA  1002               	iorwf	?_strncmp+1,w,c
  2835  000FEC  B4D8               	btfsc	status,2,c
  2836  000FEE  D022               	goto	u3260
  2837                           
  2838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2839                           
  2840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  2841                           
  2842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  2843  000FF0  503F               	movf	vfpfcnvrt@fmt,w,c
  2844  000FF2  6ED9               	movwf	fsr2l,c
  2845  000FF4  6ADA               	clrf	fsr2h,c
  2846  000FF6  CFDF FFF6          	movff	indf2,tblptrl
  2847  000FFA                     	if	1	;There is more than 1 active tblptr byte
  2848  000FFA  0E08               	movlw	high __smallconst
  2849  000FFC  6EF7               	movwf	tblptrh,c
  2850  000FFE                     	endif
  2851  000FFE                     	if	0	;tblptru may be non-zero
  2852  000FFE                     	endif
  2853  000FFE                     	if	0	;tblptru may be non-zero
  2854  000FFE                     	endif
  2855  000FFE  0008               	tblrd		*
  2856  001000  50F5               	movf	tablat,w,c
  2857  001002  0A75               	xorlw	117
  2858  001004  A4D8               	btfss	status,2,c
  2859  001006  D005               	goto	l3209
  2860                           
  2861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2862  001008  503F               	movf	vfpfcnvrt@fmt,w,c
  2863  00100A  6ED9               	movwf	fsr2l,c
  2864  00100C  6ADA               	clrf	fsr2h,c
  2865  00100E  2ADF               	incf	indf2,f,c
  2866  001010  D016               	goto	L9
  2867  001012                     l3209:
  2868                           
  2869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  2870  001012  503F               	movf	vfpfcnvrt@fmt,w,c
  2871  001014  6ED9               	movwf	fsr2l,c
  2872  001016  6ADA               	clrf	fsr2h,c
  2873  001018  50DF               	movf	indf2,w,c
  2874  00101A  6E01               	movwf	strncmp@_l,c
  2875  00101C  0E47               	movlw	low STR_69
  2876  00101E  6E02               	movwf	strncmp@_r,c
  2877  001020  0E00               	movlw	0
  2878  001022  6E04               	movwf	strncmp@n+1,c
  2879  001024  0E02               	movlw	2
  2880  001026  6E03               	movwf	strncmp@n,c
  2881  001028  ECF3  F010         	call	_strncmp	;wreg free
  2882  00102C  5001               	movf	?_strncmp,w,c
  2883  00102E  1002               	iorwf	?_strncmp+1,w,c
  2884  001030  A4D8               	btfss	status,2,c
  2885  001032  D016               	goto	l3217
  2886  001034                     u3260:
  2887                           
  2888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  2889  001034  503F               	movf	vfpfcnvrt@fmt,w,c
  2890  001036  6ED9               	movwf	fsr2l,c
  2891  001038  6ADA               	clrf	fsr2h,c
  2892  00103A  0E02               	movlw	2
  2893  00103C  26DF               	addwf	indf2,f,c
  2894  00103E                     L9:
  2895                           
  2896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2897  00103E  5040               	movf	vfpfcnvrt@ap,w,c
  2898  001040  6ED9               	movwf	fsr2l,c
  2899  001042  6ADA               	clrf	fsr2h,c
  2900  001044  50DF               	movf	indf2,w,c
  2901  001046  2ADF               	incf	indf2,f,c
  2902  001048  2ADF               	incf	indf2,f,c
  2903  00104A  6ED9               	movwf	fsr2l,c
  2904  00104C  6ADA               	clrf	fsr2h,c
  2905  00104E  CFDE F041          	movff	postinc2,??_vfpfcnvrt
  2906  001052  CFDD F042          	movff	postdec2,??_vfpfcnvrt+1
  2907  001056  C041  F056         	movff	??_vfpfcnvrt,vfpfcnvrt@llu
  2908  00105A  C042  F057         	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
  2909  00105E  D798               	goto	L6
  2910  001060                     l3217:
  2911                           
  2912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  2913  001060  503F               	movf	vfpfcnvrt@fmt,w,c
  2914  001062  6ED9               	movwf	fsr2l,c
  2915  001064  6ADA               	clrf	fsr2h,c
  2916  001066  50DF               	movf	indf2,w,c
  2917  001068  6E01               	movwf	strncmp@_l,c
  2918  00106A  0E34               	movlw	low STR_74
  2919  00106C  6E02               	movwf	strncmp@_r,c
  2920  00106E  0E00               	movlw	0
  2921  001070  6E04               	movwf	strncmp@n+1,c
  2922  001072  0E03               	movlw	3
  2923  001074  6E03               	movwf	strncmp@n,c
  2924  001076  ECF3  F010         	call	_strncmp	;wreg free
  2925  00107A  5001               	movf	?_strncmp,w,c
  2926  00107C  1002               	iorwf	?_strncmp+1,w,c
  2927  00107E  B4D8               	btfsc	status,2,c
  2928  001080  D011               	goto	u3280
  2929  001082  503F               	movf	vfpfcnvrt@fmt,w,c
  2930  001084  6ED9               	movwf	fsr2l,c
  2931  001086  6ADA               	clrf	fsr2h,c
  2932  001088  50DF               	movf	indf2,w,c
  2933  00108A  6E01               	movwf	strncmp@_l,c
  2934  00108C  0E1C               	movlw	low STR_78
  2935  00108E  6E02               	movwf	strncmp@_r,c
  2936  001090  0E00               	movlw	0
  2937  001092  6E04               	movwf	strncmp@n+1,c
  2938  001094  0E03               	movlw	3
  2939  001096  6E03               	movwf	strncmp@n,c
  2940  001098  ECF3  F010         	call	_strncmp	;wreg free
  2941  00109C  5001               	movf	?_strncmp,w,c
  2942  00109E  1002               	iorwf	?_strncmp+1,w,c
  2943  0010A0  A4D8               	btfss	status,2,c
  2944  0010A2  D041               	goto	l3231
  2945  0010A4                     u3280:
  2946                           
  2947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  2948  0010A4  503F               	movf	vfpfcnvrt@fmt,w,c
  2949  0010A6  6ED9               	movwf	fsr2l,c
  2950  0010A8  6ADA               	clrf	fsr2h,c
  2951  0010AA  50DF               	movf	indf2,w,c
  2952  0010AC  6E41               	movwf	??_vfpfcnvrt& (0+255),c
  2953  0010AE  0E02               	movlw	2
  2954  0010B0  2641               	addwf	??_vfpfcnvrt,f,c
  2955  0010B2  C041  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2956  0010B6                     	if	1	;There is more than 1 active tblptr byte
  2957  0010B6  0E08               	movlw	high __smallconst
  2958  0010B8  6EF7               	movwf	tblptrh,c
  2959  0010BA                     	endif
  2960  0010BA                     	if	0	;tblptru may be non-zero
  2961  0010BA                     	endif
  2962  0010BA                     	if	0	;tblptru may be non-zero
  2963  0010BA                     	endif
  2964  0010BA  0008               	tblrd		*
  2965  0010BC  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  2966                           
  2967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  2968  0010C0  503F               	movf	vfpfcnvrt@fmt,w,c
  2969  0010C2  6ED9               	movwf	fsr2l,c
  2970  0010C4  6ADA               	clrf	fsr2h,c
  2971  0010C6  0E03               	movlw	3
  2972  0010C8  26DF               	addwf	indf2,f,c
  2973                           
  2974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2975  0010CA  5040               	movf	vfpfcnvrt@ap,w,c
  2976  0010CC  6ED9               	movwf	fsr2l,c
  2977  0010CE  6ADA               	clrf	fsr2h,c
  2978  0010D0  50DF               	movf	indf2,w,c
  2979  0010D2  2ADF               	incf	indf2,f,c
  2980  0010D4  2ADF               	incf	indf2,f,c
  2981  0010D6  6ED9               	movwf	fsr2l,c
  2982  0010D8  6ADA               	clrf	fsr2h,c
  2983  0010DA  50DF               	movf	indf2,w,c
  2984  0010DC  6E41               	movwf	??_vfpfcnvrt& (0+255),c
  2985  0010DE  5041               	movf	??_vfpfcnvrt,w,c
  2986  0010E0  6E56               	movwf	vfpfcnvrt@llu,c
  2987  0010E2  6A57               	clrf	vfpfcnvrt@llu+1,c
  2988  0010E4                     L7:
  2989  0010E4  6A58               	clrf	vfpfcnvrt@llu+2,c
  2990  0010E6  6A59               	clrf	vfpfcnvrt@llu+3,c
  2991  0010E8  6A5A               	clrf	vfpfcnvrt@llu+4,c
  2992  0010EA  6A5B               	clrf	vfpfcnvrt@llu+5,c
  2993  0010EC  6A5C               	clrf	vfpfcnvrt@llu+6,c
  2994  0010EE  6A5D               	clrf	vfpfcnvrt@llu+7,c
  2995                           
  2996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  2997  0010F0  C03E  F017         	movff	vfpfcnvrt@fp,xtoa@fp
  2998  0010F4  C056  F018         	movff	vfpfcnvrt@llu,xtoa@d
  2999  0010F8  C057  F019         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3000  0010FC  C058  F01A         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3001  001100  C059  F01B         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3002  001104  C05A  F01C         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3003  001108  C05B  F01D         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3004  00110C  C05C  F01E         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3005  001110  C05D  F01F         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3006  001114  C055  F020         	movff	vfpfcnvrt@c,xtoa@x
  3007  001118  EC72  F00A         	call	_xtoa	;wreg free
  3008  00111C  C017  F03E         	movff	?_xtoa,?_vfpfcnvrt
  3009  001120  C018  F03F         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3010  001124  0012               	return	
  3011  001126                     l3231:
  3012                           
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  3014  001126  503F               	movf	vfpfcnvrt@fmt,w,c
  3015  001128  6ED9               	movwf	fsr2l,c
  3016  00112A  6ADA               	clrf	fsr2h,c
  3017  00112C  50DF               	movf	indf2,w,c
  3018  00112E  6E01               	movwf	strncmp@_l,c
  3019  001130  0E35               	movlw	low (STR_74+1)
  3020  001132  6E02               	movwf	strncmp@_r,c
  3021  001134  0E00               	movlw	0
  3022  001136  6E04               	movwf	strncmp@n+1,c
  3023  001138  0E02               	movlw	2
  3024  00113A  6E03               	movwf	strncmp@n,c
  3025  00113C  ECF3  F010         	call	_strncmp	;wreg free
  3026  001140  5001               	movf	?_strncmp,w,c
  3027  001142  1002               	iorwf	?_strncmp+1,w,c
  3028  001144  B4D8               	btfsc	status,2,c
  3029  001146  D05A               	goto	u3340
  3030  001148  503F               	movf	vfpfcnvrt@fmt,w,c
  3031  00114A  6ED9               	movwf	fsr2l,c
  3032  00114C  6ADA               	clrf	fsr2h,c
  3033  00114E  50DF               	movf	indf2,w,c
  3034  001150  6E01               	movwf	strncmp@_l,c
  3035  001152  0E1D               	movlw	low (STR_78+1)
  3036  001154  6E02               	movwf	strncmp@_r,c
  3037  001156  0E00               	movlw	0
  3038  001158  6E04               	movwf	strncmp@n+1,c
  3039  00115A  0E02               	movlw	2
  3040  00115C  6E03               	movwf	strncmp@n,c
  3041  00115E  ECF3  F010         	call	_strncmp	;wreg free
  3042  001162  5001               	movf	?_strncmp,w,c
  3043  001164  1002               	iorwf	?_strncmp+1,w,c
  3044  001166  B4D8               	btfsc	status,2,c
  3045  001168  D049               	goto	u3340
  3046                           
  3047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3048                           
  3049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  3050                           
  3051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  3052                           
  3053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  3054  00116A  503F               	movf	vfpfcnvrt@fmt,w,c
  3055  00116C  6ED9               	movwf	fsr2l,c
  3056  00116E  6ADA               	clrf	fsr2h,c
  3057  001170  CFDF FFF6          	movff	indf2,tblptrl
  3058  001174                     	if	1	;There is more than 1 active tblptr byte
  3059  001174  0E08               	movlw	high __smallconst
  3060  001176  6EF7               	movwf	tblptrh,c
  3061  001178                     	endif
  3062  001178                     	if	0	;tblptru may be non-zero
  3063  001178                     	endif
  3064  001178                     	if	0	;tblptru may be non-zero
  3065  001178                     	endif
  3066  001178  0008               	tblrd		*
  3067  00117A  50F5               	movf	tablat,w,c
  3068  00117C  0A78               	xorlw	120
  3069  00117E  B4D8               	btfsc	status,2,c
  3070  001180  D00C               	goto	u3320
  3071  001182  503F               	movf	vfpfcnvrt@fmt,w,c
  3072  001184  6ED9               	movwf	fsr2l,c
  3073  001186  6ADA               	clrf	fsr2h,c
  3074  001188  CFDF FFF6          	movff	indf2,tblptrl
  3075  00118C                     	if	1	;There is more than 1 active tblptr byte
  3076  00118C  0E08               	movlw	high __smallconst
  3077  00118E  6EF7               	movwf	tblptrh,c
  3078  001190                     	endif
  3079  001190                     	if	0	;tblptru may be non-zero
  3080  001190                     	endif
  3081  001190                     	if	0	;tblptru may be non-zero
  3082  001190                     	endif
  3083  001190  0008               	tblrd		*
  3084  001192  50F5               	movf	tablat,w,c
  3085  001194  0A58               	xorlw	88
  3086  001196  A4D8               	btfss	status,2,c
  3087  001198  D00F               	goto	l3259
  3088  00119A                     u3320:
  3089                           
  3090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3091  00119A  503F               	movf	vfpfcnvrt@fmt,w,c
  3092  00119C  6ED9               	movwf	fsr2l,c
  3093  00119E  6ADA               	clrf	fsr2h,c
  3094  0011A0  CFDF FFF6          	movff	indf2,tblptrl
  3095  0011A4                     	if	1	;There is more than 1 active tblptr byte
  3096  0011A4  0E08               	movlw	high __smallconst
  3097  0011A6  6EF7               	movwf	tblptrh,c
  3098  0011A8                     	endif
  3099  0011A8                     	if	0	;tblptru may be non-zero
  3100  0011A8                     	endif
  3101  0011A8                     	if	0	;tblptru may be non-zero
  3102  0011A8                     	endif
  3103  0011A8  0008               	tblrd		*
  3104  0011AA  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  3105                           
  3106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3107  0011AE  503F               	movf	vfpfcnvrt@fmt,w,c
  3108  0011B0  6ED9               	movwf	fsr2l,c
  3109  0011B2  6ADA               	clrf	fsr2h,c
  3110  0011B4  2ADF               	incf	indf2,f,c
  3111  0011B6  D035               	goto	l3267
  3112  0011B8                     l3259:
  3113                           
  3114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  3115  0011B8  503F               	movf	vfpfcnvrt@fmt,w,c
  3116  0011BA  6ED9               	movwf	fsr2l,c
  3117  0011BC  6ADA               	clrf	fsr2h,c
  3118  0011BE  50DF               	movf	indf2,w,c
  3119  0011C0  6E01               	movwf	strncmp@_l,c
  3120  0011C2  0E4A               	movlw	low STR_92
  3121  0011C4  6E02               	movwf	strncmp@_r,c
  3122  0011C6  0E00               	movlw	0
  3123  0011C8  6E04               	movwf	strncmp@n+1,c
  3124  0011CA  0E02               	movlw	2
  3125  0011CC  6E03               	movwf	strncmp@n,c
  3126  0011CE  ECF3  F010         	call	_strncmp	;wreg free
  3127  0011D2  5001               	movf	?_strncmp,w,c
  3128  0011D4  1002               	iorwf	?_strncmp+1,w,c
  3129  0011D6  B4D8               	btfsc	status,2,c
  3130  0011D8  D011               	goto	u3340
  3131  0011DA  503F               	movf	vfpfcnvrt@fmt,w,c
  3132  0011DC  6ED9               	movwf	fsr2l,c
  3133  0011DE  6ADA               	clrf	fsr2h,c
  3134  0011E0  50DF               	movf	indf2,w,c
  3135  0011E2  6E01               	movwf	strncmp@_l,c
  3136  0011E4  0E38               	movlw	low STR_96
  3137  0011E6  6E02               	movwf	strncmp@_r,c
  3138  0011E8  0E00               	movlw	0
  3139  0011EA  6E04               	movwf	strncmp@n+1,c
  3140  0011EC  0E02               	movlw	2
  3141  0011EE  6E03               	movwf	strncmp@n,c
  3142  0011F0  ECF3  F010         	call	_strncmp	;wreg free
  3143  0011F4  5001               	movf	?_strncmp,w,c
  3144  0011F6  1002               	iorwf	?_strncmp+1,w,c
  3145  0011F8  A4D8               	btfss	status,2,c
  3146  0011FA  D024               	goto	l3273
  3147  0011FC                     u3340:
  3148                           
  3149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  3150  0011FC  503F               	movf	vfpfcnvrt@fmt,w,c
  3151  0011FE  6ED9               	movwf	fsr2l,c
  3152  001200  6ADA               	clrf	fsr2h,c
  3153  001202  50DF               	movf	indf2,w,c
  3154  001204  6E41               	movwf	??_vfpfcnvrt& (0+255),c
  3155  001206  0E01               	movlw	1
  3156  001208  2641               	addwf	??_vfpfcnvrt,f,c
  3157  00120A  C041  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3158  00120E                     	if	1	;There is more than 1 active tblptr byte
  3159  00120E  0E08               	movlw	high __smallconst
  3160  001210  6EF7               	movwf	tblptrh,c
  3161  001212                     	endif
  3162  001212                     	if	0	;tblptru may be non-zero
  3163  001212                     	endif
  3164  001212                     	if	0	;tblptru may be non-zero
  3165  001212                     	endif
  3166  001212  0008               	tblrd		*
  3167  001214  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  3168                           
  3169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  3170  001218  503F               	movf	vfpfcnvrt@fmt,w,c
  3171  00121A  6ED9               	movwf	fsr2l,c
  3172  00121C  6ADA               	clrf	fsr2h,c
  3173  00121E  0E02               	movlw	2
  3174  001220  26DF               	addwf	indf2,f,c
  3175  001222                     l3267:
  3176                           
  3177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3178  001222  5040               	movf	vfpfcnvrt@ap,w,c
  3179  001224  6ED9               	movwf	fsr2l,c
  3180  001226  6ADA               	clrf	fsr2h,c
  3181  001228  50DF               	movf	indf2,w,c
  3182  00122A  2ADF               	incf	indf2,f,c
  3183  00122C  2ADF               	incf	indf2,f,c
  3184  00122E  6ED9               	movwf	fsr2l,c
  3185  001230  6ADA               	clrf	fsr2h,c
  3186  001232  CFDE F041          	movff	postinc2,??_vfpfcnvrt
  3187  001236  CFDD F042          	movff	postdec2,??_vfpfcnvrt+1
  3188  00123A  C041  F056         	movff	??_vfpfcnvrt,vfpfcnvrt@llu
  3189  00123E  C042  F057         	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
  3190  001242  D750               	goto	L7
  3191  001244                     l3273:
  3192                           
  3193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3194  001244  503F               	movf	vfpfcnvrt@fmt,w,c
  3195  001246  6ED9               	movwf	fsr2l,c
  3196  001248  6ADA               	clrf	fsr2h,c
  3197  00124A  CFDF FFF6          	movff	indf2,tblptrl
  3198  00124E                     	if	1	;There is more than 1 active tblptr byte
  3199  00124E  0E08               	movlw	high __smallconst
  3200  001250  6EF7               	movwf	tblptrh,c
  3201  001252                     	endif
  3202  001252                     	if	0	;tblptru may be non-zero
  3203  001252                     	endif
  3204  001252                     	if	0	;tblptru may be non-zero
  3205  001252                     	endif
  3206  001252  0008               	tblrd		*
  3207  001254  50F5               	movf	tablat,w,c
  3208  001256  0A25               	xorlw	37
  3209  001258  A4D8               	btfss	status,2,c
  3210  00125A  D011               	goto	l3283
  3211                           
  3212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3213  00125C  503F               	movf	vfpfcnvrt@fmt,w,c
  3214  00125E  6ED9               	movwf	fsr2l,c
  3215  001260  6ADA               	clrf	fsr2h,c
  3216  001262  2ADF               	incf	indf2,f,c
  3217                           
  3218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3219  001264  0E00               	movlw	0
  3220  001266  6E02               	movwf	fputc@c+1,c
  3221  001268  0E25               	movlw	37
  3222  00126A  6E01               	movwf	fputc@c,c
  3223  00126C  C03E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3224  001270  ECD1  F011         	call	_fputc	;wreg free
  3225  001274                     l3279:
  3226                           
  3227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3228  001274  0E00               	movlw	0
  3229  001276  6E3F               	movwf	?_vfpfcnvrt+1,c
  3230  001278  0E01               	movlw	1
  3231  00127A  6E3E               	movwf	?_vfpfcnvrt,c
  3232  00127C  0012               	return	
  3233  00127E                     l3283:
  3234                           
  3235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3236  00127E  503F               	movf	vfpfcnvrt@fmt,w,c
  3237  001280  6ED9               	movwf	fsr2l,c
  3238  001282  6ADA               	clrf	fsr2h,c
  3239  001284  2ADF               	incf	indf2,f,c
  3240  001286  D5B1               	goto	l3131
  3241  001288                     l3289:
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3245  001288  503F               	movf	vfpfcnvrt@fmt,w,c
  3246  00128A  6ED9               	movwf	fsr2l,c
  3247  00128C  6ADA               	clrf	fsr2h,c
  3248  00128E  CFDF FFF6          	movff	indf2,tblptrl
  3249  001292                     	if	1	;There is more than 1 active tblptr byte
  3250  001292  0E08               	movlw	high __smallconst
  3251  001294  6EF7               	movwf	tblptrh,c
  3252  001296                     	endif
  3253  001296                     	if	0	;tblptru may be non-zero
  3254  001296                     	endif
  3255  001296                     	if	0	;tblptru may be non-zero
  3256  001296                     	endif
  3257  001296  0008               	tblrd		*
  3258  001298  50F5               	movf	tablat,w,c
  3259  00129A  6E01               	movwf	fputc@c,c
  3260  00129C  6A02               	clrf	fputc@c+1,c
  3261  00129E  C03E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3262  0012A2  ECD1  F011         	call	_fputc	;wreg free
  3263                           
  3264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3265  0012A6  503F               	movf	vfpfcnvrt@fmt,w,c
  3266  0012A8  6ED9               	movwf	fsr2l,c
  3267  0012AA  6ADA               	clrf	fsr2h,c
  3268  0012AC  2ADF               	incf	indf2,f,c
  3269  0012AE  D7E2               	goto	l3279
  3270  0012B0                     __end_of_vfpfcnvrt:
  3271                           	opt callstack 0
  3272                           
  3273 ;; *************** function _xtoa *****************
  3274 ;; Defined at:
  3275 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3278 ;;		 -> vsnprintf@f(5), 
  3279 ;;  d               8   23[COMRAM] unsigned long long 
  3280 ;;  x               1   31[COMRAM] unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  n               8   48[COMRAM] unsigned long long 
  3283 ;;  c               2   58[COMRAM] int 
  3284 ;;  i               2   56[COMRAM] int 
  3285 ;;  w               2   46[COMRAM] int 
  3286 ;;  p               2   44[COMRAM] int 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  2   22[COMRAM] int 
  3289 ;; Registers used:
  3290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3296 ;;      Params:        10       0       0       0       0       0       0       0       0
  3297 ;;      Locals:        20       0       0       0       0       0       0       0       0
  3298 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3299 ;;      Totals:        38       0       0       0       0       0       0       0       0
  3300 ;;Total ram usage:       38 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    5
  3303 ;; This function calls:
  3304 ;;		_isalpha
  3305 ;;		_isupper
  3306 ;;		_pad
  3307 ;;		_toupper
  3308 ;; This function is called by:
  3309 ;;		_vfpfcnvrt
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text8
  3314  0014E4                     __ptext8:
  3315                           	opt callstack 0
  3316  0014E4                     _xtoa:
  3317                           	opt callstack 20
  3318                           
  3319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3320                           
  3321                           ;incstack = 0
  3322  0014E4  0100               	movlb	0	; () banked
  3323  0014E6  AF67               	btfss	(_prec+1)& (0+255),7,b
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3327  0014E8  9368               	bcf	_flags& (0+255),1,b
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3331  0014EA  BF67               	btfsc	(_prec+1)& (0+255),7,b
  3332  0014EC  D005               	goto	u2630
  3333  0014EE  5167               	movf	(_prec+1)& (0+255),w,b
  3334  0014F0  E108               	bnz	l299
  3335  0014F2  0566               	decf	_prec& (0+255),w,b
  3336  0014F4  B0D8               	btfsc	status,0,c
  3337  0014F6  D005               	goto	l299
  3338  0014F8                     u2630:
  3339                           
  3340                           ; BSR set to: 0
  3341  0014F8  0E00               	movlw	0
  3342  0014FA  6E2E               	movwf	xtoa@p+1,c
  3343  0014FC  0E01               	movlw	1
  3344  0014FE  6E2D               	movwf	xtoa@p,c
  3345  001500  D004               	goto	l301
  3346  001502                     l299:
  3347                           
  3348                           ; BSR set to: 0
  3349  001502  C066  F02D         	movff	_prec,xtoa@p
  3350  001506  C067  F02E         	movff	_prec+1,xtoa@p+1
  3351  00150A                     l301:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3355  00150A  C064  F02F         	movff	_width,xtoa@w
  3356  00150E  C065  F030         	movff	_width+1,xtoa@w+1
  3357                           
  3358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3359  001512  A968               	btfss	_flags& (0+255),4,b
  3360  001514  D004               	goto	l2839
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3364  001516  0EFE               	movlw	254
  3365  001518  262F               	addwf	xtoa@w,f,c
  3366  00151A  0EFF               	movlw	255
  3367  00151C  2230               	addwfc	xtoa@w+1,f,c
  3368  00151E                     l2839:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3372  00151E  C018  F031         	movff	xtoa@d,xtoa@n
  3373  001522  C019  F032         	movff	xtoa@d+1,xtoa@n+1
  3374  001526  C01A  F033         	movff	xtoa@d+2,xtoa@n+2
  3375  00152A  C01B  F034         	movff	xtoa@d+3,xtoa@n+3
  3376  00152E  C01C  F035         	movff	xtoa@d+4,xtoa@n+4
  3377  001532  C01D  F036         	movff	xtoa@d+5,xtoa@n+5
  3378  001536  C01E  F037         	movff	xtoa@d+6,xtoa@n+6
  3379  00153A  C01F  F038         	movff	xtoa@d+7,xtoa@n+7
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3383  00153E  0E00               	movlw	0
  3384  001540  6E3A               	movwf	xtoa@i+1,c
  3385  001542  0E1F               	movlw	31
  3386  001544  6E39               	movwf	xtoa@i,c
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3390  001546  0E00               	movlw	0
  3391  001548  6F89               	movwf	(_dbuf+31)& (0+255),b
  3392                           
  3393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3394  00154A  D091               	goto	l2875
  3395  00154C                     l2845:
  3396                           
  3397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3398  00154C  0639               	decf	xtoa@i,f,c
  3399  00154E  A0D8               	btfss	status,0,c
  3400  001550  063A               	decf	xtoa@i+1,f,c
  3401                           
  3402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3403  001552  0E0F               	movlw	15
  3404  001554  1431               	andwf	xtoa@n,w,c
  3405  001556  6E3B               	movwf	xtoa@c,c
  3406  001558  6A3C               	clrf	xtoa@c+1,c
  3407                           
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3409  00155A  BE3C               	btfsc	xtoa@c+1,7,c
  3410  00155C  D008               	goto	l2853
  3411  00155E  503C               	movf	xtoa@c+1,w,c
  3412  001560  E104               	bnz	u2650
  3413  001562  0E0A               	movlw	10
  3414  001564  5C3B               	subwf	xtoa@c,w,c
  3415  001566  A0D8               	btfss	status,0,c
  3416  001568  D002               	goto	l2853
  3417  00156A                     u2650:
  3418  00156A  0E57               	movlw	87
  3419  00156C  D001               	goto	L10
  3420  00156E                     l2853:
  3421  00156E  0E30               	movlw	48
  3422  001570                     L10:
  3423  001570  243B               	addwf	xtoa@c,w,c
  3424  001572  6E3B               	movwf	xtoa@c,c
  3425  001574  0E00               	movlw	0
  3426  001576  203C               	addwfc	xtoa@c+1,w,c
  3427  001578  6E3C               	movwf	xtoa@c+1,c
  3428                           
  3429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  3430  00157A  0EBF               	movlw	191
  3431  00157C  6E21               	movwf	??_xtoa& (0+255),c
  3432  00157E  0EFF               	movlw	255
  3433  001580  6E22               	movwf	(??_xtoa+1)& (0+255),c
  3434  001582  5020               	movf	xtoa@x,w,c
  3435  001584  6E23               	movwf	(??_xtoa+2)& (0+255),c
  3436  001586  6A24               	clrf	(??_xtoa+3)& (0+255),c
  3437  001588  5021               	movf	??_xtoa,w,c
  3438  00158A  2623               	addwf	??_xtoa+2,f,c
  3439  00158C  5022               	movf	??_xtoa+1,w,c
  3440  00158E  2224               	addwfc	??_xtoa+3,f,c
  3441  001590  5024               	movf	??_xtoa+3,w,c
  3442  001592  E106               	bnz	u2660
  3443  001594  0E1A               	movlw	26
  3444  001596  5C23               	subwf	??_xtoa+2,w,c
  3445  001598  B0D8               	btfsc	status,0,c
  3446  00159A  D002               	goto	u2660
  3447  00159C  0E01               	movlw	1
  3448  00159E  D001               	goto	u2670
  3449  0015A0                     u2660:
  3450  0015A0  0E00               	movlw	0
  3451  0015A2                     u2670:
  3452  0015A2  6E29               	movwf	_xtoa$388,c
  3453  0015A4  6A2A               	clrf	_xtoa$388+1,c
  3454  0015A6  5029               	movf	_xtoa$388,w,c
  3455  0015A8  102A               	iorwf	_xtoa$388+1,w,c
  3456  0015AA  B4D8               	btfsc	status,2,c
  3457  0015AC  D027               	goto	l2867
  3458  0015AE  0E9F               	movlw	159
  3459  0015B0  6E21               	movwf	??_xtoa& (0+255),c
  3460  0015B2  0EFF               	movlw	255
  3461  0015B4  6E22               	movwf	(??_xtoa+1)& (0+255),c
  3462  0015B6  0E20               	movlw	32
  3463  0015B8  103B               	iorwf	xtoa@c,w,c
  3464  0015BA  6E23               	movwf	(??_xtoa+2)& (0+255),c
  3465  0015BC  0E00               	movlw	0
  3466  0015BE  103C               	iorwf	xtoa@c+1,w,c
  3467  0015C0  6E24               	movwf	(??_xtoa+3)& (0+255),c
  3468  0015C2  5021               	movf	??_xtoa,w,c
  3469  0015C4  2623               	addwf	??_xtoa+2,f,c
  3470  0015C6  5022               	movf	??_xtoa+1,w,c
  3471  0015C8  2224               	addwfc	??_xtoa+3,f,c
  3472  0015CA  5024               	movf	??_xtoa+3,w,c
  3473  0015CC  E106               	bnz	u2690
  3474  0015CE  0E1A               	movlw	26
  3475  0015D0  5C23               	subwf	??_xtoa+2,w,c
  3476  0015D2  B0D8               	btfsc	status,0,c
  3477  0015D4  D002               	goto	u2690
  3478  0015D6  0E01               	movlw	1
  3479  0015D8  D001               	goto	u2700
  3480  0015DA                     u2690:
  3481  0015DA  0E00               	movlw	0
  3482  0015DC                     u2700:
  3483  0015DC  6E2B               	movwf	_xtoa$389,c
  3484  0015DE  6A2C               	clrf	_xtoa$389+1,c
  3485  0015E0  502B               	movf	_xtoa$389,w,c
  3486  0015E2  102C               	iorwf	_xtoa$389+1,w,c
  3487  0015E4  B4D8               	btfsc	status,2,c
  3488  0015E6  D00A               	goto	l2867
  3489                           
  3490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  3491  0015E8  C03B  F007         	movff	xtoa@c,toupper@c
  3492  0015EC  C03C  F008         	movff	xtoa@c+1,toupper@c+1
  3493  0015F0  EC11  F012         	call	_toupper	;wreg free
  3494  0015F4  C007  F03B         	movff	?_toupper,xtoa@c
  3495  0015F8  C008  F03C         	movff	?_toupper+1,xtoa@c+1
  3496  0015FC                     l2867:
  3497                           
  3498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3499  0015FC  5039               	movf	xtoa@i,w,c
  3500  0015FE  0F6A               	addlw	low _dbuf
  3501  001600  6ED9               	movwf	fsr2l,c
  3502  001602  6ADA               	clrf	fsr2h,c
  3503  001604  C03B  FFDF         	movff	xtoa@c,indf2
  3504                           
  3505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3506  001608  062D               	decf	xtoa@p,f,c
  3507  00160A  A0D8               	btfss	status,0,c
  3508  00160C  062E               	decf	xtoa@p+1,f,c
  3509                           
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3511  00160E  062F               	decf	xtoa@w,f,c
  3512  001610  A0D8               	btfss	status,0,c
  3513  001612  0630               	decf	xtoa@w+1,f,c
  3514                           
  3515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3516  001614  C031  F021         	movff	xtoa@n,??_xtoa
  3517  001618  C032  F022         	movff	xtoa@n+1,??_xtoa+1
  3518  00161C  C033  F023         	movff	xtoa@n+2,??_xtoa+2
  3519  001620  C034  F024         	movff	xtoa@n+3,??_xtoa+3
  3520  001624  C035  F025         	movff	xtoa@n+4,??_xtoa+4
  3521  001628  C036  F026         	movff	xtoa@n+5,??_xtoa+5
  3522  00162C  C037  F027         	movff	xtoa@n+6,??_xtoa+6
  3523  001630  C038  F028         	movff	xtoa@n+7,??_xtoa+7
  3524  001634  0E05               	movlw	5
  3525  001636  D009               	goto	u2720
  3526  001638                     u2725:
  3527  001638  90D8               	bcf	status,0,c
  3528  00163A  3228               	rrcf	??_xtoa+7,f,c
  3529  00163C  3227               	rrcf	??_xtoa+6,f,c
  3530  00163E  3226               	rrcf	??_xtoa+5,f,c
  3531  001640  3225               	rrcf	??_xtoa+4,f,c
  3532  001642  3224               	rrcf	??_xtoa+3,f,c
  3533  001644  3223               	rrcf	??_xtoa+2,f,c
  3534  001646  3222               	rrcf	??_xtoa+1,f,c
  3535  001648  3221               	rrcf	??_xtoa,f,c
  3536  00164A                     u2720:
  3537  00164A  2EE8               	decfsz	wreg,f,c
  3538  00164C  D7F5               	goto	u2725
  3539  00164E  C021  F031         	movff	??_xtoa,xtoa@n
  3540  001652  C022  F032         	movff	??_xtoa+1,xtoa@n+1
  3541  001656  C023  F033         	movff	??_xtoa+2,xtoa@n+2
  3542  00165A  C024  F034         	movff	??_xtoa+3,xtoa@n+3
  3543  00165E  C025  F035         	movff	??_xtoa+4,xtoa@n+4
  3544  001662  C026  F036         	movff	??_xtoa+5,xtoa@n+5
  3545  001666  C027  F037         	movff	??_xtoa+6,xtoa@n+6
  3546  00166A  C028  F038         	movff	??_xtoa+7,xtoa@n+7
  3547  00166E                     l2875:
  3548                           
  3549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3550  00166E  BE3A               	btfsc	xtoa@i+1,7,c
  3551  001670  D021               	goto	u2770
  3552  001672  503A               	movf	xtoa@i+1,w,c
  3553  001674  E104               	bnz	u2730
  3554  001676  0E02               	movlw	2
  3555  001678  5C39               	subwf	xtoa@i,w,c
  3556  00167A  A0D8               	btfss	status,0,c
  3557  00167C  D01B               	goto	u2770
  3558  00167E                     u2730:
  3559  00167E  5031               	movf	xtoa@n,w,c
  3560  001680  1032               	iorwf	xtoa@n+1,w,c
  3561  001682  1033               	iorwf	xtoa@n+2,w,c
  3562  001684  1034               	iorwf	xtoa@n+3,w,c
  3563  001686  1035               	iorwf	xtoa@n+4,w,c
  3564  001688  1036               	iorwf	xtoa@n+5,w,c
  3565  00168A  1037               	iorwf	xtoa@n+6,w,c
  3566  00168C  1038               	iorwf	xtoa@n+7,w,c
  3567  00168E  A4D8               	btfss	status,2,c
  3568  001690  D75D               	goto	l2845
  3569  001692  BE2E               	btfsc	xtoa@p+1,7,c
  3570  001694  D005               	goto	u2750
  3571  001696  502E               	movf	xtoa@p+1,w,c
  3572  001698  E102               	bnz	u2751
  3573  00169A  042D               	decf	xtoa@p,w,c
  3574  00169C  B0D8               	btfsc	status,0,c
  3575  00169E                     u2751:
  3576  00169E  D756               	goto	l2845
  3577  0016A0                     u2750:
  3578  0016A0  BE30               	btfsc	xtoa@w+1,7,c
  3579  0016A2  D008               	goto	u2770
  3580  0016A4  5030               	movf	xtoa@w+1,w,c
  3581  0016A6  E103               	bnz	u2760
  3582  0016A8  042F               	decf	xtoa@w,w,c
  3583  0016AA  A0D8               	btfss	status,0,c
  3584  0016AC  D003               	goto	u2770
  3585  0016AE                     u2760:
  3586  0016AE  0100               	movlb	0	; () banked
  3587  0016B0  B368               	btfsc	_flags& (0+255),1,b
  3588  0016B2  D74C               	goto	l2845
  3589  0016B4                     u2770:
  3590                           
  3591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3592  0016B4  0100               	movlb	0	; () banked
  3593  0016B6  A968               	btfss	_flags& (0+255),4,b
  3594  0016B8  D012               	goto	l2891
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3598  0016BA  0639               	decf	xtoa@i,f,c
  3599  0016BC  A0D8               	btfss	status,0,c
  3600  0016BE  063A               	decf	xtoa@i+1,f,c
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3604  0016C0  5039               	movf	xtoa@i,w,c
  3605  0016C2  0F6A               	addlw	low _dbuf
  3606  0016C4  6ED9               	movwf	fsr2l,c
  3607  0016C6  6ADA               	clrf	fsr2h,c
  3608  0016C8  C020  FFDF         	movff	xtoa@x,indf2
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3612  0016CC  0639               	decf	xtoa@i,f,c
  3613  0016CE  A0D8               	btfss	status,0,c
  3614  0016D0  063A               	decf	xtoa@i+1,f,c
  3615                           
  3616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3617  0016D2  5039               	movf	xtoa@i,w,c
  3618  0016D4  0F6A               	addlw	low _dbuf
  3619  0016D6  6ED9               	movwf	fsr2l,c
  3620  0016D8  6ADA               	clrf	fsr2h,c
  3621  0016DA  0E30               	movlw	48
  3622  0016DC  6EDF               	movwf	indf2,c
  3623  0016DE                     l2891:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3627  0016DE  C017  F00E         	movff	xtoa@fp,pad@fp
  3628  0016E2  5039               	movf	xtoa@i,w,c
  3629  0016E4  0F6A               	addlw	low _dbuf
  3630  0016E6  6E0F               	movwf	pad@buf,c
  3631  0016E8  C02F  F010         	movff	xtoa@w,pad@p
  3632  0016EC  C030  F011         	movff	xtoa@w+1,pad@p+1
  3633  0016F0  EC90  F011         	call	_pad	;wreg free
  3634  0016F4  C00E  F017         	movff	?_pad,?_xtoa
  3635  0016F8  C00F  F018         	movff	?_pad+1,?_xtoa+1
  3636  0016FC  0012               	return		;funcret
  3637  0016FE                     __end_of_xtoa:
  3638                           	opt callstack 0
  3639                           
  3640 ;; *************** function _toupper *****************
  3641 ;; Defined at:
  3642 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  c               2    6[COMRAM] int 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  2    6[COMRAM] int 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3656 ;;      Params:         2       0       0       0       0       0       0       0       0
  3657 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3658 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3659 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3660 ;;Total ram usage:        8 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    2
  3663 ;; This function calls:
  3664 ;;		_islower
  3665 ;; This function is called by:
  3666 ;;		_xtoa
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text9
  3671  002422                     __ptext9:
  3672                           	opt callstack 0
  3673  002422                     _toupper:
  3674                           	opt callstack 22
  3675                           
  3676                           ;incstack = 0
  3677  002422  0E9F               	movlw	159
  3678  002424  6E09               	movwf	??_toupper& (0+255),c
  3679  002426  0EFF               	movlw	255
  3680  002428  6E0A               	movwf	(??_toupper+1)& (0+255),c
  3681  00242A  C007  F00B         	movff	toupper@c,??_toupper+2
  3682  00242E  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3683  002432  5009               	movf	??_toupper,w,c
  3684  002434  260B               	addwf	??_toupper+2,f,c
  3685  002436  500A               	movf	??_toupper+1,w,c
  3686  002438  220C               	addwfc	??_toupper+3,f,c
  3687  00243A  500C               	movf	??_toupper+3,w,c
  3688  00243C  E106               	bnz	u1930
  3689  00243E  0E1A               	movlw	26
  3690  002440  5C0B               	subwf	??_toupper+2,w,c
  3691  002442  B0D8               	btfsc	status,0,c
  3692  002444  D002               	goto	u1930
  3693  002446  0E01               	movlw	1
  3694  002448  D001               	goto	u1940
  3695  00244A                     u1930:
  3696  00244A  0E00               	movlw	0
  3697  00244C                     u1940:
  3698  00244C  6E0D               	movwf	_toupper$1072,c
  3699  00244E  6A0E               	clrf	_toupper$1072+1,c
  3700  002450  500D               	movf	_toupper$1072,w,c
  3701  002452  100E               	iorwf	_toupper$1072+1,w,c
  3702  002454  B4D8               	btfsc	status,2,c
  3703  002456  D005               	goto	l1194
  3704  002458  0E5F               	movlw	95
  3705  00245A  1407               	andwf	toupper@c,w,c
  3706  00245C  6E07               	movwf	?_toupper,c
  3707  00245E  6A08               	clrf	?_toupper+1,c
  3708  002460  0012               	return	
  3709  002462                     l1194:
  3710  002462  C007  F007         	movff	toupper@c,?_toupper
  3711  002466  C008  F008         	movff	toupper@c+1,?_toupper+1
  3712  00246A  0012               	return		;funcret
  3713  00246C                     __end_of_toupper:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _islower *****************
  3717 ;; Defined at:
  3718 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  c               2    0[COMRAM] int 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  2    0[COMRAM] int 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3732 ;;      Params:         2       0       0       0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3734 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3735 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3736 ;;Total ram usage:        6 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    1
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_toupper
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text10
  3747  002690                     __ptext10:
  3748                           	opt callstack 0
  3749  002690                     _islower:
  3750                           	opt callstack 22
  3751                           
  3752                           ;incstack = 0
  3753  002690  0E9F               	movlw	159
  3754  002692  6E03               	movwf	??_islower& (0+255),c
  3755  002694  0EFF               	movlw	255
  3756  002696  6E04               	movwf	(??_islower+1)& (0+255),c
  3757  002698  C001  F005         	movff	islower@c,??_islower+2
  3758  00269C  C002  F006         	movff	islower@c+1,??_islower+3
  3759  0026A0  5003               	movf	??_islower,w,c
  3760  0026A2  2605               	addwf	??_islower+2,f,c
  3761  0026A4  5004               	movf	??_islower+1,w,c
  3762  0026A6  2206               	addwfc	??_islower+3,f,c
  3763  0026A8  5006               	movf	??_islower+3,w,c
  3764  0026AA  E106               	bnz	u1820
  3765  0026AC  0E1A               	movlw	26
  3766  0026AE  5C05               	subwf	??_islower+2,w,c
  3767  0026B0  B0D8               	btfsc	status,0,c
  3768  0026B2  D002               	goto	u1820
  3769  0026B4  0E01               	movlw	1
  3770  0026B6  D001               	goto	u1830
  3771  0026B8                     u1820:
  3772  0026B8  0E00               	movlw	0
  3773  0026BA                     u1830:
  3774  0026BA  6E01               	movwf	?_islower,c
  3775  0026BC  6A02               	clrf	?_islower+1,c
  3776  0026BE  0012               	return		;funcret
  3777  0026C0                     __end_of_islower:
  3778                           	opt callstack 0
  3779                           
  3780 ;; *************** function _isupper *****************
  3781 ;; Defined at:
  3782 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  c               2    0[COMRAM] int 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  2    0[COMRAM] int 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3796 ;;      Params:         2       0       0       0       0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3798 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3799 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3800 ;;Total ram usage:        6 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_xtoa
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text11
  3811  0026C0                     __ptext11:
  3812                           	opt callstack 0
  3813  0026C0                     _isupper:
  3814                           	opt callstack 23
  3815                           
  3816                           ;incstack = 0
  3817  0026C0  0EBF               	movlw	191
  3818  0026C2  6E03               	movwf	??_isupper& (0+255),c
  3819  0026C4  0EFF               	movlw	255
  3820  0026C6  6E04               	movwf	(??_isupper+1)& (0+255),c
  3821  0026C8  C001  F005         	movff	isupper@c,??_isupper+2
  3822  0026CC  C002  F006         	movff	isupper@c+1,??_isupper+3
  3823  0026D0  5003               	movf	??_isupper,w,c
  3824  0026D2  2605               	addwf	??_isupper+2,f,c
  3825  0026D4  5004               	movf	??_isupper+1,w,c
  3826  0026D6  2206               	addwfc	??_isupper+3,f,c
  3827  0026D8  5006               	movf	??_isupper+3,w,c
  3828  0026DA  E106               	bnz	u1890
  3829  0026DC  0E1A               	movlw	26
  3830  0026DE  5C05               	subwf	??_isupper+2,w,c
  3831  0026E0  B0D8               	btfsc	status,0,c
  3832  0026E2  D002               	goto	u1890
  3833  0026E4  0E01               	movlw	1
  3834  0026E6  D001               	goto	u1900
  3835  0026E8                     u1890:
  3836  0026E8  0E00               	movlw	0
  3837  0026EA                     u1900:
  3838  0026EA  6E01               	movwf	?_isupper,c
  3839  0026EC  6A02               	clrf	?_isupper+1,c
  3840  0026EE  0012               	return		;funcret
  3841  0026F0                     __end_of_isupper:
  3842                           	opt callstack 0
  3843                           
  3844 ;; *************** function _isalpha *****************
  3845 ;; Defined at:
  3846 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  c               2    0[COMRAM] int 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  2    0[COMRAM] int 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3860 ;;      Params:         2       0       0       0       0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3862 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3863 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3864 ;;Total ram usage:        6 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    1
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_xtoa
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text12
  3875  00262A                     __ptext12:
  3876                           	opt callstack 0
  3877  00262A                     _isalpha:
  3878                           	opt callstack 23
  3879                           
  3880                           ;incstack = 0
  3881  00262A  0E9F               	movlw	159
  3882  00262C  6E03               	movwf	??_isalpha& (0+255),c
  3883  00262E  0EFF               	movlw	255
  3884  002630  6E04               	movwf	(??_isalpha+1)& (0+255),c
  3885  002632  0E20               	movlw	32
  3886  002634  1001               	iorwf	isalpha@c,w,c
  3887  002636  6E05               	movwf	(??_isalpha+2)& (0+255),c
  3888  002638  0E00               	movlw	0
  3889  00263A  1002               	iorwf	isalpha@c+1,w,c
  3890  00263C  6E06               	movwf	(??_isalpha+3)& (0+255),c
  3891  00263E  5003               	movf	??_isalpha,w,c
  3892  002640  2605               	addwf	??_isalpha+2,f,c
  3893  002642  5004               	movf	??_isalpha+1,w,c
  3894  002644  2206               	addwfc	??_isalpha+3,f,c
  3895  002646  5006               	movf	??_isalpha+3,w,c
  3896  002648  E106               	bnz	u1910
  3897  00264A  0E1A               	movlw	26
  3898  00264C  5C05               	subwf	??_isalpha+2,w,c
  3899  00264E  B0D8               	btfsc	status,0,c
  3900  002650  D002               	goto	u1910
  3901  002652  0E01               	movlw	1
  3902  002654  D001               	goto	u1920
  3903  002656                     u1910:
  3904  002656  0E00               	movlw	0
  3905  002658                     u1920:
  3906  002658  6E01               	movwf	?_isalpha,c
  3907  00265A  6A02               	clrf	?_isalpha+1,c
  3908  00265C  0012               	return		;funcret
  3909  00265E                     __end_of_isalpha:
  3910                           	opt callstack 0
  3911                           
  3912 ;; *************** function _utoa *****************
  3913 ;; Defined at:
  3914 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
  3917 ;;		 -> vsnprintf@f(5), 
  3918 ;;  d               8   26[COMRAM] unsigned long long 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  n               8   46[COMRAM] unsigned long long 
  3921 ;;  i               2   54[COMRAM] int 
  3922 ;;  w               2   44[COMRAM] int 
  3923 ;;  p               2   42[COMRAM] int 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2   25[COMRAM] int 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3933 ;;      Params:         9       0       0       0       0       0       0       0       0
  3934 ;;      Locals:        14       0       0       0       0       0       0       0       0
  3935 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3936 ;;      Totals:        31       0       0       0       0       0       0       0       0
  3937 ;;Total ram usage:       31 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    5
  3940 ;; This function calls:
  3941 ;;		___lodiv
  3942 ;;		___lomod
  3943 ;;		_pad
  3944 ;; This function is called by:
  3945 ;;		_vfpfcnvrt
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text13
  3950  0016FE                     __ptext13:
  3951                           	opt callstack 0
  3952  0016FE                     _utoa:
  3953                           	opt callstack 20
  3954                           
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  3956                           
  3957                           ;incstack = 0
  3958  0016FE  0100               	movlb	0	; () banked
  3959  001700  AF67               	btfss	(_prec+1)& (0+255),7,b
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  3963  001702  9368               	bcf	_flags& (0+255),1,b
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  3967  001704  BF67               	btfsc	(_prec+1)& (0+255),7,b
  3968  001706  D005               	goto	u2560
  3969  001708  5167               	movf	(_prec+1)& (0+255),w,b
  3970  00170A  E108               	bnz	l284
  3971  00170C  0566               	decf	_prec& (0+255),w,b
  3972  00170E  B0D8               	btfsc	status,0,c
  3973  001710  D005               	goto	l284
  3974  001712                     u2560:
  3975                           
  3976                           ; BSR set to: 0
  3977  001712  0E00               	movlw	0
  3978  001714  6E2C               	movwf	utoa@p+1,c
  3979  001716  0E01               	movlw	1
  3980  001718  6E2B               	movwf	utoa@p,c
  3981  00171A  D004               	goto	l286
  3982  00171C                     l284:
  3983                           
  3984                           ; BSR set to: 0
  3985  00171C  C066  F02B         	movff	_prec,utoa@p
  3986  001720  C067  F02C         	movff	_prec+1,utoa@p+1
  3987  001724                     l286:
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  3991  001724  C064  F02D         	movff	_width,utoa@w
  3992  001728  C065  F02E         	movff	_width+1,utoa@w+1
  3993                           
  3994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  3995  00172C  C01B  F02F         	movff	utoa@d,utoa@n
  3996  001730  C01C  F030         	movff	utoa@d+1,utoa@n+1
  3997  001734  C01D  F031         	movff	utoa@d+2,utoa@n+2
  3998  001738  C01E  F032         	movff	utoa@d+3,utoa@n+3
  3999  00173C  C01F  F033         	movff	utoa@d+4,utoa@n+4
  4000  001740  C020  F034         	movff	utoa@d+5,utoa@n+5
  4001  001744  C021  F035         	movff	utoa@d+6,utoa@n+6
  4002  001748  C022  F036         	movff	utoa@d+7,utoa@n+7
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  4006  00174C  0E00               	movlw	0
  4007  00174E  6E38               	movwf	utoa@i+1,c
  4008  001750  0E1F               	movlw	31
  4009  001752  6E37               	movwf	utoa@i,c
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  4013  001754  0E00               	movlw	0
  4014  001756  6F89               	movwf	(_dbuf+31)& (0+255),b
  4015                           
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4017  001758  D074               	goto	l2815
  4018  00175A                     l2805:
  4019                           
  4020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  4021  00175A  0637               	decf	utoa@i,f,c
  4022  00175C  A0D8               	btfss	status,0,c
  4023  00175E  0638               	decf	utoa@i+1,f,c
  4024                           
  4025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  4026  001760  5037               	movf	utoa@i,w,c
  4027  001762  0F6A               	addlw	low _dbuf
  4028  001764  6ED9               	movwf	fsr2l,c
  4029  001766  6ADA               	clrf	fsr2h,c
  4030  001768  C02F  F001         	movff	utoa@n,___lomod@dividend
  4031  00176C  C030  F002         	movff	utoa@n+1,___lomod@dividend+1
  4032  001770  C031  F003         	movff	utoa@n+2,___lomod@dividend+2
  4033  001774  C032  F004         	movff	utoa@n+3,___lomod@dividend+3
  4034  001778  C033  F005         	movff	utoa@n+4,___lomod@dividend+4
  4035  00177C  C034  F006         	movff	utoa@n+5,___lomod@dividend+5
  4036  001780  C035  F007         	movff	utoa@n+6,___lomod@dividend+6
  4037  001784  C036  F008         	movff	utoa@n+7,___lomod@dividend+7
  4038  001788  0E0A               	movlw	10
  4039  00178A  6E09               	movwf	___lomod@divisor,c
  4040  00178C  0E00               	movlw	0
  4041  00178E  6E0A               	movwf	___lomod@divisor+1,c
  4042  001790  0E00               	movlw	0
  4043  001792  6E0B               	movwf	___lomod@divisor+2,c
  4044  001794  0E00               	movlw	0
  4045  001796  6E0C               	movwf	___lomod@divisor+3,c
  4046  001798  0E00               	movlw	0
  4047  00179A  6E0D               	movwf	___lomod@divisor+4,c
  4048  00179C  0E00               	movlw	0
  4049  00179E  6E0E               	movwf	___lomod@divisor+5,c
  4050  0017A0  0E00               	movlw	0
  4051  0017A2  6E0F               	movwf	___lomod@divisor+6,c
  4052  0017A4  0E00               	movlw	0
  4053  0017A6  6E10               	movwf	___lomod@divisor+7,c
  4054  0017A8  EC9C  F010         	call	___lomod	;wreg free
  4055  0017AC  C001  F023         	movff	?___lomod,??_utoa
  4056  0017B0  C002  F024         	movff	?___lomod+1,??_utoa+1
  4057  0017B4  C003  F025         	movff	?___lomod+2,??_utoa+2
  4058  0017B8  C004  F026         	movff	?___lomod+3,??_utoa+3
  4059  0017BC  C005  F027         	movff	?___lomod+4,??_utoa+4
  4060  0017C0  C006  F028         	movff	?___lomod+5,??_utoa+5
  4061  0017C4  C007  F029         	movff	?___lomod+6,??_utoa+6
  4062  0017C8  C008  F02A         	movff	?___lomod+7,??_utoa+7
  4063  0017CC  5023               	movf	??_utoa,w,c
  4064  0017CE  0F30               	addlw	48
  4065  0017D0  6EDF               	movwf	indf2,c
  4066                           
  4067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  4068  0017D2  062B               	decf	utoa@p,f,c
  4069  0017D4  A0D8               	btfss	status,0,c
  4070  0017D6  062C               	decf	utoa@p+1,f,c
  4071                           
  4072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  4073  0017D8  062D               	decf	utoa@w,f,c
  4074  0017DA  A0D8               	btfss	status,0,c
  4075  0017DC  062E               	decf	utoa@w+1,f,c
  4076                           
  4077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  4078  0017DE  C02F  F001         	movff	utoa@n,___lodiv@dividend
  4079  0017E2  C030  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4080  0017E6  C031  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4081  0017EA  C032  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4082  0017EE  C033  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4083  0017F2  C034  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4084  0017F6  C035  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4085  0017FA  C036  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4086  0017FE  0E0A               	movlw	10
  4087  001800  6E09               	movwf	___lodiv@divisor,c
  4088  001802  0E00               	movlw	0
  4089  001804  6E0A               	movwf	___lodiv@divisor+1,c
  4090  001806  0E00               	movlw	0
  4091  001808  6E0B               	movwf	___lodiv@divisor+2,c
  4092  00180A  0E00               	movlw	0
  4093  00180C  6E0C               	movwf	___lodiv@divisor+3,c
  4094  00180E  0E00               	movlw	0
  4095  001810  6E0D               	movwf	___lodiv@divisor+4,c
  4096  001812  0E00               	movlw	0
  4097  001814  6E0E               	movwf	___lodiv@divisor+5,c
  4098  001816  0E00               	movlw	0
  4099  001818  6E0F               	movwf	___lodiv@divisor+6,c
  4100  00181A  0E00               	movlw	0
  4101  00181C  6E10               	movwf	___lodiv@divisor+7,c
  4102  00181E  ECD7  F00F         	call	___lodiv	;wreg free
  4103  001822  C001  F02F         	movff	?___lodiv,utoa@n
  4104  001826  C002  F030         	movff	?___lodiv+1,utoa@n+1
  4105  00182A  C003  F031         	movff	?___lodiv+2,utoa@n+2
  4106  00182E  C004  F032         	movff	?___lodiv+3,utoa@n+3
  4107  001832  C005  F033         	movff	?___lodiv+4,utoa@n+4
  4108  001836  C006  F034         	movff	?___lodiv+5,utoa@n+5
  4109  00183A  C007  F035         	movff	?___lodiv+6,utoa@n+6
  4110  00183E  C008  F036         	movff	?___lodiv+7,utoa@n+7
  4111  001842                     l2815:
  4112                           
  4113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4114  001842  5037               	movf	utoa@i,w,c
  4115  001844  1038               	iorwf	utoa@i+1,w,c
  4116  001846  B4D8               	btfsc	status,2,c
  4117  001848  D01B               	goto	u2610
  4118  00184A  502F               	movf	utoa@n,w,c
  4119  00184C  1030               	iorwf	utoa@n+1,w,c
  4120  00184E  1031               	iorwf	utoa@n+2,w,c
  4121  001850  1032               	iorwf	utoa@n+3,w,c
  4122  001852  1033               	iorwf	utoa@n+4,w,c
  4123  001854  1034               	iorwf	utoa@n+5,w,c
  4124  001856  1035               	iorwf	utoa@n+6,w,c
  4125  001858  1036               	iorwf	utoa@n+7,w,c
  4126  00185A  A4D8               	btfss	status,2,c
  4127  00185C  D77E               	goto	l2805
  4128  00185E  BE2C               	btfsc	utoa@p+1,7,c
  4129  001860  D005               	goto	u2590
  4130  001862  502C               	movf	utoa@p+1,w,c
  4131  001864  E102               	bnz	u2591
  4132  001866  042B               	decf	utoa@p,w,c
  4133  001868  B0D8               	btfsc	status,0,c
  4134  00186A                     u2591:
  4135  00186A  D777               	goto	l2805
  4136  00186C                     u2590:
  4137  00186C  BE2E               	btfsc	utoa@w+1,7,c
  4138  00186E  D008               	goto	u2610
  4139  001870  502E               	movf	utoa@w+1,w,c
  4140  001872  E103               	bnz	u2600
  4141  001874  042D               	decf	utoa@w,w,c
  4142  001876  A0D8               	btfss	status,0,c
  4143  001878  D003               	goto	u2610
  4144  00187A                     u2600:
  4145  00187A  0100               	movlb	0	; () banked
  4146  00187C  B368               	btfsc	_flags& (0+255),1,b
  4147  00187E  D76D               	goto	l2805
  4148  001880                     u2610:
  4149                           
  4150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  4151  001880  C01A  F00E         	movff	utoa@fp,pad@fp
  4152  001884  5037               	movf	utoa@i,w,c
  4153  001886  0F6A               	addlw	low _dbuf
  4154  001888  6E0F               	movwf	pad@buf,c
  4155  00188A  C02D  F010         	movff	utoa@w,pad@p
  4156  00188E  C02E  F011         	movff	utoa@w+1,pad@p+1
  4157  001892  EC90  F011         	call	_pad	;wreg free
  4158  001896  C00E  F01A         	movff	?_pad,?_utoa
  4159  00189A  C00F  F01B         	movff	?_pad+1,?_utoa+1
  4160  00189E  0012               	return		;funcret
  4161  0018A0                     __end_of_utoa:
  4162                           	opt callstack 0
  4163                           
  4164 ;; *************** function ___lomod *****************
  4165 ;; Defined at:
  4166 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  dividend        8    0[COMRAM] unsigned long long 
  4169 ;;  divisor         8    8[COMRAM] unsigned long long 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  counter         1   16[COMRAM] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  8    0[COMRAM] unsigned long long 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4181 ;;      Params:        16       0       0       0       0       0       0       0       0
  4182 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4184 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4185 ;;Total ram usage:       17 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    1
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_utoa
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text14
  4196  002138                     __ptext14:
  4197                           	opt callstack 0
  4198  002138                     ___lomod:
  4199                           	opt callstack 23
  4200                           
  4201                           ;incstack = 0
  4202  002138  5009               	movf	___lomod@divisor,w,c
  4203  00213A  100A               	iorwf	___lomod@divisor+1,w,c
  4204  00213C  100B               	iorwf	___lomod@divisor+2,w,c
  4205  00213E  100C               	iorwf	___lomod@divisor+3,w,c
  4206  002140  100D               	iorwf	___lomod@divisor+4,w,c
  4207  002142  100E               	iorwf	___lomod@divisor+5,w,c
  4208  002144  100F               	iorwf	___lomod@divisor+6,w,c
  4209  002146  1010               	iorwf	___lomod@divisor+7,w,c
  4210  002148  B4D8               	btfsc	status,2,c
  4211  00214A  D03C               	goto	l857
  4212  00214C  0E01               	movlw	1
  4213  00214E  6E11               	movwf	___lomod@counter,c
  4214  002150  D00A               	goto	l2605
  4215  002152                     l2603:
  4216  002152  90D8               	bcf	status,0,c
  4217  002154  3609               	rlcf	___lomod@divisor,f,c
  4218  002156  360A               	rlcf	___lomod@divisor+1,f,c
  4219  002158  360B               	rlcf	___lomod@divisor+2,f,c
  4220  00215A  360C               	rlcf	___lomod@divisor+3,f,c
  4221  00215C  360D               	rlcf	___lomod@divisor+4,f,c
  4222  00215E  360E               	rlcf	___lomod@divisor+5,f,c
  4223  002160  360F               	rlcf	___lomod@divisor+6,f,c
  4224  002162  3610               	rlcf	___lomod@divisor+7,f,c
  4225  002164  2A11               	incf	___lomod@counter,f,c
  4226  002166                     l2605:
  4227  002166  AE10               	btfss	___lomod@divisor+7,7,c
  4228  002168  D7F4               	goto	l2603
  4229  00216A                     u2160:
  4230  00216A  5009               	movf	___lomod@divisor,w,c
  4231  00216C  5C01               	subwf	___lomod@dividend,w,c
  4232  00216E  500A               	movf	___lomod@divisor+1,w,c
  4233  002170  5802               	subwfb	___lomod@dividend+1,w,c
  4234  002172  500B               	movf	___lomod@divisor+2,w,c
  4235  002174  5803               	subwfb	___lomod@dividend+2,w,c
  4236  002176  500C               	movf	___lomod@divisor+3,w,c
  4237  002178  5804               	subwfb	___lomod@dividend+3,w,c
  4238  00217A  500D               	movf	___lomod@divisor+4,w,c
  4239  00217C  5805               	subwfb	___lomod@dividend+4,w,c
  4240  00217E  500E               	movf	___lomod@divisor+5,w,c
  4241  002180  5806               	subwfb	___lomod@dividend+5,w,c
  4242  002182  500F               	movf	___lomod@divisor+6,w,c
  4243  002184  5807               	subwfb	___lomod@dividend+6,w,c
  4244  002186  5010               	movf	___lomod@divisor+7,w,c
  4245  002188  5808               	subwfb	___lomod@dividend+7,w,c
  4246  00218A  A0D8               	btfss	status,0,c
  4247  00218C  D010               	goto	l2611
  4248  00218E  5009               	movf	___lomod@divisor,w,c
  4249  002190  5E01               	subwf	___lomod@dividend,f,c
  4250  002192  500A               	movf	___lomod@divisor+1,w,c
  4251  002194  5A02               	subwfb	___lomod@dividend+1,f,c
  4252  002196  500B               	movf	___lomod@divisor+2,w,c
  4253  002198  5A03               	subwfb	___lomod@dividend+2,f,c
  4254  00219A  500C               	movf	___lomod@divisor+3,w,c
  4255  00219C  5A04               	subwfb	___lomod@dividend+3,f,c
  4256  00219E  500D               	movf	___lomod@divisor+4,w,c
  4257  0021A0  5A05               	subwfb	___lomod@dividend+4,f,c
  4258  0021A2  500E               	movf	___lomod@divisor+5,w,c
  4259  0021A4  5A06               	subwfb	___lomod@dividend+5,f,c
  4260  0021A6  500F               	movf	___lomod@divisor+6,w,c
  4261  0021A8  5A07               	subwfb	___lomod@dividend+6,f,c
  4262  0021AA  5010               	movf	___lomod@divisor+7,w,c
  4263  0021AC  5A08               	subwfb	___lomod@dividend+7,f,c
  4264  0021AE                     l2611:
  4265  0021AE  90D8               	bcf	status,0,c
  4266  0021B0  3210               	rrcf	___lomod@divisor+7,f,c
  4267  0021B2  320F               	rrcf	___lomod@divisor+6,f,c
  4268  0021B4  320E               	rrcf	___lomod@divisor+5,f,c
  4269  0021B6  320D               	rrcf	___lomod@divisor+4,f,c
  4270  0021B8  320C               	rrcf	___lomod@divisor+3,f,c
  4271  0021BA  320B               	rrcf	___lomod@divisor+2,f,c
  4272  0021BC  320A               	rrcf	___lomod@divisor+1,f,c
  4273  0021BE  3209               	rrcf	___lomod@divisor,f,c
  4274  0021C0  2E11               	decfsz	___lomod@counter,f,c
  4275  0021C2  D7D3               	goto	u2160
  4276  0021C4                     l857:
  4277  0021C4  C001  F001         	movff	___lomod@dividend,?___lomod
  4278  0021C8  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4279  0021CC  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4280  0021D0  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4281  0021D4  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4282  0021D8  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4283  0021DC  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4284  0021E0  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4285  0021E4  0012               	return		;funcret
  4286  0021E6                     __end_of___lomod:
  4287                           	opt callstack 0
  4288                           
  4289 ;; *************** function ___lodiv *****************
  4290 ;; Defined at:
  4291 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  dividend        8    0[COMRAM] unsigned long long 
  4294 ;;  divisor         8    8[COMRAM] unsigned long long 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  quotient        8   16[COMRAM] unsigned long long 
  4297 ;;  counter         1   24[COMRAM] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  8    0[COMRAM] unsigned long long 
  4300 ;; Registers used:
  4301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4307 ;;      Params:        16       0       0       0       0       0       0       0       0
  4308 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4310 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4311 ;;Total ram usage:       25 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    1
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_utoa
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text15
  4322  001FAE                     __ptext15:
  4323                           	opt callstack 0
  4324  001FAE                     ___lodiv:
  4325                           	opt callstack 23
  4326                           
  4327                           ;incstack = 0
  4328  001FAE  EE20  F011         	lfsr	2,___lodiv@quotient
  4329  001FB2  0E07               	movlw	7
  4330  001FB4                     u2111:
  4331  001FB4  6ADE               	clrf	postinc2,c
  4332  001FB6  06E8               	decf	wreg,f,c
  4333  001FB8  E2FD               	bc	u2111
  4334  001FBA  5009               	movf	___lodiv@divisor,w,c
  4335  001FBC  100A               	iorwf	___lodiv@divisor+1,w,c
  4336  001FBE  100B               	iorwf	___lodiv@divisor+2,w,c
  4337  001FC0  100C               	iorwf	___lodiv@divisor+3,w,c
  4338  001FC2  100D               	iorwf	___lodiv@divisor+4,w,c
  4339  001FC4  100E               	iorwf	___lodiv@divisor+5,w,c
  4340  001FC6  100F               	iorwf	___lodiv@divisor+6,w,c
  4341  001FC8  1010               	iorwf	___lodiv@divisor+7,w,c
  4342  001FCA  B4D8               	btfsc	status,2,c
  4343  001FCC  D046               	goto	l847
  4344  001FCE  0E01               	movlw	1
  4345  001FD0  6E19               	movwf	___lodiv@counter,c
  4346  001FD2  D00A               	goto	l2585
  4347  001FD4                     l2583:
  4348  001FD4  90D8               	bcf	status,0,c
  4349  001FD6  3609               	rlcf	___lodiv@divisor,f,c
  4350  001FD8  360A               	rlcf	___lodiv@divisor+1,f,c
  4351  001FDA  360B               	rlcf	___lodiv@divisor+2,f,c
  4352  001FDC  360C               	rlcf	___lodiv@divisor+3,f,c
  4353  001FDE  360D               	rlcf	___lodiv@divisor+4,f,c
  4354  001FE0  360E               	rlcf	___lodiv@divisor+5,f,c
  4355  001FE2  360F               	rlcf	___lodiv@divisor+6,f,c
  4356  001FE4  3610               	rlcf	___lodiv@divisor+7,f,c
  4357  001FE6  2A19               	incf	___lodiv@counter,f,c
  4358  001FE8                     l2585:
  4359  001FE8  AE10               	btfss	___lodiv@divisor+7,7,c
  4360  001FEA  D7F4               	goto	l2583
  4361  001FEC                     u2130:
  4362  001FEC  90D8               	bcf	status,0,c
  4363  001FEE  3611               	rlcf	___lodiv@quotient,f,c
  4364  001FF0  3612               	rlcf	___lodiv@quotient+1,f,c
  4365  001FF2  3613               	rlcf	___lodiv@quotient+2,f,c
  4366  001FF4  3614               	rlcf	___lodiv@quotient+3,f,c
  4367  001FF6  3615               	rlcf	___lodiv@quotient+4,f,c
  4368  001FF8  3616               	rlcf	___lodiv@quotient+5,f,c
  4369  001FFA  3617               	rlcf	___lodiv@quotient+6,f,c
  4370  001FFC  3618               	rlcf	___lodiv@quotient+7,f,c
  4371  001FFE  5009               	movf	___lodiv@divisor,w,c
  4372  002000  5C01               	subwf	___lodiv@dividend,w,c
  4373  002002  500A               	movf	___lodiv@divisor+1,w,c
  4374  002004  5802               	subwfb	___lodiv@dividend+1,w,c
  4375  002006  500B               	movf	___lodiv@divisor+2,w,c
  4376  002008  5803               	subwfb	___lodiv@dividend+2,w,c
  4377  00200A  500C               	movf	___lodiv@divisor+3,w,c
  4378  00200C  5804               	subwfb	___lodiv@dividend+3,w,c
  4379  00200E  500D               	movf	___lodiv@divisor+4,w,c
  4380  002010  5805               	subwfb	___lodiv@dividend+4,w,c
  4381  002012  500E               	movf	___lodiv@divisor+5,w,c
  4382  002014  5806               	subwfb	___lodiv@dividend+5,w,c
  4383  002016  500F               	movf	___lodiv@divisor+6,w,c
  4384  002018  5807               	subwfb	___lodiv@dividend+6,w,c
  4385  00201A  5010               	movf	___lodiv@divisor+7,w,c
  4386  00201C  5808               	subwfb	___lodiv@dividend+7,w,c
  4387  00201E  A0D8               	btfss	status,0,c
  4388  002020  D011               	goto	l2595
  4389  002022  5009               	movf	___lodiv@divisor,w,c
  4390  002024  5E01               	subwf	___lodiv@dividend,f,c
  4391  002026  500A               	movf	___lodiv@divisor+1,w,c
  4392  002028  5A02               	subwfb	___lodiv@dividend+1,f,c
  4393  00202A  500B               	movf	___lodiv@divisor+2,w,c
  4394  00202C  5A03               	subwfb	___lodiv@dividend+2,f,c
  4395  00202E  500C               	movf	___lodiv@divisor+3,w,c
  4396  002030  5A04               	subwfb	___lodiv@dividend+3,f,c
  4397  002032  500D               	movf	___lodiv@divisor+4,w,c
  4398  002034  5A05               	subwfb	___lodiv@dividend+4,f,c
  4399  002036  500E               	movf	___lodiv@divisor+5,w,c
  4400  002038  5A06               	subwfb	___lodiv@dividend+5,f,c
  4401  00203A  500F               	movf	___lodiv@divisor+6,w,c
  4402  00203C  5A07               	subwfb	___lodiv@dividend+6,f,c
  4403  00203E  5010               	movf	___lodiv@divisor+7,w,c
  4404  002040  5A08               	subwfb	___lodiv@dividend+7,f,c
  4405  002042  8011               	bsf	___lodiv@quotient,0,c
  4406  002044                     l2595:
  4407  002044  90D8               	bcf	status,0,c
  4408  002046  3210               	rrcf	___lodiv@divisor+7,f,c
  4409  002048  320F               	rrcf	___lodiv@divisor+6,f,c
  4410  00204A  320E               	rrcf	___lodiv@divisor+5,f,c
  4411  00204C  320D               	rrcf	___lodiv@divisor+4,f,c
  4412  00204E  320C               	rrcf	___lodiv@divisor+3,f,c
  4413  002050  320B               	rrcf	___lodiv@divisor+2,f,c
  4414  002052  320A               	rrcf	___lodiv@divisor+1,f,c
  4415  002054  3209               	rrcf	___lodiv@divisor,f,c
  4416  002056  2E19               	decfsz	___lodiv@counter,f,c
  4417  002058  D7C9               	goto	u2130
  4418  00205A                     l847:
  4419  00205A  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4420  00205E  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4421  002062  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4422  002066  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4423  00206A  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4424  00206E  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4425  002072  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4426  002076  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4427  00207A  0012               	return		;funcret
  4428  00207C                     __end_of___lodiv:
  4429                           	opt callstack 0
  4430                           
  4431 ;; *************** function _strncmp *****************
  4432 ;; Defined at:
  4433 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  _l              1    0[COMRAM] PTR const unsigned char 
  4436 ;;		 -> STR_1(3), 
  4437 ;;  _r              1    1[COMRAM] PTR const unsigned char 
  4438 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_85(3), 
  4439 ;;		 -> STR_80(4), STR_76(4), STR_71(3), STR_66(3), 
  4440 ;;		 -> STR_61(4), STR_56(3), STR_51(3), STR_46(4), 
  4441 ;;		 -> STR_41(3), STR_36(3), STR_31(4), STR_26(3), 
  4442 ;;		 -> STR_22(3), STR_17(3), STR_13(3), STR_8(4), 
  4443 ;;		 -> STR_4(4), 
  4444 ;;  n               2    2[COMRAM] unsigned int 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  r               1    6[COMRAM] PTR const unsigned char 
  4447 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_85(3), 
  4448 ;;		 -> STR_80(4), STR_76(4), STR_71(3), STR_66(3), 
  4449 ;;		 -> STR_61(4), STR_56(3), STR_51(3), STR_46(4), 
  4450 ;;		 -> STR_41(3), STR_36(3), STR_31(4), STR_26(3), 
  4451 ;;		 -> STR_22(3), STR_17(3), STR_13(3), STR_8(4), 
  4452 ;;		 -> STR_4(4), 
  4453 ;;  l               1    5[COMRAM] PTR const unsigned char 
  4454 ;;		 -> STR_1(3), 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  2    0[COMRAM] int 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4464 ;;      Params:         4       0       0       0       0       0       0       0       0
  4465 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4466 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4467 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4468 ;;Total ram usage:        7 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    1
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_vfpfcnvrt
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text16
  4479  0021E6                     __ptext16:
  4480                           	opt callstack 0
  4481  0021E6                     _strncmp:
  4482                           	opt callstack 24
  4483                           
  4484                           ;incstack = 0
  4485  0021E6  C001  F006         	movff	strncmp@_l,strncmp@l
  4486  0021EA  C002  F007         	movff	strncmp@_r,strncmp@r
  4487  0021EE  0603               	decf	strncmp@n,f,c
  4488  0021F0  A0D8               	btfss	status,0,c
  4489  0021F2  0604               	decf	strncmp@n+1,f,c
  4490  0021F4  2803               	incf	strncmp@n,w,c
  4491  0021F6  E10D               	bnz	l2945
  4492  0021F8  2804               	incf	strncmp@n+1,w,c
  4493  0021FA  A4D8               	btfss	status,2,c
  4494  0021FC  D00A               	goto	l2945
  4495  0021FE  0E00               	movlw	0
  4496  002200  6E02               	movwf	?_strncmp+1,c
  4497  002202  0E00               	movlw	0
  4498  002204  6E01               	movwf	?_strncmp,c
  4499  002206  0012               	return	
  4500  002208                     l2943:
  4501  002208  2A06               	incf	strncmp@l,f,c
  4502  00220A  2A07               	incf	strncmp@r,f,c
  4503  00220C  0603               	decf	strncmp@n,f,c
  4504  00220E  A0D8               	btfss	status,0,c
  4505  002210  0604               	decf	strncmp@n+1,f,c
  4506  002212                     l2945:
  4507  002212  C006  FFF6         	movff	strncmp@l,tblptrl
  4508  002216                     	if	1	;There is more than 1 active tblptr byte
  4509  002216  0E08               	movlw	high __smallconst
  4510  002218  6EF7               	movwf	tblptrh,c
  4511  00221A                     	endif
  4512  00221A                     	if	0	;tblptru may be non-zero
  4513  00221A                     	endif
  4514  00221A                     	if	0	;tblptru may be non-zero
  4515  00221A                     	endif
  4516  00221A  0008               	tblrd		*
  4517  00221C  50F5               	movf	tablat,w,c
  4518  00221E  0900               	iorlw	0
  4519  002220  B4D8               	btfsc	status,2,c
  4520  002222  D01D               	goto	u2900
  4521  002224  C007  FFF6         	movff	strncmp@r,tblptrl
  4522  002228                     	if	1	;There is more than 1 active tblptr byte
  4523  002228  0E08               	movlw	high __smallconst
  4524  00222A  6EF7               	movwf	tblptrh,c
  4525  00222C                     	endif
  4526  00222C                     	if	0	;tblptru may be non-zero
  4527  00222C                     	endif
  4528  00222C                     	if	0	;tblptru may be non-zero
  4529  00222C                     	endif
  4530  00222C  0008               	tblrd		*
  4531  00222E  50F5               	movf	tablat,w,c
  4532  002230  0900               	iorlw	0
  4533  002232  B4D8               	btfsc	status,2,c
  4534  002234  D014               	goto	u2900
  4535  002236  5003               	movf	strncmp@n,w,c
  4536  002238  1004               	iorwf	strncmp@n+1,w,c
  4537  00223A  B4D8               	btfsc	status,2,c
  4538  00223C  D010               	goto	u2900
  4539  00223E  C006  FFF6         	movff	strncmp@l,tblptrl
  4540  002242                     	if	1	;There is more than 1 active tblptr byte
  4541  002242  0E08               	movlw	high __smallconst
  4542  002244  6EF7               	movwf	tblptrh,c
  4543  002246                     	endif
  4544  002246                     	if	0	;tblptru may be non-zero
  4545  002246                     	endif
  4546  002246                     	if	0	;tblptru may be non-zero
  4547  002246                     	endif
  4548  002246  0008               	tblrd		*
  4549  002248  CFF5 F005          	movff	tablat,??_strncmp
  4550  00224C  C007  FFF6         	movff	strncmp@r,tblptrl
  4551  002250                     	if	1	;There is more than 1 active tblptr byte
  4552  002250  0E08               	movlw	high __smallconst
  4553  002252  6EF7               	movwf	tblptrh,c
  4554  002254                     	endif
  4555  002254                     	if	0	;tblptru may be non-zero
  4556  002254                     	endif
  4557  002254                     	if	0	;tblptru may be non-zero
  4558  002254                     	endif
  4559  002254  0008               	tblrd		*
  4560  002256  50F5               	movf	tablat,w,c
  4561  002258  1805               	xorwf	??_strncmp,w,c
  4562  00225A  B4D8               	btfsc	status,2,c
  4563  00225C  D7D5               	goto	l2943
  4564  00225E                     u2900:
  4565  00225E  C006  FFF6         	movff	strncmp@l,tblptrl
  4566  002262                     	if	1	;There is more than 1 active tblptr byte
  4567  002262  0E08               	movlw	high __smallconst
  4568  002264  6EF7               	movwf	tblptrh,c
  4569  002266                     	endif
  4570  002266                     	if	0	;tblptru may be non-zero
  4571  002266                     	endif
  4572  002266                     	if	0	;tblptru may be non-zero
  4573  002266                     	endif
  4574  002266  0008               	tblrd		*
  4575  002268  CFF5 F005          	movff	tablat,??_strncmp
  4576  00226C  C007  FFF6         	movff	strncmp@r,tblptrl
  4577  002270                     	if	1	;There is more than 1 active tblptr byte
  4578  002270  0E08               	movlw	high __smallconst
  4579  002272  6EF7               	movwf	tblptrh,c
  4580  002274                     	endif
  4581  002274                     	if	0	;tblptru may be non-zero
  4582  002274                     	endif
  4583  002274                     	if	0	;tblptru may be non-zero
  4584  002274                     	endif
  4585  002274  0008               	tblrd		*
  4586  002276  50F5               	movf	tablat,w,c
  4587  002278  5C05               	subwf	??_strncmp,w,c
  4588  00227A  6E01               	movwf	?_strncmp,c
  4589  00227C  6A02               	clrf	?_strncmp+1,c
  4590  00227E  A0D8               	btfss	status,0,c
  4591  002280  0602               	decf	?_strncmp+1,f,c
  4592  002282  0012               	return		;funcret
  4593  002284                     __end_of_strncmp:
  4594                           	opt callstack 0
  4595                           
  4596 ;; *************** function _stoa *****************
  4597 ;; Defined at:
  4598 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  4601 ;;		 -> vsnprintf@f(5), 
  4602 ;;  s               1    9[COMRAM] PTR unsigned char 
  4603 ;;		 -> ?_snprintf(2), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  nuls            7   11[COMRAM] unsigned char [7]
  4606 ;;  l               2   25[COMRAM] int 
  4607 ;;  p               2   23[COMRAM] int 
  4608 ;;  w               2   20[COMRAM] int 
  4609 ;;  i               2   18[COMRAM] int 
  4610 ;;  cp              1   22[COMRAM] PTR unsigned char 
  4611 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  2    8[COMRAM] int 
  4614 ;; Registers used:
  4615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4621 ;;      Params:         2       0       0       0       0       0       0       0       0
  4622 ;;      Locals:        16       0       0       0       0       0       0       0       0
  4623 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4624 ;;      Totals:        19       0       0       0       0       0       0       0       0
  4625 ;;Total ram usage:       19 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    3
  4628 ;; This function calls:
  4629 ;;		_fputc
  4630 ;;		_strlen
  4631 ;; This function is called by:
  4632 ;;		_vfpfcnvrt
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text17
  4637  001DB8                     __ptext17:
  4638                           	opt callstack 0
  4639  001DB8                     _stoa:
  4640                           	opt callstack 22
  4641                           
  4642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  4643                           
  4644                           ;incstack = 0
  4645  001DB8  EE20  F0B3         	lfsr	2,stoa@F1152
  4646  001DBC  EE10  F00C         	lfsr	1,stoa@nuls
  4647  001DC0  0E06               	movlw	6
  4648  001DC2                     u2461:
  4649  001DC2  CFDB FFE3          	movff	plusw2,plusw1
  4650  001DC6  06E8               	decf	wreg,f,c
  4651  001DC8  E2FC               	bc	u2461
  4652                           
  4653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  4654  001DCA  C00A  F017         	movff	stoa@s,stoa@cp
  4655                           
  4656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  4657  001DCE  5017               	movf	stoa@cp,w,c
  4658  001DD0  A4D8               	btfss	status,2,c
  4659  001DD2  D002               	goto	l2759
  4660                           
  4661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  4662  001DD4  0E0C               	movlw	low stoa@nuls
  4663  001DD6  6E17               	movwf	stoa@cp,c
  4664  001DD8                     l2759:
  4665                           
  4666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  4667  001DD8  C017  F001         	movff	stoa@cp,strlen@s
  4668  001DDC  ECBB  F013         	call	_strlen	;wreg free
  4669  001DE0  C001  F01A         	movff	?_strlen,stoa@l
  4670  001DE4  C002  F01B         	movff	?_strlen+1,stoa@l+1
  4671                           
  4672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  4673  001DE8  C066  F018         	movff	_prec,stoa@p
  4674  001DEC  C067  F019         	movff	_prec+1,stoa@p+1
  4675                           
  4676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  4677  001DF0  BE19               	btfsc	stoa@p+1,7,c
  4678  001DF2  D00E               	goto	l265
  4679  001DF4  501A               	movf	stoa@l,w,c
  4680  001DF6  5C18               	subwf	stoa@p,w,c
  4681  001DF8  5019               	movf	stoa@p+1,w,c
  4682  001DFA  0A80               	xorlw	128
  4683  001DFC  6E0B               	movwf	??_stoa& (0+255),c
  4684  001DFE  501B               	movf	stoa@l+1,w,c
  4685  001E00  0A80               	xorlw	128
  4686  001E02  580B               	subwfb	??_stoa& (0+255),w,c
  4687  001E04  B0D8               	btfsc	status,0,c
  4688  001E06  D004               	goto	l265
  4689  001E08  C018  F01A         	movff	stoa@p,stoa@l
  4690  001E0C  C019  F01B         	movff	stoa@p+1,stoa@l+1
  4691  001E10                     l265:
  4692                           
  4693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  4694  001E10  C01A  F018         	movff	stoa@l,stoa@p
  4695  001E14  C01B  F019         	movff	stoa@l+1,stoa@p+1
  4696                           
  4697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  4698  001E18  C064  F015         	movff	_width,stoa@w
  4699  001E1C  C065  F016         	movff	_width+1,stoa@w+1
  4700                           
  4701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  4702  001E20  0100               	movlb	0	; () banked
  4703  001E22  A168               	btfss	_flags& (0+255),0,b
  4704  001E24  D00B               	goto	l2773
  4705  001E26  D014               	goto	u2510
  4706  001E28                     l2769:
  4707                           
  4708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  4709  001E28  0E00               	movlw	0
  4710  001E2A  6E02               	movwf	fputc@c+1,c
  4711  001E2C  0E20               	movlw	32
  4712  001E2E  6E01               	movwf	fputc@c,c
  4713  001E30  C009  F003         	movff	stoa@fp,fputc@fp
  4714  001E34  ECD1  F011         	call	_fputc	;wreg free
  4715                           
  4716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  4717  001E38  4A1A               	infsnz	stoa@l,f,c
  4718  001E3A  2A1B               	incf	stoa@l+1,f,c
  4719  001E3C                     l2773:
  4720                           
  4721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  4722  001E3C  5015               	movf	stoa@w,w,c
  4723  001E3E  5C1A               	subwf	stoa@l,w,c
  4724  001E40  501B               	movf	stoa@l+1,w,c
  4725  001E42  0A80               	xorlw	128
  4726  001E44  6E0B               	movwf	??_stoa& (0+255),c
  4727  001E46  5016               	movf	stoa@w+1,w,c
  4728  001E48  0A80               	xorlw	128
  4729  001E4A  580B               	subwfb	??_stoa& (0+255),w,c
  4730  001E4C  A0D8               	btfss	status,0,c
  4731  001E4E  D7EC               	goto	l2769
  4732  001E50                     u2510:
  4733                           
  4734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  4735  001E50  0E00               	movlw	0
  4736  001E52  6E14               	movwf	stoa@i+1,c
  4737  001E54  0E00               	movlw	0
  4738  001E56  6E13               	movwf	stoa@i,c
  4739                           
  4740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4741  001E58  D00F               	goto	l2783
  4742  001E5A                     l2777:
  4743                           
  4744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  4745  001E5A  5017               	movf	stoa@cp,w,c
  4746  001E5C  6ED9               	movwf	fsr2l,c
  4747  001E5E  6ADA               	clrf	fsr2h,c
  4748  001E60  50DF               	movf	indf2,w,c
  4749  001E62  6E0B               	movwf	??_stoa& (0+255),c
  4750  001E64  500B               	movf	??_stoa,w,c
  4751  001E66  6E01               	movwf	fputc@c,c
  4752  001E68  6A02               	clrf	fputc@c+1,c
  4753  001E6A  C009  F003         	movff	stoa@fp,fputc@fp
  4754  001E6E  ECD1  F011         	call	_fputc	;wreg free
  4755                           
  4756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  4757  001E72  2A17               	incf	stoa@cp,f,c
  4758                           
  4759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  4760  001E74  4A13               	infsnz	stoa@i,f,c
  4761  001E76  2A14               	incf	stoa@i+1,f,c
  4762  001E78                     l2783:
  4763                           
  4764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4765  001E78  5018               	movf	stoa@p,w,c
  4766  001E7A  5C13               	subwf	stoa@i,w,c
  4767  001E7C  5014               	movf	stoa@i+1,w,c
  4768  001E7E  0A80               	xorlw	128
  4769  001E80  6E0B               	movwf	??_stoa& (0+255),c
  4770  001E82  5019               	movf	stoa@p+1,w,c
  4771  001E84  0A80               	xorlw	128
  4772  001E86  580B               	subwfb	??_stoa& (0+255),w,c
  4773  001E88  A0D8               	btfss	status,0,c
  4774  001E8A  D7E7               	goto	l2777
  4775                           
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  4777  001E8C  0100               	movlb	0	; () banked
  4778  001E8E  B168               	btfsc	_flags& (0+255),0,b
  4779  001E90  D00B               	goto	l2791
  4780  001E92  D014               	goto	u2540
  4781  001E94                     l2787:
  4782                           
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  4784  001E94  0E00               	movlw	0
  4785  001E96  6E02               	movwf	fputc@c+1,c
  4786  001E98  0E20               	movlw	32
  4787  001E9A  6E01               	movwf	fputc@c,c
  4788  001E9C  C009  F003         	movff	stoa@fp,fputc@fp
  4789  001EA0  ECD1  F011         	call	_fputc	;wreg free
  4790                           
  4791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  4792  001EA4  4A1A               	infsnz	stoa@l,f,c
  4793  001EA6  2A1B               	incf	stoa@l+1,f,c
  4794  001EA8                     l2791:
  4795                           
  4796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  4797  001EA8  5015               	movf	stoa@w,w,c
  4798  001EAA  5C1A               	subwf	stoa@l,w,c
  4799  001EAC  501B               	movf	stoa@l+1,w,c
  4800  001EAE  0A80               	xorlw	128
  4801  001EB0  6E0B               	movwf	??_stoa& (0+255),c
  4802  001EB2  5016               	movf	stoa@w+1,w,c
  4803  001EB4  0A80               	xorlw	128
  4804  001EB6  580B               	subwfb	??_stoa& (0+255),w,c
  4805  001EB8  A0D8               	btfss	status,0,c
  4806  001EBA  D7EC               	goto	l2787
  4807  001EBC                     u2540:
  4808                           
  4809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  4810                           
  4811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  4812  001EBC  C01A  F009         	movff	stoa@l,?_stoa
  4813  001EC0  C01B  F00A         	movff	stoa@l+1,?_stoa+1
  4814  001EC4  0012               	return		;funcret
  4815  001EC6                     __end_of_stoa:
  4816                           	opt callstack 0
  4817                           
  4818 ;; *************** function _otoa *****************
  4819 ;; Defined at:
  4820 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  4823 ;;		 -> vsnprintf@f(5), 
  4824 ;;  d               8   23[COMRAM] unsigned long long 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  n               8   45[COMRAM] unsigned long long 
  4827 ;;  i               2   53[COMRAM] int 
  4828 ;;  w               2   43[COMRAM] int 
  4829 ;;  t               2   41[COMRAM] int 
  4830 ;;  p               2   39[COMRAM] int 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  2   22[COMRAM] int 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4840 ;;      Params:         9       0       0       0       0       0       0       0       0
  4841 ;;      Locals:        16       0       0       0       0       0       0       0       0
  4842 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4843 ;;      Totals:        33       0       0       0       0       0       0       0       0
  4844 ;;Total ram usage:       33 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:    5
  4847 ;; This function calls:
  4848 ;;		_pad
  4849 ;; This function is called by:
  4850 ;;		_vfpfcnvrt
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text18
  4855  0018A0                     __ptext18:
  4856                           	opt callstack 0
  4857  0018A0                     _otoa:
  4858                           	opt callstack 20
  4859                           
  4860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  4861                           
  4862                           ;incstack = 0
  4863  0018A0  0100               	movlb	0	; () banked
  4864  0018A2  AF67               	btfss	(_prec+1)& (0+255),7,b
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  4868  0018A4  9368               	bcf	_flags& (0+255),1,b
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  4872  0018A6  BF67               	btfsc	(_prec+1)& (0+255),7,b
  4873  0018A8  D005               	goto	u2370
  4874  0018AA  5167               	movf	(_prec+1)& (0+255),w,b
  4875  0018AC  E108               	bnz	l245
  4876  0018AE  0566               	decf	_prec& (0+255),w,b
  4877  0018B0  B0D8               	btfsc	status,0,c
  4878  0018B2  D005               	goto	l245
  4879  0018B4                     u2370:
  4880                           
  4881                           ; BSR set to: 0
  4882  0018B4  0E00               	movlw	0
  4883  0018B6  6E29               	movwf	otoa@p+1,c
  4884  0018B8  0E01               	movlw	1
  4885  0018BA  6E28               	movwf	otoa@p,c
  4886  0018BC  D004               	goto	l247
  4887  0018BE                     l245:
  4888                           
  4889                           ; BSR set to: 0
  4890  0018BE  C066  F028         	movff	_prec,otoa@p
  4891  0018C2  C067  F029         	movff	_prec+1,otoa@p+1
  4892  0018C6                     l247:
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  4896  0018C6  C064  F02C         	movff	_width,otoa@w
  4897  0018CA  C065  F02D         	movff	_width+1,otoa@w+1
  4898                           
  4899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  4900  0018CE  C018  F02E         	movff	otoa@d,otoa@n
  4901  0018D2  C019  F02F         	movff	otoa@d+1,otoa@n+1
  4902  0018D6  C01A  F030         	movff	otoa@d+2,otoa@n+2
  4903  0018DA  C01B  F031         	movff	otoa@d+3,otoa@n+3
  4904  0018DE  C01C  F032         	movff	otoa@d+4,otoa@n+4
  4905  0018E2  C01D  F033         	movff	otoa@d+5,otoa@n+5
  4906  0018E6  C01E  F034         	movff	otoa@d+6,otoa@n+6
  4907  0018EA  C01F  F035         	movff	otoa@d+7,otoa@n+7
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  4911  0018EE  0E00               	movlw	0
  4912  0018F0  6E37               	movwf	otoa@i+1,c
  4913  0018F2  0E1F               	movlw	31
  4914  0018F4  6E36               	movwf	otoa@i,c
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  4918  0018F6  0E00               	movlw	0
  4919  0018F8  6F89               	movwf	(_dbuf+31)& (0+255),b
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  4923  0018FA  0E00               	movlw	0
  4924  0018FC  6E2B               	movwf	otoa@t+1,c
  4925  0018FE  0E00               	movlw	0
  4926  001900  6E2A               	movwf	otoa@t,c
  4927                           
  4928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4929  001902  D041               	goto	l2729
  4930  001904                     l2717:
  4931                           
  4932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  4933  001904  0636               	decf	otoa@i,f,c
  4934  001906  A0D8               	btfss	status,0,c
  4935  001908  0637               	decf	otoa@i+1,f,c
  4936                           
  4937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  4938  00190A  0E07               	movlw	7
  4939  00190C  142E               	andwf	otoa@n,w,c
  4940  00190E  6E2A               	movwf	otoa@t,c
  4941  001910  6A2B               	clrf	otoa@t+1,c
  4942                           
  4943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  4944  001912  5036               	movf	otoa@i,w,c
  4945  001914  0F6A               	addlw	low _dbuf
  4946  001916  6ED9               	movwf	fsr2l,c
  4947  001918  6ADA               	clrf	fsr2h,c
  4948  00191A  502A               	movf	otoa@t,w,c
  4949  00191C  0F30               	addlw	48
  4950  00191E  6EDF               	movwf	indf2,c
  4951                           
  4952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  4953  001920  0628               	decf	otoa@p,f,c
  4954  001922  A0D8               	btfss	status,0,c
  4955  001924  0629               	decf	otoa@p+1,f,c
  4956                           
  4957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  4958  001926  062C               	decf	otoa@w,f,c
  4959  001928  A0D8               	btfss	status,0,c
  4960  00192A  062D               	decf	otoa@w+1,f,c
  4961                           
  4962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  4963  00192C  C02E  F020         	movff	otoa@n,??_otoa
  4964  001930  C02F  F021         	movff	otoa@n+1,??_otoa+1
  4965  001934  C030  F022         	movff	otoa@n+2,??_otoa+2
  4966  001938  C031  F023         	movff	otoa@n+3,??_otoa+3
  4967  00193C  C032  F024         	movff	otoa@n+4,??_otoa+4
  4968  001940  C033  F025         	movff	otoa@n+5,??_otoa+5
  4969  001944  C034  F026         	movff	otoa@n+6,??_otoa+6
  4970  001948  C035  F027         	movff	otoa@n+7,??_otoa+7
  4971  00194C  0E04               	movlw	4
  4972  00194E  D009               	goto	u2380
  4973  001950                     u2385:
  4974  001950  90D8               	bcf	status,0,c
  4975  001952  3227               	rrcf	??_otoa+7,f,c
  4976  001954  3226               	rrcf	??_otoa+6,f,c
  4977  001956  3225               	rrcf	??_otoa+5,f,c
  4978  001958  3224               	rrcf	??_otoa+4,f,c
  4979  00195A  3223               	rrcf	??_otoa+3,f,c
  4980  00195C  3222               	rrcf	??_otoa+2,f,c
  4981  00195E  3221               	rrcf	??_otoa+1,f,c
  4982  001960  3220               	rrcf	??_otoa,f,c
  4983  001962                     u2380:
  4984  001962  2EE8               	decfsz	wreg,f,c
  4985  001964  D7F5               	goto	u2385
  4986  001966  C020  F02E         	movff	??_otoa,otoa@n
  4987  00196A  C021  F02F         	movff	??_otoa+1,otoa@n+1
  4988  00196E  C022  F030         	movff	??_otoa+2,otoa@n+2
  4989  001972  C023  F031         	movff	??_otoa+3,otoa@n+3
  4990  001976  C024  F032         	movff	??_otoa+4,otoa@n+4
  4991  00197A  C025  F033         	movff	??_otoa+5,otoa@n+5
  4992  00197E  C026  F034         	movff	??_otoa+6,otoa@n+6
  4993  001982  C027  F035         	movff	??_otoa+7,otoa@n+7
  4994  001986                     l2729:
  4995                           
  4996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4997  001986  BE37               	btfsc	otoa@i+1,7,c
  4998  001988  D020               	goto	u2430
  4999  00198A  5037               	movf	otoa@i+1,w,c
  5000  00198C  E103               	bnz	u2390
  5001  00198E  0436               	decf	otoa@i,w,c
  5002  001990  A0D8               	btfss	status,0,c
  5003  001992  D01B               	goto	u2430
  5004  001994                     u2390:
  5005  001994  502E               	movf	otoa@n,w,c
  5006  001996  102F               	iorwf	otoa@n+1,w,c
  5007  001998  1030               	iorwf	otoa@n+2,w,c
  5008  00199A  1031               	iorwf	otoa@n+3,w,c
  5009  00199C  1032               	iorwf	otoa@n+4,w,c
  5010  00199E  1033               	iorwf	otoa@n+5,w,c
  5011  0019A0  1034               	iorwf	otoa@n+6,w,c
  5012  0019A2  1035               	iorwf	otoa@n+7,w,c
  5013  0019A4  A4D8               	btfss	status,2,c
  5014  0019A6  D7AE               	goto	l2717
  5015  0019A8  BE29               	btfsc	otoa@p+1,7,c
  5016  0019AA  D005               	goto	u2410
  5017  0019AC  5029               	movf	otoa@p+1,w,c
  5018  0019AE  E1AA               	bnz	l2717
  5019  0019B0  0428               	decf	otoa@p,w,c
  5020  0019B2  B0D8               	btfsc	status,0,c
  5021  0019B4  D7A7               	goto	l2717
  5022  0019B6                     u2410:
  5023  0019B6  BE2D               	btfsc	otoa@w+1,7,c
  5024  0019B8  D008               	goto	u2430
  5025  0019BA  502D               	movf	otoa@w+1,w,c
  5026  0019BC  E103               	bnz	u2420
  5027  0019BE  042C               	decf	otoa@w,w,c
  5028  0019C0  A0D8               	btfss	status,0,c
  5029  0019C2  D003               	goto	u2430
  5030  0019C4                     u2420:
  5031  0019C4  0100               	movlb	0	; () banked
  5032  0019C6  B368               	btfsc	_flags& (0+255),1,b
  5033  0019C8  D79D               	goto	l2717
  5034  0019CA                     u2430:
  5035                           
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  5037  0019CA  0100               	movlb	0	; () banked
  5038  0019CC  A968               	btfss	_flags& (0+255),4,b
  5039  0019CE  D010               	goto	l2747
  5040                           
  5041                           ; BSR set to: 0
  5042  0019D0  502A               	movf	otoa@t,w,c
  5043  0019D2  102B               	iorwf	otoa@t+1,w,c
  5044  0019D4  B4D8               	btfsc	status,2,c
  5045  0019D6  D00C               	goto	l2747
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  5049  0019D8  0636               	decf	otoa@i,f,c
  5050  0019DA  A0D8               	btfss	status,0,c
  5051  0019DC  0637               	decf	otoa@i+1,f,c
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  5055  0019DE  5036               	movf	otoa@i,w,c
  5056  0019E0  0F6A               	addlw	low _dbuf
  5057  0019E2  6ED9               	movwf	fsr2l,c
  5058  0019E4  6ADA               	clrf	fsr2h,c
  5059  0019E6  0E30               	movlw	48
  5060  0019E8  6EDF               	movwf	indf2,c
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  5064  0019EA  062C               	decf	otoa@w,f,c
  5065  0019EC  A0D8               	btfss	status,0,c
  5066  0019EE  062D               	decf	otoa@w+1,f,c
  5067  0019F0                     l2747:
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  5071  0019F0  C017  F00E         	movff	otoa@fp,pad@fp
  5072  0019F4  5036               	movf	otoa@i,w,c
  5073  0019F6  0F6A               	addlw	low _dbuf
  5074  0019F8  6E0F               	movwf	pad@buf,c
  5075  0019FA  C02C  F010         	movff	otoa@w,pad@p
  5076  0019FE  C02D  F011         	movff	otoa@w+1,pad@p+1
  5077  001A02  EC90  F011         	call	_pad	;wreg free
  5078  001A06  C00E  F017         	movff	?_pad,?_otoa
  5079  001A0A  C00F  F018         	movff	?_pad+1,?_otoa+1
  5080  001A0E  0012               	return		;funcret
  5081  001A10                     __end_of_otoa:
  5082                           	opt callstack 0
  5083                           
  5084 ;; *************** function _dtoa *****************
  5085 ;; Defined at:
  5086 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  fp              1   26[COMRAM] PTR struct _IO_FILE
  5089 ;;		 -> vsnprintf@f(5), 
  5090 ;;  d               8   27[COMRAM] long long 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  n               8   51[COMRAM] long long 
  5093 ;;  i               2   59[COMRAM] int 
  5094 ;;  s               2   49[COMRAM] int 
  5095 ;;  w               2   47[COMRAM] int 
  5096 ;;  p               2   45[COMRAM] int 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  2   26[COMRAM] int 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5106 ;;      Params:         9       0       0       0       0       0       0       0       0
  5107 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5108 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5109 ;;      Totals:        35       0       0       0       0       0       0       0       0
  5110 ;;Total ram usage:       35 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    5
  5113 ;; This function calls:
  5114 ;;		___aodiv
  5115 ;;		___aomod
  5116 ;;		_abs
  5117 ;;		_pad
  5118 ;; This function is called by:
  5119 ;;		_vfpfcnvrt
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text19
  5124  0012B0                     __ptext19:
  5125                           	opt callstack 0
  5126  0012B0                     _dtoa:
  5127                           	opt callstack 20
  5128                           
  5129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5130                           
  5131                           ;incstack = 0
  5132  0012B0  C01C  F034         	movff	dtoa@d,dtoa@n
  5133  0012B4  C01D  F035         	movff	dtoa@d+1,dtoa@n+1
  5134  0012B8  C01E  F036         	movff	dtoa@d+2,dtoa@n+2
  5135  0012BC  C01F  F037         	movff	dtoa@d+3,dtoa@n+3
  5136  0012C0  C020  F038         	movff	dtoa@d+4,dtoa@n+4
  5137  0012C4  C021  F039         	movff	dtoa@d+5,dtoa@n+5
  5138  0012C8  C022  F03A         	movff	dtoa@d+6,dtoa@n+6
  5139  0012CC  C023  F03B         	movff	dtoa@d+7,dtoa@n+7
  5140                           
  5141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5142  0012D0  AE3B               	btfss	dtoa@n+7,7,c
  5143  0012D2  D002               	goto	u2210
  5144  0012D4  0E01               	movlw	1
  5145  0012D6  D001               	goto	u2220
  5146  0012D8                     u2210:
  5147  0012D8  0E00               	movlw	0
  5148  0012DA                     u2220:
  5149  0012DA  6E32               	movwf	dtoa@s,c
  5150  0012DC  6A33               	clrf	dtoa@s+1,c
  5151                           
  5152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5153  0012DE  5032               	movf	dtoa@s,w,c
  5154  0012E0  1033               	iorwf	dtoa@s+1,w,c
  5155  0012E2  B4D8               	btfsc	status,2,c
  5156  0012E4  D010               	goto	l2647
  5157                           
  5158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5159  0012E6  1E3B               	comf	dtoa@n+7,f,c
  5160  0012E8  1E3A               	comf	dtoa@n+6,f,c
  5161  0012EA  1E39               	comf	dtoa@n+5,f,c
  5162  0012EC  1E38               	comf	dtoa@n+4,f,c
  5163  0012EE  1E37               	comf	dtoa@n+3,f,c
  5164  0012F0  1E36               	comf	dtoa@n+2,f,c
  5165  0012F2  1E35               	comf	dtoa@n+1,f,c
  5166  0012F4  6C34               	negf	dtoa@n,c
  5167  0012F6  0E00               	movlw	0
  5168  0012F8  2235               	addwfc	dtoa@n+1,f,c
  5169  0012FA  2236               	addwfc	dtoa@n+2,f,c
  5170  0012FC  2237               	addwfc	dtoa@n+3,f,c
  5171  0012FE  2238               	addwfc	dtoa@n+4,f,c
  5172  001300  2239               	addwfc	dtoa@n+5,f,c
  5173  001302  223A               	addwfc	dtoa@n+6,f,c
  5174  001304  223B               	addwfc	dtoa@n+7,f,c
  5175  001306                     l2647:
  5176                           
  5177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5178  001306  0100               	movlb	0	; () banked
  5179  001308  AF67               	btfss	(_prec+1)& (0+255),7,b
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5183  00130A  9368               	bcf	_flags& (0+255),1,b
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5187  00130C  BF67               	btfsc	(_prec+1)& (0+255),7,b
  5188  00130E  D005               	goto	u2250
  5189  001310  5167               	movf	(_prec+1)& (0+255),w,b
  5190  001312  E108               	bnz	l220
  5191  001314  0566               	decf	_prec& (0+255),w,b
  5192  001316  B0D8               	btfsc	status,0,c
  5193  001318  D005               	goto	l220
  5194  00131A                     u2250:
  5195                           
  5196                           ; BSR set to: 0
  5197  00131A  0E00               	movlw	0
  5198  00131C  6E2F               	movwf	dtoa@p+1,c
  5199  00131E  0E01               	movlw	1
  5200  001320  6E2E               	movwf	dtoa@p,c
  5201  001322  D004               	goto	l222
  5202  001324                     l220:
  5203                           
  5204                           ; BSR set to: 0
  5205  001324  C066  F02E         	movff	_prec,dtoa@p
  5206  001328  C067  F02F         	movff	_prec+1,dtoa@p+1
  5207  00132C                     l222:
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5211  00132C  C064  F030         	movff	_width,dtoa@w
  5212  001330  C065  F031         	movff	_width+1,dtoa@w+1
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5216  001334  5032               	movf	dtoa@s,w,c
  5217  001336  1033               	iorwf	dtoa@s+1,w,c
  5218  001338  A4D8               	btfss	status,2,c
  5219  00133A  D002               	goto	u2270
  5220                           
  5221                           ; BSR set to: 0
  5222  00133C  A568               	btfss	_flags& (0+255),2,b
  5223  00133E  D003               	goto	l2661
  5224  001340                     u2270:
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5228  001340  0630               	decf	dtoa@w,f,c
  5229  001342  A0D8               	btfss	status,0,c
  5230  001344  0631               	decf	dtoa@w+1,f,c
  5231  001346                     l2661:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5235  001346  0E00               	movlw	0
  5236  001348  6E3D               	movwf	dtoa@i+1,c
  5237  00134A  0E1F               	movlw	31
  5238  00134C  6E3C               	movwf	dtoa@i,c
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5242  00134E  0E00               	movlw	0
  5243  001350  6F89               	movwf	(_dbuf+31)& (0+255),b
  5244                           
  5245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5246  001352  D07A               	goto	l2675
  5247  001354                     l2665:
  5248                           
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5250  001354  063C               	decf	dtoa@i,f,c
  5251  001356  A0D8               	btfss	status,0,c
  5252  001358  063D               	decf	dtoa@i+1,f,c
  5253                           
  5254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5255  00135A  503C               	movf	dtoa@i,w,c
  5256  00135C  0F6A               	addlw	low _dbuf
  5257  00135E  6ED9               	movwf	fsr2l,c
  5258  001360  6ADA               	clrf	fsr2h,c
  5259  001362  C034  F001         	movff	dtoa@n,___aomod@dividend
  5260  001366  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5261  00136A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5262  00136E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5263  001372  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5264  001376  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5265  00137A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5266  00137E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5267  001382  0E0A               	movlw	10
  5268  001384  6E09               	movwf	___aomod@divisor,c
  5269  001386  0E00               	movlw	0
  5270  001388  6E0A               	movwf	___aomod@divisor+1,c
  5271  00138A  0E00               	movlw	0
  5272  00138C  6E0B               	movwf	___aomod@divisor+2,c
  5273  00138E  0E00               	movlw	0
  5274  001390  6E0C               	movwf	___aomod@divisor+3,c
  5275  001392  0E00               	movlw	0
  5276  001394  6E0D               	movwf	___aomod@divisor+4,c
  5277  001396  0E00               	movlw	0
  5278  001398  6E0E               	movwf	___aomod@divisor+5,c
  5279  00139A  0E00               	movlw	0
  5280  00139C  6E0F               	movwf	___aomod@divisor+6,c
  5281  00139E  0E00               	movlw	0
  5282  0013A0  6E10               	movwf	___aomod@divisor+7,c
  5283  0013A2  EC4A  F00E         	call	___aomod	;wreg free
  5284  0013A6  C001  F024         	movff	?___aomod,??_dtoa
  5285  0013AA  C002  F025         	movff	?___aomod+1,??_dtoa+1
  5286  0013AE  C003  F026         	movff	?___aomod+2,??_dtoa+2
  5287  0013B2  C004  F027         	movff	?___aomod+3,??_dtoa+3
  5288  0013B6  C005  F028         	movff	?___aomod+4,??_dtoa+4
  5289  0013BA  C006  F029         	movff	?___aomod+5,??_dtoa+5
  5290  0013BE  C007  F02A         	movff	?___aomod+6,??_dtoa+6
  5291  0013C2  C008  F02B         	movff	?___aomod+7,??_dtoa+7
  5292  0013C6  C024  F013         	movff	??_dtoa,abs@a
  5293  0013CA  C026  F014         	movff	??_dtoa+2,abs@a+1
  5294  0013CE  EC2F  F013         	call	_abs	;wreg free
  5295  0013D2  5013               	movf	?_abs,w,c
  5296  0013D4  0F30               	addlw	48
  5297  0013D6  6EDF               	movwf	indf2,c
  5298                           
  5299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5300  0013D8  062E               	decf	dtoa@p,f,c
  5301  0013DA  A0D8               	btfss	status,0,c
  5302  0013DC  062F               	decf	dtoa@p+1,f,c
  5303                           
  5304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5305  0013DE  0630               	decf	dtoa@w,f,c
  5306  0013E0  A0D8               	btfss	status,0,c
  5307  0013E2  0631               	decf	dtoa@w+1,f,c
  5308                           
  5309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5310  0013E4  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5311  0013E8  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5312  0013EC  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5313  0013F0  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5314  0013F4  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5315  0013F8  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5316  0013FC  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5317  001400  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5318  001404  0E0A               	movlw	10
  5319  001406  6E09               	movwf	___aodiv@divisor,c
  5320  001408  0E00               	movlw	0
  5321  00140A  6E0A               	movwf	___aodiv@divisor+1,c
  5322  00140C  0E00               	movlw	0
  5323  00140E  6E0B               	movwf	___aodiv@divisor+2,c
  5324  001410  0E00               	movlw	0
  5325  001412  6E0C               	movwf	___aodiv@divisor+3,c
  5326  001414  0E00               	movlw	0
  5327  001416  6E0D               	movwf	___aodiv@divisor+4,c
  5328  001418  0E00               	movlw	0
  5329  00141A  6E0E               	movwf	___aodiv@divisor+5,c
  5330  00141C  0E00               	movlw	0
  5331  00141E  6E0F               	movwf	___aodiv@divisor+6,c
  5332  001420  0E00               	movlw	0
  5333  001422  6E10               	movwf	___aodiv@divisor+7,c
  5334  001424  EC08  F00D         	call	___aodiv	;wreg free
  5335  001428  C001  F034         	movff	?___aodiv,dtoa@n
  5336  00142C  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5337  001430  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5338  001434  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5339  001438  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5340  00143C  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5341  001440  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5342  001444  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5343  001448                     l2675:
  5344                           
  5345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5346  001448  BE3D               	btfsc	dtoa@i+1,7,c
  5347  00144A  D020               	goto	u2320
  5348  00144C  503D               	movf	dtoa@i+1,w,c
  5349  00144E  E103               	bnz	u2280
  5350  001450  043C               	decf	dtoa@i,w,c
  5351  001452  A0D8               	btfss	status,0,c
  5352  001454  D01B               	goto	u2320
  5353  001456                     u2280:
  5354  001456  5034               	movf	dtoa@n,w,c
  5355  001458  1035               	iorwf	dtoa@n+1,w,c
  5356  00145A  1036               	iorwf	dtoa@n+2,w,c
  5357  00145C  1037               	iorwf	dtoa@n+3,w,c
  5358  00145E  1038               	iorwf	dtoa@n+4,w,c
  5359  001460  1039               	iorwf	dtoa@n+5,w,c
  5360  001462  103A               	iorwf	dtoa@n+6,w,c
  5361  001464  103B               	iorwf	dtoa@n+7,w,c
  5362  001466  A4D8               	btfss	status,2,c
  5363  001468  D775               	goto	l2665
  5364  00146A  BE2F               	btfsc	dtoa@p+1,7,c
  5365  00146C  D005               	goto	u2300
  5366  00146E  502F               	movf	dtoa@p+1,w,c
  5367  001470  E102               	bnz	u2301
  5368  001472  042E               	decf	dtoa@p,w,c
  5369  001474  B0D8               	btfsc	status,0,c
  5370  001476                     u2301:
  5371  001476  D76E               	goto	l2665
  5372  001478                     u2300:
  5373  001478  BE31               	btfsc	dtoa@w+1,7,c
  5374  00147A  D008               	goto	u2320
  5375  00147C  5031               	movf	dtoa@w+1,w,c
  5376  00147E  E103               	bnz	u2310
  5377  001480  0430               	decf	dtoa@w,w,c
  5378  001482  A0D8               	btfss	status,0,c
  5379  001484  D003               	goto	u2320
  5380  001486                     u2310:
  5381  001486  0100               	movlb	0	; () banked
  5382  001488  B368               	btfsc	_flags& (0+255),1,b
  5383  00148A  D764               	goto	l2665
  5384  00148C                     u2320:
  5385                           
  5386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5387  00148C  5032               	movf	dtoa@s,w,c
  5388  00148E  1033               	iorwf	dtoa@s+1,w,c
  5389  001490  A4D8               	btfss	status,2,c
  5390  001492  D003               	goto	u2340
  5391  001494  0100               	movlb	0	; () banked
  5392  001496  A568               	btfss	_flags& (0+255),2,b
  5393  001498  D015               	goto	l2699
  5394  00149A                     u2340:
  5395                           
  5396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5397  00149A  063C               	decf	dtoa@i,f,c
  5398  00149C  A0D8               	btfss	status,0,c
  5399  00149E  063D               	decf	dtoa@i+1,f,c
  5400                           
  5401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5402  0014A0  5032               	movf	dtoa@s,w,c
  5403  0014A2  1033               	iorwf	dtoa@s+1,w,c
  5404  0014A4  A4D8               	btfss	status,2,c
  5405  0014A6  D004               	goto	l2695
  5406  0014A8  0E00               	movlw	0
  5407  0014AA  6E2D               	movwf	_dtoa$352+1,c
  5408  0014AC  0E2B               	movlw	43
  5409  0014AE  D003               	goto	L11
  5410  0014B0                     l2695:
  5411  0014B0  0E00               	movlw	0
  5412  0014B2  6E2D               	movwf	_dtoa$352+1,c
  5413  0014B4  0E2D               	movlw	45
  5414  0014B6                     L11:
  5415  0014B6  6E2C               	movwf	_dtoa$352,c
  5416  0014B8  503C               	movf	dtoa@i,w,c
  5417  0014BA  0F6A               	addlw	low _dbuf
  5418  0014BC  6ED9               	movwf	fsr2l,c
  5419  0014BE  6ADA               	clrf	fsr2h,c
  5420  0014C0  C02C  FFDF         	movff	_dtoa$352,indf2
  5421  0014C4                     l2699:
  5422                           
  5423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5424  0014C4  C01B  F00E         	movff	dtoa@fp,pad@fp
  5425  0014C8  503C               	movf	dtoa@i,w,c
  5426  0014CA  0F6A               	addlw	low _dbuf
  5427  0014CC  6E0F               	movwf	pad@buf,c
  5428  0014CE  C030  F010         	movff	dtoa@w,pad@p
  5429  0014D2  C031  F011         	movff	dtoa@w+1,pad@p+1
  5430  0014D6  EC90  F011         	call	_pad	;wreg free
  5431  0014DA  C00E  F01B         	movff	?_pad,?_dtoa
  5432  0014DE  C00F  F01C         	movff	?_pad+1,?_dtoa+1
  5433  0014E2  0012               	return		;funcret
  5434  0014E4                     __end_of_dtoa:
  5435                           	opt callstack 0
  5436                           
  5437 ;; *************** function _abs *****************
  5438 ;; Defined at:
  5439 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  a               2   18[COMRAM] int 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  2   18[COMRAM] int 
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5453 ;;      Params:         2       0       0       0       0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5455 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5456 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5457 ;;Total ram usage:        4 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    1
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_dtoa
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text20
  5468  00265E                     __ptext20:
  5469                           	opt callstack 0
  5470  00265E                     _abs:
  5471                           	opt callstack 23
  5472                           
  5473                           ;incstack = 0
  5474  00265E  BE14               	btfsc	abs@a+1,7,c
  5475  002660  D005               	goto	u1880
  5476  002662  5014               	movf	abs@a+1,w,c
  5477  002664  E110               	bnz	l1084
  5478  002666  0413               	decf	abs@a,w,c
  5479  002668  B0D8               	btfsc	status,0,c
  5480  00266A  D00D               	goto	l1084
  5481  00266C                     u1880:
  5482  00266C  C013  F015         	movff	abs@a,??_abs
  5483  002670  C014  F016         	movff	abs@a+1,??_abs+1
  5484  002674  1E15               	comf	??_abs,f,c
  5485  002676  1E16               	comf	??_abs+1,f,c
  5486  002678  4A15               	infsnz	??_abs,f,c
  5487  00267A  2A16               	incf	??_abs+1,f,c
  5488  00267C  C015  F013         	movff	??_abs,?_abs
  5489  002680  C016  F014         	movff	??_abs+1,?_abs+1
  5490  002684  0012               	return	
  5491  002686                     l1084:
  5492  002686  C013  F013         	movff	abs@a,?_abs
  5493  00268A  C014  F014         	movff	abs@a+1,?_abs+1
  5494  00268E  0012               	return		;funcret
  5495  002690                     __end_of_abs:
  5496                           	opt callstack 0
  5497                           
  5498 ;; *************** function ___aomod *****************
  5499 ;; Defined at:
  5500 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  dividend        8    0[COMRAM] long long 
  5503 ;;  divisor         8    8[COMRAM] long long 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  sign            1   17[COMRAM] unsigned char 
  5506 ;;  counter         1   16[COMRAM] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  8    0[COMRAM] long long 
  5509 ;; Registers used:
  5510 ;;		wreg, status,2, status,0
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5516 ;;      Params:        16       0       0       0       0       0       0       0       0
  5517 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5519 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5520 ;;Total ram usage:       18 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    1
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_dtoa
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text21
  5531  001C94                     __ptext21:
  5532                           	opt callstack 0
  5533  001C94                     ___aomod:
  5534                           	opt callstack 23
  5535                           
  5536                           ;incstack = 0
  5537  001C94  0E00               	movlw	0
  5538  001C96  6E12               	movwf	___aomod@sign,c
  5539  001C98  AE08               	btfss	___aomod@dividend+7,7,c
  5540  001C9A  D012               	goto	l2549
  5541  001C9C  1E08               	comf	___aomod@dividend+7,f,c
  5542  001C9E  1E07               	comf	___aomod@dividend+6,f,c
  5543  001CA0  1E06               	comf	___aomod@dividend+5,f,c
  5544  001CA2  1E05               	comf	___aomod@dividend+4,f,c
  5545  001CA4  1E04               	comf	___aomod@dividend+3,f,c
  5546  001CA6  1E03               	comf	___aomod@dividend+2,f,c
  5547  001CA8  1E02               	comf	___aomod@dividend+1,f,c
  5548  001CAA  6C01               	negf	___aomod@dividend,c
  5549  001CAC  0E00               	movlw	0
  5550  001CAE  2202               	addwfc	___aomod@dividend+1,f,c
  5551  001CB0  2203               	addwfc	___aomod@dividend+2,f,c
  5552  001CB2  2204               	addwfc	___aomod@dividend+3,f,c
  5553  001CB4  2205               	addwfc	___aomod@dividend+4,f,c
  5554  001CB6  2206               	addwfc	___aomod@dividend+5,f,c
  5555  001CB8  2207               	addwfc	___aomod@dividend+6,f,c
  5556  001CBA  2208               	addwfc	___aomod@dividend+7,f,c
  5557  001CBC  0E01               	movlw	1
  5558  001CBE  6E12               	movwf	___aomod@sign,c
  5559  001CC0                     l2549:
  5560  001CC0  AE10               	btfss	___aomod@divisor+7,7,c
  5561  001CC2  D010               	goto	l2553
  5562  001CC4  1E10               	comf	___aomod@divisor+7,f,c
  5563  001CC6  1E0F               	comf	___aomod@divisor+6,f,c
  5564  001CC8  1E0E               	comf	___aomod@divisor+5,f,c
  5565  001CCA  1E0D               	comf	___aomod@divisor+4,f,c
  5566  001CCC  1E0C               	comf	___aomod@divisor+3,f,c
  5567  001CCE  1E0B               	comf	___aomod@divisor+2,f,c
  5568  001CD0  1E0A               	comf	___aomod@divisor+1,f,c
  5569  001CD2  6C09               	negf	___aomod@divisor,c
  5570  001CD4  0E00               	movlw	0
  5571  001CD6  220A               	addwfc	___aomod@divisor+1,f,c
  5572  001CD8  220B               	addwfc	___aomod@divisor+2,f,c
  5573  001CDA  220C               	addwfc	___aomod@divisor+3,f,c
  5574  001CDC  220D               	addwfc	___aomod@divisor+4,f,c
  5575  001CDE  220E               	addwfc	___aomod@divisor+5,f,c
  5576  001CE0  220F               	addwfc	___aomod@divisor+6,f,c
  5577  001CE2  2210               	addwfc	___aomod@divisor+7,f,c
  5578  001CE4                     l2553:
  5579  001CE4  5009               	movf	___aomod@divisor,w,c
  5580  001CE6  100A               	iorwf	___aomod@divisor+1,w,c
  5581  001CE8  100B               	iorwf	___aomod@divisor+2,w,c
  5582  001CEA  100C               	iorwf	___aomod@divisor+3,w,c
  5583  001CEC  100D               	iorwf	___aomod@divisor+4,w,c
  5584  001CEE  100E               	iorwf	___aomod@divisor+5,w,c
  5585  001CF0  100F               	iorwf	___aomod@divisor+6,w,c
  5586  001CF2  1010               	iorwf	___aomod@divisor+7,w,c
  5587  001CF4  B4D8               	btfsc	status,2,c
  5588  001CF6  D03C               	goto	l2569
  5589  001CF8  0E01               	movlw	1
  5590  001CFA  6E11               	movwf	___aomod@counter,c
  5591  001CFC  D00A               	goto	l2559
  5592  001CFE                     l2557:
  5593  001CFE  90D8               	bcf	status,0,c
  5594  001D00  3609               	rlcf	___aomod@divisor,f,c
  5595  001D02  360A               	rlcf	___aomod@divisor+1,f,c
  5596  001D04  360B               	rlcf	___aomod@divisor+2,f,c
  5597  001D06  360C               	rlcf	___aomod@divisor+3,f,c
  5598  001D08  360D               	rlcf	___aomod@divisor+4,f,c
  5599  001D0A  360E               	rlcf	___aomod@divisor+5,f,c
  5600  001D0C  360F               	rlcf	___aomod@divisor+6,f,c
  5601  001D0E  3610               	rlcf	___aomod@divisor+7,f,c
  5602  001D10  2A11               	incf	___aomod@counter,f,c
  5603  001D12                     l2559:
  5604  001D12  AE10               	btfss	___aomod@divisor+7,7,c
  5605  001D14  D7F4               	goto	l2557
  5606  001D16                     u2080:
  5607  001D16  5009               	movf	___aomod@divisor,w,c
  5608  001D18  5C01               	subwf	___aomod@dividend,w,c
  5609  001D1A  500A               	movf	___aomod@divisor+1,w,c
  5610  001D1C  5802               	subwfb	___aomod@dividend+1,w,c
  5611  001D1E  500B               	movf	___aomod@divisor+2,w,c
  5612  001D20  5803               	subwfb	___aomod@dividend+2,w,c
  5613  001D22  500C               	movf	___aomod@divisor+3,w,c
  5614  001D24  5804               	subwfb	___aomod@dividend+3,w,c
  5615  001D26  500D               	movf	___aomod@divisor+4,w,c
  5616  001D28  5805               	subwfb	___aomod@dividend+4,w,c
  5617  001D2A  500E               	movf	___aomod@divisor+5,w,c
  5618  001D2C  5806               	subwfb	___aomod@dividend+5,w,c
  5619  001D2E  500F               	movf	___aomod@divisor+6,w,c
  5620  001D30  5807               	subwfb	___aomod@dividend+6,w,c
  5621  001D32  5010               	movf	___aomod@divisor+7,w,c
  5622  001D34  5808               	subwfb	___aomod@dividend+7,w,c
  5623  001D36  A0D8               	btfss	status,0,c
  5624  001D38  D010               	goto	l2565
  5625  001D3A  5009               	movf	___aomod@divisor,w,c
  5626  001D3C  5E01               	subwf	___aomod@dividend,f,c
  5627  001D3E  500A               	movf	___aomod@divisor+1,w,c
  5628  001D40  5A02               	subwfb	___aomod@dividend+1,f,c
  5629  001D42  500B               	movf	___aomod@divisor+2,w,c
  5630  001D44  5A03               	subwfb	___aomod@dividend+2,f,c
  5631  001D46  500C               	movf	___aomod@divisor+3,w,c
  5632  001D48  5A04               	subwfb	___aomod@dividend+3,f,c
  5633  001D4A  500D               	movf	___aomod@divisor+4,w,c
  5634  001D4C  5A05               	subwfb	___aomod@dividend+4,f,c
  5635  001D4E  500E               	movf	___aomod@divisor+5,w,c
  5636  001D50  5A06               	subwfb	___aomod@dividend+5,f,c
  5637  001D52  500F               	movf	___aomod@divisor+6,w,c
  5638  001D54  5A07               	subwfb	___aomod@dividend+6,f,c
  5639  001D56  5010               	movf	___aomod@divisor+7,w,c
  5640  001D58  5A08               	subwfb	___aomod@dividend+7,f,c
  5641  001D5A                     l2565:
  5642  001D5A  90D8               	bcf	status,0,c
  5643  001D5C  3210               	rrcf	___aomod@divisor+7,f,c
  5644  001D5E  320F               	rrcf	___aomod@divisor+6,f,c
  5645  001D60  320E               	rrcf	___aomod@divisor+5,f,c
  5646  001D62  320D               	rrcf	___aomod@divisor+4,f,c
  5647  001D64  320C               	rrcf	___aomod@divisor+3,f,c
  5648  001D66  320B               	rrcf	___aomod@divisor+2,f,c
  5649  001D68  320A               	rrcf	___aomod@divisor+1,f,c
  5650  001D6A  3209               	rrcf	___aomod@divisor,f,c
  5651  001D6C  2E11               	decfsz	___aomod@counter,f,c
  5652  001D6E  D7D3               	goto	u2080
  5653  001D70                     l2569:
  5654  001D70  5012               	movf	___aomod@sign,w,c
  5655  001D72  B4D8               	btfsc	status,2,c
  5656  001D74  D010               	goto	l2573
  5657  001D76  1E08               	comf	___aomod@dividend+7,f,c
  5658  001D78  1E07               	comf	___aomod@dividend+6,f,c
  5659  001D7A  1E06               	comf	___aomod@dividend+5,f,c
  5660  001D7C  1E05               	comf	___aomod@dividend+4,f,c
  5661  001D7E  1E04               	comf	___aomod@dividend+3,f,c
  5662  001D80  1E03               	comf	___aomod@dividend+2,f,c
  5663  001D82  1E02               	comf	___aomod@dividend+1,f,c
  5664  001D84  6C01               	negf	___aomod@dividend,c
  5665  001D86  0E00               	movlw	0
  5666  001D88  2202               	addwfc	___aomod@dividend+1,f,c
  5667  001D8A  2203               	addwfc	___aomod@dividend+2,f,c
  5668  001D8C  2204               	addwfc	___aomod@dividend+3,f,c
  5669  001D8E  2205               	addwfc	___aomod@dividend+4,f,c
  5670  001D90  2206               	addwfc	___aomod@dividend+5,f,c
  5671  001D92  2207               	addwfc	___aomod@dividend+6,f,c
  5672  001D94  2208               	addwfc	___aomod@dividend+7,f,c
  5673  001D96                     l2573:
  5674  001D96  C001  F001         	movff	___aomod@dividend,?___aomod
  5675  001D9A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5676  001D9E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5677  001DA2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5678  001DA6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5679  001DAA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5680  001DAE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5681  001DB2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5682  001DB6  0012               	return		;funcret
  5683  001DB8                     __end_of___aomod:
  5684                           	opt callstack 0
  5685                           
  5686 ;; *************** function ___aodiv *****************
  5687 ;; Defined at:
  5688 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  dividend        8    0[COMRAM] long long 
  5691 ;;  divisor         8    8[COMRAM] long long 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  quotient        8   18[COMRAM] long long 
  5694 ;;  sign            1   17[COMRAM] unsigned char 
  5695 ;;  counter         1   16[COMRAM] unsigned char 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  8    0[COMRAM] long long 
  5698 ;; Registers used:
  5699 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5705 ;;      Params:        16       0       0       0       0       0       0       0       0
  5706 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5708 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5709 ;;Total ram usage:       26 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    1
  5712 ;; This function calls:
  5713 ;;		Nothing
  5714 ;; This function is called by:
  5715 ;;		_dtoa
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text22
  5720  001A10                     __ptext22:
  5721                           	opt callstack 0
  5722  001A10                     ___aodiv:
  5723                           	opt callstack 23
  5724                           
  5725                           ;incstack = 0
  5726  001A10  0E00               	movlw	0
  5727  001A12  6E12               	movwf	___aodiv@sign,c
  5728  001A14  AE10               	btfss	___aodiv@divisor+7,7,c
  5729  001A16  D012               	goto	l2505
  5730  001A18  1E10               	comf	___aodiv@divisor+7,f,c
  5731  001A1A  1E0F               	comf	___aodiv@divisor+6,f,c
  5732  001A1C  1E0E               	comf	___aodiv@divisor+5,f,c
  5733  001A1E  1E0D               	comf	___aodiv@divisor+4,f,c
  5734  001A20  1E0C               	comf	___aodiv@divisor+3,f,c
  5735  001A22  1E0B               	comf	___aodiv@divisor+2,f,c
  5736  001A24  1E0A               	comf	___aodiv@divisor+1,f,c
  5737  001A26  6C09               	negf	___aodiv@divisor,c
  5738  001A28  0E00               	movlw	0
  5739  001A2A  220A               	addwfc	___aodiv@divisor+1,f,c
  5740  001A2C  220B               	addwfc	___aodiv@divisor+2,f,c
  5741  001A2E  220C               	addwfc	___aodiv@divisor+3,f,c
  5742  001A30  220D               	addwfc	___aodiv@divisor+4,f,c
  5743  001A32  220E               	addwfc	___aodiv@divisor+5,f,c
  5744  001A34  220F               	addwfc	___aodiv@divisor+6,f,c
  5745  001A36  2210               	addwfc	___aodiv@divisor+7,f,c
  5746  001A38  0E01               	movlw	1
  5747  001A3A  6E12               	movwf	___aodiv@sign,c
  5748  001A3C                     l2505:
  5749  001A3C  AE08               	btfss	___aodiv@dividend+7,7,c
  5750  001A3E  D012               	goto	l2511
  5751  001A40  1E08               	comf	___aodiv@dividend+7,f,c
  5752  001A42  1E07               	comf	___aodiv@dividend+6,f,c
  5753  001A44  1E06               	comf	___aodiv@dividend+5,f,c
  5754  001A46  1E05               	comf	___aodiv@dividend+4,f,c
  5755  001A48  1E04               	comf	___aodiv@dividend+3,f,c
  5756  001A4A  1E03               	comf	___aodiv@dividend+2,f,c
  5757  001A4C  1E02               	comf	___aodiv@dividend+1,f,c
  5758  001A4E  6C01               	negf	___aodiv@dividend,c
  5759  001A50  0E00               	movlw	0
  5760  001A52  2202               	addwfc	___aodiv@dividend+1,f,c
  5761  001A54  2203               	addwfc	___aodiv@dividend+2,f,c
  5762  001A56  2204               	addwfc	___aodiv@dividend+3,f,c
  5763  001A58  2205               	addwfc	___aodiv@dividend+4,f,c
  5764  001A5A  2206               	addwfc	___aodiv@dividend+5,f,c
  5765  001A5C  2207               	addwfc	___aodiv@dividend+6,f,c
  5766  001A5E  2208               	addwfc	___aodiv@dividend+7,f,c
  5767  001A60  0E01               	movlw	1
  5768  001A62  1A12               	xorwf	___aodiv@sign,f,c
  5769  001A64                     l2511:
  5770  001A64  EE20  F013         	lfsr	2,___aodiv@quotient
  5771  001A68  0E07               	movlw	7
  5772  001A6A                     u2001:
  5773  001A6A  6ADE               	clrf	postinc2,c
  5774  001A6C  06E8               	decf	wreg,f,c
  5775  001A6E  E2FD               	bc	u2001
  5776  001A70  5009               	movf	___aodiv@divisor,w,c
  5777  001A72  100A               	iorwf	___aodiv@divisor+1,w,c
  5778  001A74  100B               	iorwf	___aodiv@divisor+2,w,c
  5779  001A76  100C               	iorwf	___aodiv@divisor+3,w,c
  5780  001A78  100D               	iorwf	___aodiv@divisor+4,w,c
  5781  001A7A  100E               	iorwf	___aodiv@divisor+5,w,c
  5782  001A7C  100F               	iorwf	___aodiv@divisor+6,w,c
  5783  001A7E  1010               	iorwf	___aodiv@divisor+7,w,c
  5784  001A80  B4D8               	btfsc	status,2,c
  5785  001A82  D046               	goto	l2533
  5786  001A84  0E01               	movlw	1
  5787  001A86  6E11               	movwf	___aodiv@counter,c
  5788  001A88  D00A               	goto	l2519
  5789  001A8A                     l2517:
  5790  001A8A  90D8               	bcf	status,0,c
  5791  001A8C  3609               	rlcf	___aodiv@divisor,f,c
  5792  001A8E  360A               	rlcf	___aodiv@divisor+1,f,c
  5793  001A90  360B               	rlcf	___aodiv@divisor+2,f,c
  5794  001A92  360C               	rlcf	___aodiv@divisor+3,f,c
  5795  001A94  360D               	rlcf	___aodiv@divisor+4,f,c
  5796  001A96  360E               	rlcf	___aodiv@divisor+5,f,c
  5797  001A98  360F               	rlcf	___aodiv@divisor+6,f,c
  5798  001A9A  3610               	rlcf	___aodiv@divisor+7,f,c
  5799  001A9C  2A11               	incf	___aodiv@counter,f,c
  5800  001A9E                     l2519:
  5801  001A9E  AE10               	btfss	___aodiv@divisor+7,7,c
  5802  001AA0  D7F4               	goto	l2517
  5803  001AA2                     u2020:
  5804  001AA2  90D8               	bcf	status,0,c
  5805  001AA4  3613               	rlcf	___aodiv@quotient,f,c
  5806  001AA6  3614               	rlcf	___aodiv@quotient+1,f,c
  5807  001AA8  3615               	rlcf	___aodiv@quotient+2,f,c
  5808  001AAA  3616               	rlcf	___aodiv@quotient+3,f,c
  5809  001AAC  3617               	rlcf	___aodiv@quotient+4,f,c
  5810  001AAE  3618               	rlcf	___aodiv@quotient+5,f,c
  5811  001AB0  3619               	rlcf	___aodiv@quotient+6,f,c
  5812  001AB2  361A               	rlcf	___aodiv@quotient+7,f,c
  5813  001AB4  5009               	movf	___aodiv@divisor,w,c
  5814  001AB6  5C01               	subwf	___aodiv@dividend,w,c
  5815  001AB8  500A               	movf	___aodiv@divisor+1,w,c
  5816  001ABA  5802               	subwfb	___aodiv@dividend+1,w,c
  5817  001ABC  500B               	movf	___aodiv@divisor+2,w,c
  5818  001ABE  5803               	subwfb	___aodiv@dividend+2,w,c
  5819  001AC0  500C               	movf	___aodiv@divisor+3,w,c
  5820  001AC2  5804               	subwfb	___aodiv@dividend+3,w,c
  5821  001AC4  500D               	movf	___aodiv@divisor+4,w,c
  5822  001AC6  5805               	subwfb	___aodiv@dividend+4,w,c
  5823  001AC8  500E               	movf	___aodiv@divisor+5,w,c
  5824  001ACA  5806               	subwfb	___aodiv@dividend+5,w,c
  5825  001ACC  500F               	movf	___aodiv@divisor+6,w,c
  5826  001ACE  5807               	subwfb	___aodiv@dividend+6,w,c
  5827  001AD0  5010               	movf	___aodiv@divisor+7,w,c
  5828  001AD2  5808               	subwfb	___aodiv@dividend+7,w,c
  5829  001AD4  A0D8               	btfss	status,0,c
  5830  001AD6  D011               	goto	l2529
  5831  001AD8  5009               	movf	___aodiv@divisor,w,c
  5832  001ADA  5E01               	subwf	___aodiv@dividend,f,c
  5833  001ADC  500A               	movf	___aodiv@divisor+1,w,c
  5834  001ADE  5A02               	subwfb	___aodiv@dividend+1,f,c
  5835  001AE0  500B               	movf	___aodiv@divisor+2,w,c
  5836  001AE2  5A03               	subwfb	___aodiv@dividend+2,f,c
  5837  001AE4  500C               	movf	___aodiv@divisor+3,w,c
  5838  001AE6  5A04               	subwfb	___aodiv@dividend+3,f,c
  5839  001AE8  500D               	movf	___aodiv@divisor+4,w,c
  5840  001AEA  5A05               	subwfb	___aodiv@dividend+4,f,c
  5841  001AEC  500E               	movf	___aodiv@divisor+5,w,c
  5842  001AEE  5A06               	subwfb	___aodiv@dividend+5,f,c
  5843  001AF0  500F               	movf	___aodiv@divisor+6,w,c
  5844  001AF2  5A07               	subwfb	___aodiv@dividend+6,f,c
  5845  001AF4  5010               	movf	___aodiv@divisor+7,w,c
  5846  001AF6  5A08               	subwfb	___aodiv@dividend+7,f,c
  5847  001AF8  8013               	bsf	___aodiv@quotient,0,c
  5848  001AFA                     l2529:
  5849  001AFA  90D8               	bcf	status,0,c
  5850  001AFC  3210               	rrcf	___aodiv@divisor+7,f,c
  5851  001AFE  320F               	rrcf	___aodiv@divisor+6,f,c
  5852  001B00  320E               	rrcf	___aodiv@divisor+5,f,c
  5853  001B02  320D               	rrcf	___aodiv@divisor+4,f,c
  5854  001B04  320C               	rrcf	___aodiv@divisor+3,f,c
  5855  001B06  320B               	rrcf	___aodiv@divisor+2,f,c
  5856  001B08  320A               	rrcf	___aodiv@divisor+1,f,c
  5857  001B0A  3209               	rrcf	___aodiv@divisor,f,c
  5858  001B0C  2E11               	decfsz	___aodiv@counter,f,c
  5859  001B0E  D7C9               	goto	u2020
  5860  001B10                     l2533:
  5861  001B10  5012               	movf	___aodiv@sign,w,c
  5862  001B12  B4D8               	btfsc	status,2,c
  5863  001B14  D010               	goto	l2537
  5864  001B16  1E1A               	comf	___aodiv@quotient+7,f,c
  5865  001B18  1E19               	comf	___aodiv@quotient+6,f,c
  5866  001B1A  1E18               	comf	___aodiv@quotient+5,f,c
  5867  001B1C  1E17               	comf	___aodiv@quotient+4,f,c
  5868  001B1E  1E16               	comf	___aodiv@quotient+3,f,c
  5869  001B20  1E15               	comf	___aodiv@quotient+2,f,c
  5870  001B22  1E14               	comf	___aodiv@quotient+1,f,c
  5871  001B24  6C13               	negf	___aodiv@quotient,c
  5872  001B26  0E00               	movlw	0
  5873  001B28  2214               	addwfc	___aodiv@quotient+1,f,c
  5874  001B2A  2215               	addwfc	___aodiv@quotient+2,f,c
  5875  001B2C  2216               	addwfc	___aodiv@quotient+3,f,c
  5876  001B2E  2217               	addwfc	___aodiv@quotient+4,f,c
  5877  001B30  2218               	addwfc	___aodiv@quotient+5,f,c
  5878  001B32  2219               	addwfc	___aodiv@quotient+6,f,c
  5879  001B34  221A               	addwfc	___aodiv@quotient+7,f,c
  5880  001B36                     l2537:
  5881  001B36  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5882  001B3A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5883  001B3E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5884  001B42  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5885  001B46  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5886  001B4A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5887  001B4E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5888  001B52  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5889  001B56  0012               	return		;funcret
  5890  001B58                     __end_of___aodiv:
  5891                           	opt callstack 0
  5892                           
  5893 ;; *************** function _ctoa *****************
  5894 ;; Defined at:
  5895 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  5898 ;;		 -> vsnprintf@f(5), 
  5899 ;;  c               1   23[COMRAM] unsigned char 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;  w               2   24[COMRAM] int 
  5902 ;;  l               2    0        int 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  2   22[COMRAM] int 
  5905 ;; Registers used:
  5906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5912 ;;      Params:         2       0       0       0       0       0       0       0       0
  5913 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5915 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5916 ;;Total ram usage:        4 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    5
  5919 ;; This function calls:
  5920 ;;		_pad
  5921 ;; This function is called by:
  5922 ;;		_vfpfcnvrt
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text23
  5927  0024B2                     __ptext23:
  5928                           	opt callstack 0
  5929  0024B2                     _ctoa:
  5930                           	opt callstack 20
  5931                           
  5932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  5933                           
  5934                           ;incstack = 0
  5935  0024B2  0100               	movlb	0	; () banked
  5936  0024B4  5164               	movf	_width& (0+255),w,b
  5937  0024B6  1165               	iorwf	(_width+1)& (0+255),w,b
  5938  0024B8  A4D8               	btfss	status,2,c
  5939  0024BA  D005               	goto	l2631
  5940                           
  5941                           ; BSR set to: 0
  5942  0024BC  C064  F019         	movff	_width,ctoa@w
  5943  0024C0  C065  F01A         	movff	_width+1,ctoa@w+1
  5944  0024C4  D006               	goto	l2633
  5945  0024C6                     l2631:
  5946                           
  5947                           ; BSR set to: 0
  5948  0024C6  0EFF               	movlw	255
  5949  0024C8  2564               	addwf	_width& (0+255),w,b
  5950  0024CA  6E19               	movwf	ctoa@w,c
  5951  0024CC  0EFF               	movlw	255
  5952  0024CE  2165               	addwfc	(_width+1)& (0+255),w,b
  5953  0024D0  6E1A               	movwf	ctoa@w+1,c
  5954  0024D2                     l2633:
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  5958  0024D2  C018  F06A         	movff	ctoa@c,_dbuf
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  5962  0024D6  0E00               	movlw	0
  5963  0024D8  6F6B               	movwf	(_dbuf+1)& (0+255),b
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  5967  0024DA  C017  F00E         	movff	ctoa@fp,pad@fp
  5968  0024DE  0E6A               	movlw	low _dbuf
  5969  0024E0  6E0F               	movwf	pad@buf,c
  5970  0024E2  C019  F010         	movff	ctoa@w,pad@p
  5971  0024E6  C01A  F011         	movff	ctoa@w+1,pad@p+1
  5972  0024EA  EC90  F011         	call	_pad	;wreg free
  5973  0024EE  C00E  F017         	movff	?_pad,?_ctoa
  5974  0024F2  C00F  F018         	movff	?_pad+1,?_ctoa+1
  5975  0024F6  0012               	return		;funcret
  5976  0024F8                     __end_of_ctoa:
  5977                           	opt callstack 0
  5978                           
  5979 ;; *************** function _pad *****************
  5980 ;; Defined at:
  5981 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  5984 ;;		 -> vsnprintf@f(5), 
  5985 ;;  buf             1   14[COMRAM] PTR unsigned char 
  5986 ;;		 -> dbuf(32), 
  5987 ;;  p               2   15[COMRAM] int 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  w               2   20[COMRAM] int 
  5990 ;;  i               2   18[COMRAM] int 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  2   13[COMRAM] int 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6000 ;;      Params:         4       0       0       0       0       0       0       0       0
  6001 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6002 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6003 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6004 ;;Total ram usage:        9 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    4
  6007 ;; This function calls:
  6008 ;;		_fputc
  6009 ;;		_fputs
  6010 ;;		_strlen
  6011 ;; This function is called by:
  6012 ;;		_ctoa
  6013 ;;		_dtoa
  6014 ;;		_otoa
  6015 ;;		_utoa
  6016 ;;		_xtoa
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text24
  6021  002320                     __ptext24:
  6022                           	opt callstack 0
  6023  002320                     _pad:
  6024                           	opt callstack 20
  6025                           
  6026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6027                           
  6028                           ;incstack = 0
  6029  002320  0100               	movlb	0	; () banked
  6030  002322  A168               	btfss	_flags& (0+255),0,b
  6031  002324  D006               	goto	l2447
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6035  002326  C00F  F009         	movff	pad@buf,fputs@s
  6036  00232A  C00E  F00A         	movff	pad@fp,fputs@fp
  6037  00232E  EC78  F013         	call	_fputs	;wreg free
  6038  002332                     l2447:
  6039                           
  6040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6041  002332  BE11               	btfsc	pad@p+1,7,c
  6042  002334  D005               	goto	l2451
  6043  002336  C010  F015         	movff	pad@p,pad@w
  6044  00233A  C011  F016         	movff	pad@p+1,pad@w+1
  6045  00233E  D004               	goto	l202
  6046  002340                     l2451:
  6047  002340  0E00               	movlw	0
  6048  002342  6E16               	movwf	pad@w+1,c
  6049  002344  0E00               	movlw	0
  6050  002346  6E15               	movwf	pad@w,c
  6051  002348                     l202:
  6052                           
  6053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6054  002348  0E00               	movlw	0
  6055  00234A  6E14               	movwf	pad@i+1,c
  6056  00234C  0E00               	movlw	0
  6057  00234E  6E13               	movwf	pad@i,c
  6058                           
  6059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6060  002350  D00A               	goto	l2457
  6061  002352                     l2453:
  6062                           
  6063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6064  002352  0E00               	movlw	0
  6065  002354  6E02               	movwf	fputc@c+1,c
  6066  002356  0E20               	movlw	32
  6067  002358  6E01               	movwf	fputc@c,c
  6068  00235A  C00E  F003         	movff	pad@fp,fputc@fp
  6069  00235E  ECD1  F011         	call	_fputc	;wreg free
  6070                           
  6071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6072  002362  4A13               	infsnz	pad@i,f,c
  6073  002364  2A14               	incf	pad@i+1,f,c
  6074  002366                     l2457:
  6075                           
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6077  002366  5015               	movf	pad@w,w,c
  6078  002368  5C13               	subwf	pad@i,w,c
  6079  00236A  5014               	movf	pad@i+1,w,c
  6080  00236C  0A80               	xorlw	128
  6081  00236E  6E12               	movwf	??_pad& (0+255),c
  6082  002370  5016               	movf	pad@w+1,w,c
  6083  002372  0A80               	xorlw	128
  6084  002374  5812               	subwfb	??_pad& (0+255),w,c
  6085  002376  A0D8               	btfss	status,0,c
  6086  002378  D7EC               	goto	l2453
  6087                           
  6088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6089  00237A  0100               	movlb	0	; () banked
  6090  00237C  B168               	btfsc	_flags& (0+255),0,b
  6091  00237E  D006               	goto	l2461
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6095  002380  C00F  F009         	movff	pad@buf,fputs@s
  6096  002384  C00E  F00A         	movff	pad@fp,fputs@fp
  6097  002388  EC78  F013         	call	_fputs	;wreg free
  6098  00238C                     l2461:
  6099                           
  6100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6101  00238C  C00F  F001         	movff	pad@buf,strlen@s
  6102  002390  ECBB  F013         	call	_strlen	;wreg free
  6103  002394  5015               	movf	pad@w,w,c
  6104  002396  2401               	addwf	?_strlen,w,c
  6105  002398  6E0E               	movwf	?_pad,c
  6106  00239A  5016               	movf	pad@w+1,w,c
  6107  00239C  2002               	addwfc	?_strlen+1,w,c
  6108  00239E  6E0F               	movwf	?_pad+1,c
  6109  0023A0  0012               	return		;funcret
  6110  0023A2                     __end_of_pad:
  6111                           	opt callstack 0
  6112                           
  6113 ;; *************** function _fputs *****************
  6114 ;; Defined at:
  6115 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  s               1    8[COMRAM] PTR const unsigned char 
  6118 ;;		 -> dbuf(32), 
  6119 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  6120 ;;		 -> vsnprintf@f(5), 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  i               2   11[COMRAM] int 
  6123 ;;  c               1   10[COMRAM] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2    8[COMRAM] int 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 3F/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6133 ;;      Params:         2       0       0       0       0       0       0       0       0
  6134 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6136 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6137 ;;Total ram usage:        5 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    3
  6140 ;; This function calls:
  6141 ;;		_fputc
  6142 ;; This function is called by:
  6143 ;;		_pad
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text25
  6148  0026F0                     __ptext25:
  6149                           	opt callstack 0
  6150  0026F0                     _fputs:
  6151                           	opt callstack 20
  6152                           
  6153                           ; BSR set to: 0
  6154                           
  6155                           ;incstack = 0
  6156  0026F0  0E00               	movlw	0
  6157  0026F2  6E0D               	movwf	fputs@i+1,c
  6158  0026F4  0E00               	movlw	0
  6159  0026F6  6E0C               	movwf	fputs@i,c
  6160  0026F8  D009               	goto	l2437
  6161  0026FA                     l2433:
  6162  0026FA  C00B  F001         	movff	fputs@c,fputc@c
  6163  0026FE  6A02               	clrf	fputc@c+1,c
  6164  002700  C00A  F003         	movff	fputs@fp,fputc@fp
  6165  002704  ECD1  F011         	call	_fputc	;wreg free
  6166  002708  4A0C               	infsnz	fputs@i,f,c
  6167  00270A  2A0D               	incf	fputs@i+1,f,c
  6168  00270C                     l2437:
  6169  00270C  5009               	movf	fputs@s,w,c
  6170  00270E  240C               	addwf	fputs@i,w,c
  6171  002710  6ED9               	movwf	fsr2l,c
  6172  002712  6ADA               	clrf	fsr2h,c
  6173  002714  50DF               	movf	indf2,w,c
  6174  002716  6E0B               	movwf	fputs@c,c
  6175  002718  500B               	movf	fputs@c,w,c
  6176  00271A  B4D8               	btfsc	status,2,c
  6177  00271C  0012               	return	
  6178  00271E  D7ED               	goto	l2433
  6179  002720                     __end_of_fputs:
  6180                           	opt callstack 0
  6181                           
  6182 ;; *************** function _fputc *****************
  6183 ;; Defined at:
  6184 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  c               2    0[COMRAM] int 
  6187 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6188 ;;		 -> vsnprintf@f(5), 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;		None
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  2    0[COMRAM] int 
  6193 ;; Registers used:
  6194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6200 ;;      Params:         3       0       0       0       0       0       0       0       0
  6201 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6202 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6203 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6204 ;;Total ram usage:        8 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; Hardware stack levels required when called:    2
  6207 ;; This function calls:
  6208 ;;		_putch
  6209 ;; This function is called by:
  6210 ;;		_pad
  6211 ;;		_stoa
  6212 ;;		_vfpfcnvrt
  6213 ;;		_fputs
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text26
  6218  0023A2                     __ptext26:
  6219                           	opt callstack 0
  6220  0023A2                     _fputc:
  6221                           	opt callstack 20
  6222                           
  6223                           ;incstack = 0
  6224  0023A2  5003               	movf	fputc@fp,w,c
  6225  0023A4  B4D8               	btfsc	status,2,c
  6226  0023A6  D003               	goto	u1770
  6227  0023A8  5003               	movf	fputc@fp,w,c
  6228  0023AA  A4D8               	btfss	status,2,c
  6229  0023AC  D004               	goto	l2413
  6230  0023AE                     u1770:
  6231  0023AE  5001               	movf	fputc@c,w,c
  6232  0023B0  EC02  F014         	call	_putch
  6233  0023B4  0012               	return	
  6234  0023B6                     l2413:
  6235  0023B6  5003               	movf	fputc@fp,w,c
  6236  0023B8  6ED9               	movwf	fsr2l,c
  6237  0023BA  6ADA               	clrf	fsr2h,c
  6238  0023BC  0E03               	movlw	3
  6239  0023BE  26D9               	addwf	fsr2l,f,c
  6240  0023C0  50DE               	movf	postinc2,w,c
  6241  0023C2  10DE               	iorwf	postinc2,w,c
  6242  0023C4  B4D8               	btfsc	status,2,c
  6243  0023C6  D014               	goto	u1790
  6244  0023C8  5003               	movf	fputc@fp,w,c
  6245  0023CA  6ED9               	movwf	fsr2l,c
  6246  0023CC  6ADA               	clrf	fsr2h,c
  6247  0023CE  0E03               	movlw	3
  6248  0023D0  26D9               	addwf	fsr2l,f,c
  6249  0023D2  5003               	movf	fputc@fp,w,c
  6250  0023D4  6EE1               	movwf	fsr1l,c
  6251  0023D6  6AE2               	clrf	fsr1h,c
  6252  0023D8  0E01               	movlw	1
  6253  0023DA  26E1               	addwf	fsr1l,f,c
  6254  0023DC  50DE               	movf	postinc2,w,c
  6255  0023DE  5CE6               	subwf	postinc1,w,c
  6256  0023E0  50E6               	movf	postinc1,w,c
  6257  0023E2  0A80               	xorlw	128
  6258  0023E4  6E08               	movwf	(??_fputc+4)& (0+255),c
  6259  0023E6  50DE               	movf	postinc2,w,c
  6260  0023E8  0A80               	xorlw	128
  6261  0023EA  5808               	subwfb	(??_fputc+4)& (0+255),w,c
  6262  0023EC  B0D8               	btfsc	status,0,c
  6263  0023EE  0012               	return	
  6264  0023F0                     u1790:
  6265  0023F0  5003               	movf	fputc@fp,w,c
  6266  0023F2  6ED9               	movwf	fsr2l,c
  6267  0023F4  6ADA               	clrf	fsr2h,c
  6268  0023F6  0E01               	movlw	1
  6269  0023F8  26D9               	addwf	fsr2l,f,c
  6270  0023FA  50DF               	movf	indf2,w,c
  6271  0023FC  6E04               	movwf	??_fputc& (0+255),c
  6272  0023FE  5003               	movf	fputc@fp,w,c
  6273  002400  6ED9               	movwf	fsr2l,c
  6274  002402  6ADA               	clrf	fsr2h,c
  6275  002404  50DF               	movf	indf2,w,c
  6276  002406  2404               	addwf	??_fputc,w,c
  6277  002408  6ED9               	movwf	fsr2l,c
  6278  00240A  6ADA               	clrf	fsr2h,c
  6279  00240C  C001  FFDF         	movff	fputc@c,indf2
  6280  002410  5003               	movf	fputc@fp,w,c
  6281  002412  6ED9               	movwf	fsr2l,c
  6282  002414  6ADA               	clrf	fsr2h,c
  6283  002416  0E01               	movlw	1
  6284  002418  26D9               	addwf	fsr2l,f,c
  6285  00241A  2ADE               	incf	postinc2,f,c
  6286  00241C  0E00               	movlw	0
  6287  00241E  22DD               	addwfc	postdec2,f,c
  6288  002420  0012               	return		;funcret
  6289  002422                     __end_of_fputc:
  6290                           	opt callstack 0
  6291                           
  6292 ;; *************** function _putch *****************
  6293 ;; Defined at:
  6294 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  c               1    wreg     unsigned char 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  c               1    0[COMRAM] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      void 
  6301 ;; Registers used:
  6302 ;;		wreg
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6308 ;;      Params:         0       0       0       0       0       0       0       0       0
  6309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6311 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6312 ;;Total ram usage:        0 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    1
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_fputc
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text27
  6323  002804                     __ptext27:
  6324                           	opt callstack 0
  6325  002804                     _putch:
  6326                           	opt callstack 20
  6327                           
  6328                           ;incstack = 0
  6329  002804  0012               	return		;funcret
  6330  002806                     __end_of_putch:
  6331                           	opt callstack 0
  6332                           
  6333 ;; *************** function _atoi *****************
  6334 ;; Defined at:
  6335 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  s               1    7[COMRAM] PTR const unsigned char 
  6338 ;;		 -> STR_1(3), 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  n               2   20[COMRAM] int 
  6341 ;;  neg             2   13[COMRAM] int 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  2    7[COMRAM] int 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 3F/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6351 ;;      Params:         2       0       0       0       0       0       0       0       0
  6352 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6353 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6354 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6355 ;;Total ram usage:       15 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    2
  6358 ;; This function calls:
  6359 ;;		___wmul
  6360 ;;		_isdigit
  6361 ;;		_isspace
  6362 ;; This function is called by:
  6363 ;;		_vfpfcnvrt
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text28
  6368  001B58                     __ptext28:
  6369                           	opt callstack 0
  6370  001B58                     _atoi:
  6371                           	opt callstack 23
  6372                           
  6373                           ; BSR set to: 0
  6374                           
  6375                           ;incstack = 0
  6376  001B58  0E00               	movlw	0
  6377  001B5A  6E16               	movwf	atoi@n+1,c
  6378  001B5C  0E00               	movlw	0
  6379  001B5E  6E15               	movwf	atoi@n,c
  6380  001B60  0E00               	movlw	0
  6381  001B62  6E0F               	movwf	atoi@neg+1,c
  6382  001B64  0E00               	movlw	0
  6383  001B66  6E0E               	movwf	atoi@neg,c
  6384  001B68  D001               	goto	l2899
  6385  001B6A                     l2897:
  6386                           
  6387                           ; BSR set to: 0
  6388  001B6A  2A08               	incf	atoi@s,f,c
  6389  001B6C                     l2899:
  6390                           
  6391                           ; BSR set to: 0
  6392  001B6C  0E01               	movlw	1
  6393  001B6E  6E14               	movwf	_atoi$966,c
  6394                           
  6395                           ; BSR set to: 0
  6396  001B70  C008  FFF6         	movff	atoi@s,tblptrl
  6397  001B74                     	if	1	;There is more than 1 active tblptr byte
  6398  001B74  0E08               	movlw	high __smallconst
  6399  001B76  6EF7               	movwf	tblptrh,c
  6400  001B78                     	endif
  6401  001B78                     	if	0	;tblptru may be non-zero
  6402  001B78                     	endif
  6403  001B78                     	if	0	;tblptru may be non-zero
  6404  001B78                     	endif
  6405  001B78  0008               	tblrd		*
  6406  001B7A  50F5               	movf	tablat,w,c
  6407  001B7C  0A20               	xorlw	32
  6408  001B7E  B4D8               	btfsc	status,2,c
  6409  001B80  D018               	goto	l2907
  6410                           
  6411                           ; BSR set to: 0
  6412  001B82  0EF7               	movlw	247
  6413  001B84  6E0A               	movwf	??_atoi& (0+255),c
  6414  001B86  0EFF               	movlw	255
  6415  001B88  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6416  001B8A  C008  FFF6         	movff	atoi@s,tblptrl
  6417  001B8E                     	if	1	;There is more than 1 active tblptr byte
  6418  001B8E  0E08               	movlw	high __smallconst
  6419  001B90  6EF7               	movwf	tblptrh,c
  6420  001B92                     	endif
  6421  001B92                     	if	0	;tblptru may be non-zero
  6422  001B92                     	endif
  6423  001B92                     	if	0	;tblptru may be non-zero
  6424  001B92                     	endif
  6425  001B92  0008               	tblrd		*
  6426  001B94  50F5               	movf	tablat,w,c
  6427  001B96  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6428  001B98  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6429  001B9A  500A               	movf	??_atoi,w,c
  6430  001B9C  260C               	addwf	??_atoi+2,f,c
  6431  001B9E  500B               	movf	??_atoi+1,w,c
  6432  001BA0  220D               	addwfc	??_atoi+3,f,c
  6433  001BA2  500D               	movf	??_atoi+3,w,c
  6434  001BA4  E104               	bnz	u2800
  6435  001BA6  0E05               	movlw	5
  6436  001BA8  5C0C               	subwf	??_atoi+2,w,c
  6437  001BAA  A0D8               	btfss	status,0,c
  6438  001BAC  D002               	goto	l2907
  6439  001BAE                     u2800:
  6440                           
  6441                           ; BSR set to: 0
  6442  001BAE  0E00               	movlw	0
  6443  001BB0  6E14               	movwf	_atoi$966,c
  6444  001BB2                     l2907:
  6445                           
  6446                           ; BSR set to: 0
  6447  001BB2  C014  F010         	movff	_atoi$966,_atoi$965
  6448  001BB6  6A11               	clrf	_atoi$965+1,c
  6449                           
  6450                           ; BSR set to: 0
  6451  001BB8  5010               	movf	_atoi$965,w,c
  6452  001BBA  1011               	iorwf	_atoi$965+1,w,c
  6453  001BBC  B4D8               	btfsc	status,2,c
  6454  001BBE  D007               	goto	l2917
  6455  001BC0  D7D4               	goto	l2897
  6456  001BC2                     l2913:
  6457                           
  6458                           ; BSR set to: 0
  6459  001BC2  0E00               	movlw	0
  6460  001BC4  6E0F               	movwf	atoi@neg+1,c
  6461  001BC6  0E01               	movlw	1
  6462  001BC8  6E0E               	movwf	atoi@neg,c
  6463  001BCA                     l2915:
  6464  001BCA  2A08               	incf	atoi@s,f,c
  6465  001BCC  D02E               	goto	l2923
  6466  001BCE                     l2917:
  6467                           
  6468                           ; BSR set to: 0
  6469  001BCE  C008  FFF6         	movff	atoi@s,tblptrl
  6470  001BD2                     	if	1	;There is more than 1 active tblptr byte
  6471  001BD2  0E08               	movlw	high __smallconst
  6472  001BD4  6EF7               	movwf	tblptrh,c
  6473  001BD6                     	endif
  6474  001BD6                     	if	0	;tblptru may be non-zero
  6475  001BD6                     	endif
  6476  001BD6                     	if	0	;tblptru may be non-zero
  6477  001BD6                     	endif
  6478  001BD6  0008               	tblrd		*
  6479  001BD8  50F5               	movf	tablat,w,c
  6480  001BDA  6E0A               	movwf	??_atoi& (0+255),c
  6481  001BDC  6A0B               	clrf	(??_atoi+1)& (0+255),c
  6482                           
  6483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6484                           ; Switch size 1, requested type "simple"
  6485                           ; Number of cases is 1, Range of values is 0 to 0
  6486                           ; switch strategies available:
  6487                           ; Name         Instructions Cycles
  6488                           ; simple_byte            4     3 (average)
  6489                           ;	Chosen strategy is simple_byte
  6490  001BDE  500B               	movf	??_atoi+1,w,c
  6491  001BE0  0A00               	xorlw	0	; case 0
  6492  001BE2  A4D8               	btfss	status,2,c
  6493  001BE4  D022               	goto	l2923
  6494                           
  6495                           ; BSR set to: 0
  6496                           ; Switch size 1, requested type "simple"
  6497                           ; Number of cases is 2, Range of values is 43 to 45
  6498                           ; switch strategies available:
  6499                           ; Name         Instructions Cycles
  6500                           ; simple_byte            7     4 (average)
  6501                           ;	Chosen strategy is simple_byte
  6502  001BE6  500A               	movf	??_atoi,w,c
  6503  001BE8  0A2B               	xorlw	43	; case 43
  6504  001BEA  B4D8               	btfsc	status,2,c
  6505  001BEC  D7EE               	goto	l2915
  6506  001BEE  0A06               	xorlw	6	; case 45
  6507  001BF0  B4D8               	btfsc	status,2,c
  6508  001BF2  D7E7               	goto	l2913
  6509  001BF4  D01A               	goto	l2923
  6510  001BF6                     l2919:
  6511  001BF6  C015  F001         	movff	atoi@n,___wmul@multiplier
  6512  001BFA  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6513  001BFE  0E00               	movlw	0
  6514  001C00  6E04               	movwf	___wmul@multiplicand+1,c
  6515  001C02  0E0A               	movlw	10
  6516  001C04  6E03               	movwf	___wmul@multiplicand,c
  6517  001C06  ECA8  F013         	call	___wmul	;wreg free
  6518  001C0A  C008  FFF6         	movff	atoi@s,tblptrl
  6519  001C0E                     	if	1	;There is more than 1 active tblptr byte
  6520  001C0E  0E08               	movlw	high __smallconst
  6521  001C10  6EF7               	movwf	tblptrh,c
  6522  001C12                     	endif
  6523  001C12                     	if	0	;tblptru may be non-zero
  6524  001C12                     	endif
  6525  001C12                     	if	0	;tblptru may be non-zero
  6526  001C12                     	endif
  6527  001C12  0008               	tblrd		*
  6528  001C14  50F5               	movf	tablat,w,c
  6529  001C16  5E01               	subwf	?___wmul,f,c
  6530  001C18  0E00               	movlw	0
  6531  001C1A  5A02               	subwfb	?___wmul+1,f,c
  6532  001C1C  0E30               	movlw	48
  6533  001C1E  2401               	addwf	?___wmul,w,c
  6534  001C20  6E15               	movwf	atoi@n,c
  6535  001C22  0E00               	movlw	0
  6536  001C24  2002               	addwfc	?___wmul+1,w,c
  6537  001C26  6E16               	movwf	atoi@n+1,c
  6538  001C28  D7D0               	goto	l2915
  6539  001C2A                     l2923:
  6540  001C2A  0ED0               	movlw	208
  6541  001C2C  6E0A               	movwf	??_atoi& (0+255),c
  6542  001C2E  0EFF               	movlw	255
  6543  001C30  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6544  001C32  C008  FFF6         	movff	atoi@s,tblptrl
  6545  001C36                     	if	1	;There is more than 1 active tblptr byte
  6546  001C36  0E08               	movlw	high __smallconst
  6547  001C38  6EF7               	movwf	tblptrh,c
  6548  001C3A                     	endif
  6549  001C3A                     	if	0	;tblptru may be non-zero
  6550  001C3A                     	endif
  6551  001C3A                     	if	0	;tblptru may be non-zero
  6552  001C3A                     	endif
  6553  001C3A  0008               	tblrd		*
  6554  001C3C  50F5               	movf	tablat,w,c
  6555  001C3E  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6556  001C40  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6557  001C42  500A               	movf	??_atoi,w,c
  6558  001C44  260C               	addwf	??_atoi+2,f,c
  6559  001C46  500B               	movf	??_atoi+1,w,c
  6560  001C48  220D               	addwfc	??_atoi+3,f,c
  6561  001C4A  500D               	movf	??_atoi+3,w,c
  6562  001C4C  E106               	bnz	u2820
  6563  001C4E  0E0A               	movlw	10
  6564  001C50  5C0C               	subwf	??_atoi+2,w,c
  6565  001C52  B0D8               	btfsc	status,0,c
  6566  001C54  D002               	goto	u2820
  6567  001C56  0E01               	movlw	1
  6568  001C58  D001               	goto	u2830
  6569  001C5A                     u2820:
  6570  001C5A  0E00               	movlw	0
  6571  001C5C                     u2830:
  6572  001C5C  6E12               	movwf	_atoi$967,c
  6573  001C5E  6A13               	clrf	_atoi$967+1,c
  6574  001C60  5012               	movf	_atoi$967,w,c
  6575  001C62  1013               	iorwf	_atoi$967+1,w,c
  6576  001C64  A4D8               	btfss	status,2,c
  6577  001C66  D7C7               	goto	l2919
  6578  001C68  500E               	movf	atoi@neg,w,c
  6579  001C6A  100F               	iorwf	atoi@neg+1,w,c
  6580  001C6C  A4D8               	btfss	status,2,c
  6581  001C6E  D00D               	goto	l1115
  6582  001C70  C015  F00A         	movff	atoi@n,??_atoi
  6583  001C74  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6584  001C78  1E0A               	comf	??_atoi,f,c
  6585  001C7A  1E0B               	comf	??_atoi+1,f,c
  6586  001C7C  4A0A               	infsnz	??_atoi,f,c
  6587  001C7E  2A0B               	incf	??_atoi+1,f,c
  6588  001C80  C00A  F008         	movff	??_atoi,?_atoi
  6589  001C84  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6590  001C88  0012               	return	
  6591  001C8A                     l1115:
  6592  001C8A  C015  F008         	movff	atoi@n,?_atoi
  6593  001C8E  C016  F009         	movff	atoi@n+1,?_atoi+1
  6594  001C92  0012               	return		;funcret
  6595  001C94                     __end_of_atoi:
  6596                           	opt callstack 0
  6597                           
  6598 ;; *************** function _isspace *****************
  6599 ;; Defined at:
  6600 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  c               2    0[COMRAM] int 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  2    0[COMRAM] int 
  6607 ;; Registers used:
  6608 ;;		wreg, status,2, status,0
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6614 ;;      Params:         2       0       0       0       0       0       0       0       0
  6615 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6616 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6617 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6618 ;;Total ram usage:        7 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    1
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_atoi
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text29
  6629  00257C                     __ptext29:
  6630                           	opt callstack 0
  6631  00257C                     _isspace:
  6632                           	opt callstack 23
  6633                           
  6634                           ;incstack = 0
  6635  00257C  0E01               	movlw	1
  6636  00257E  6E07               	movwf	_isspace$992,c
  6637  002580  0E20               	movlw	32
  6638  002582  1801               	xorwf	isspace@c,w,c
  6639  002584  1002               	iorwf	isspace@c+1,w,c
  6640  002586  B4D8               	btfsc	status,2,c
  6641  002588  D014               	goto	l2623
  6642  00258A  0EF7               	movlw	247
  6643  00258C  6E03               	movwf	??_isspace& (0+255),c
  6644  00258E  0EFF               	movlw	255
  6645  002590  6E04               	movwf	(??_isspace+1)& (0+255),c
  6646  002592  C001  F005         	movff	isspace@c,??_isspace+2
  6647  002596  C002  F006         	movff	isspace@c+1,??_isspace+3
  6648  00259A  5003               	movf	??_isspace,w,c
  6649  00259C  2605               	addwf	??_isspace+2,f,c
  6650  00259E  5004               	movf	??_isspace+1,w,c
  6651  0025A0  2206               	addwfc	??_isspace+3,f,c
  6652  0025A2  5006               	movf	??_isspace+3,w,c
  6653  0025A4  E104               	bnz	u2190
  6654  0025A6  0E05               	movlw	5
  6655  0025A8  5C05               	subwf	??_isspace+2,w,c
  6656  0025AA  A0D8               	btfss	status,0,c
  6657  0025AC  D002               	goto	l2623
  6658  0025AE                     u2190:
  6659  0025AE  0E00               	movlw	0
  6660  0025B0  6E07               	movwf	_isspace$992,c
  6661  0025B2                     l2623:
  6662  0025B2  C007  F001         	movff	_isspace$992,?_isspace
  6663  0025B6  6A02               	clrf	?_isspace+1,c
  6664  0025B8  0012               	return		;funcret
  6665  0025BA                     __end_of_isspace:
  6666                           	opt callstack 0
  6667                           
  6668 ;; *************** function _isdigit *****************
  6669 ;; Defined at:
  6670 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  c               2    0[COMRAM] int 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  2    0[COMRAM] int 
  6677 ;; Registers used:
  6678 ;;		wreg, status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6684 ;;      Params:         2       0       0       0       0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6686 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6687 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6688 ;;Total ram usage:        6 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    1
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_vfpfcnvrt
  6695 ;;		_atoi
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text30
  6700  002720                     __ptext30:
  6701                           	opt callstack 0
  6702  002720                     _isdigit:
  6703                           	opt callstack 24
  6704                           
  6705                           ;incstack = 0
  6706  002720  0ED0               	movlw	208
  6707  002722  6E03               	movwf	??_isdigit& (0+255),c
  6708  002724  0EFF               	movlw	255
  6709  002726  6E04               	movwf	(??_isdigit+1)& (0+255),c
  6710  002728  C001  F005         	movff	isdigit@c,??_isdigit+2
  6711  00272C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6712  002730  5003               	movf	??_isdigit,w,c
  6713  002732  2605               	addwf	??_isdigit+2,f,c
  6714  002734  5004               	movf	??_isdigit+1,w,c
  6715  002736  2206               	addwfc	??_isdigit+3,f,c
  6716  002738  5006               	movf	??_isdigit+3,w,c
  6717  00273A  E106               	bnz	u1960
  6718  00273C  0E0A               	movlw	10
  6719  00273E  5C05               	subwf	??_isdigit+2,w,c
  6720  002740  B0D8               	btfsc	status,0,c
  6721  002742  D002               	goto	u1960
  6722  002744  0E01               	movlw	1
  6723  002746  D001               	goto	u1970
  6724  002748                     u1960:
  6725  002748  0E00               	movlw	0
  6726  00274A                     u1970:
  6727  00274A  6E01               	movwf	?_isdigit,c
  6728  00274C  6A02               	clrf	?_isdigit+1,c
  6729  00274E  0012               	return		;funcret
  6730  002750                     __end_of_isdigit:
  6731                           	opt callstack 0
  6732                           
  6733 ;; *************** function ___wmul *****************
  6734 ;; Defined at:
  6735 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  multiplier      2    0[COMRAM] unsigned int 
  6738 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  product         2    4[COMRAM] unsigned int 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  2    0[COMRAM] unsigned int 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0, prodl, prodh
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6750 ;;      Params:         4       0       0       0       0       0       0       0       0
  6751 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6753 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6754 ;;Total ram usage:        6 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    1
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_atoi
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text31
  6765  002750                     __ptext31:
  6766                           	opt callstack 0
  6767  002750                     ___wmul:
  6768                           	opt callstack 23
  6769                           
  6770                           ;incstack = 0
  6771  002750  5001               	movf	___wmul@multiplier,w,c
  6772  002752  0203               	mulwf	___wmul@multiplicand,c
  6773  002754  CFF3 F005          	movff	prodl,___wmul@product
  6774  002758  CFF4 F006          	movff	prodh,___wmul@product+1
  6775  00275C  5001               	movf	___wmul@multiplier,w,c
  6776  00275E  0204               	mulwf	___wmul@multiplicand+1,c
  6777  002760  50F3               	movf	prodl,w,c
  6778  002762  2606               	addwf	___wmul@product+1,f,c
  6779  002764  5002               	movf	___wmul@multiplier+1,w,c
  6780  002766  0203               	mulwf	___wmul@multiplicand,c
  6781  002768  50F3               	movf	prodl,w,c
  6782  00276A  2606               	addwf	___wmul@product+1,f,c
  6783  00276C  C005  F001         	movff	___wmul@product,?___wmul
  6784  002770  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6785  002774  0012               	return		;funcret
  6786  002776                     __end_of___wmul:
  6787                           	opt callstack 0
  6788                           
  6789 ;; *************** function _display3 *****************
  6790 ;; Defined at:
  6791 ;;		line 179 in file "main.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  data3           1    4[COMRAM] PTR const unsigned char 
  6794 ;;		 -> buffer(4), 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  bit             1   10[COMRAM] volatile unsigned char 
  6797 ;;  csize           1    9[COMRAM] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 3F/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6807 ;;      Params:         1       0       0       0       0       0       0       0       0
  6808 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6809 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6810 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6811 ;;Total ram usage:        7 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    2
  6814 ;; This function calls:
  6815 ;;		_character_table
  6816 ;;		_send_digit
  6817 ;;		_strlen
  6818 ;; This function is called by:
  6819 ;;		_numarator
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text32
  6824  002284                     __ptext32:
  6825                           	opt callstack 0
  6826  002284                     _display3:
  6827                           	opt callstack 27
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;main.c: 181:              dig_mask= (DIG1 | DIG2 | DIG3);;main.c: 184:     unsigned cha
      +                          r csize=strlen(data3);
  6831                           
  6832                           ;incstack = 0
  6833  002284  C005  F001         	movff	display3@data3,strlen@s
  6834  002288  ECBB  F013         	call	_strlen	;wreg free
  6835  00228C  5001               	movf	?_strlen,w,c
  6836  00228E  6E0A               	movwf	display3@csize,c
  6837                           
  6838                           ;main.c: 186:     volatile unsigned char bit=DIG1;
  6839  002290  0E20               	movlw	32
  6840  002292  6E0B               	movwf	display3@bit,c	;volatile
  6841                           
  6842                           ;main.c: 188:     bit= (bit<<(3 -csize)) | (bit>>(8-3 +csize));
  6843  002294  C00A  F006         	movff	display3@csize,??_display3
  6844  002298  0E05               	movlw	5
  6845  00229A  2606               	addwf	??_display3,f,c
  6846  00229C  C00B  F007         	movff	display3@bit,??_display3+1	;volatile
  6847  0022A0  2A06               	incf	??_display3,f,c
  6848  0022A2  D002               	goto	u3434
  6849  0022A4                     u3435:
  6850  0022A4  90D8               	bcf	status,0,c
  6851  0022A6  3207               	rrcf	??_display3+1,f,c
  6852  0022A8                     u3434:
  6853  0022A8  2E06               	decfsz	??_display3,f,c
  6854  0022AA  D7FC               	goto	u3435
  6855  0022AC  500A               	movf	display3@csize,w,c
  6856  0022AE  0803               	sublw	3
  6857  0022B0  6E08               	movwf	(??_display3+2)& (0+255),c
  6858  0022B2  C00B  F009         	movff	display3@bit,??_display3+3	;volatile
  6859  0022B6  2A08               	incf	??_display3+2,f,c
  6860  0022B8  D002               	goto	u3444
  6861  0022BA                     u3445:
  6862  0022BA  90D8               	bcf	status,0,c
  6863  0022BC  3609               	rlcf	??_display3+3,f,c
  6864  0022BE                     u3444:
  6865  0022BE  2E08               	decfsz	??_display3+2,f,c
  6866  0022C0  D7FC               	goto	u3445
  6867  0022C2  5009               	movf	??_display3+3,w,c
  6868  0022C4  1007               	iorwf	??_display3+1,w,c
  6869  0022C6  6E0B               	movwf	display3@bit,c	;volatile
  6870                           
  6871                           ;main.c: 192:     while( bit & dig_mask ) {
  6872  0022C8  D01B               	goto	l3475
  6873  0022CA                     l3457:
  6874                           
  6875                           ;main.c: 193:         LATB &=~OE;
  6876  0022CA  988A               	bcf	3978,4,c	;volatile
  6877                           
  6878                           ;main.c: 194:         send_digit( character_table(*(data3++)) );
  6879  0022CC  5005               	movf	display3@data3,w,c
  6880  0022CE  6ED9               	movwf	fsr2l,c
  6881  0022D0  6ADA               	clrf	fsr2h,c
  6882  0022D2  50DF               	movf	indf2,w,c
  6883  0022D4  EC63  F00F         	call	_character_table
  6884  0022D8  EC9E  F012         	call	_send_digit
  6885  0022DC  2A05               	incf	display3@data3,f,c
  6886                           
  6887                           ;main.c: 195:         LATB |= dig_mask;
  6888  0022DE  0EE0               	movlw	224
  6889  0022E0  128A               	iorwf	3978,f,c	;volatile
  6890                           
  6891                           ;main.c: 196:         LATB=(LATB & ~(SER|SRCLK|SRCLR|RCLK)) | RCLK; LATB=(LATB & ~(SER|S
      +                          RCLK|SRCLR|RCLK));;
  6892  0022E2  508A               	movf	3978,w,c	;volatile
  6893  0022E4  0BF0               	andlw	240
  6894  0022E6  0908               	iorlw	8
  6895  0022E8  6E8A               	movwf	3978,c	;volatile
  6896  0022EA  508A               	movf	3978,w,c	;volatile
  6897  0022EC  0BF0               	andlw	240
  6898  0022EE  6E8A               	movwf	3978,c	;volatile
  6899                           
  6900                           ;main.c: 197:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  6901  0022F0  0E14               	movlw	20
  6902  0022F2                     u3517:
  6903  0022F2  2EE8               	decfsz	wreg,f,c
  6904  0022F4  D7FE               	bra	u3517
  6905                           
  6906                           ;main.c: 198:         LATB &= ~bit;
  6907  0022F6  500B               	movf	display3@bit,w,c	;volatile
  6908  0022F8  0AFF               	xorlw	255
  6909  0022FA  168A               	andwf	3978,f,c	;volatile
  6910                           
  6911                           ;main.c: 201:         bit = (bit<<1)|(bit>>7);
  6912  0022FC  340B               	rlcf	display3@bit,w,c	;volatile
  6913  0022FE  360B               	rlcf	display3@bit,f,c	;volatile
  6914  002300                     l3475:
  6915                           
  6916                           ;main.c: 192:     while( bit & dig_mask ) {
  6917  002300  C00B  F006         	movff	display3@bit,??_display3	;volatile
  6918  002304  0EE0               	movlw	224
  6919  002306  1606               	andwf	??_display3,f,c
  6920  002308  A4D8               	btfss	status,2,c
  6921  00230A  D7DF               	goto	l3457
  6922                           
  6923                           ;main.c: 207:     send_digit('o');_delay((unsigned long)((20)*(8000000/4000000.0))); LAT
      +                          B|=dig_mask;
  6924  00230C  0E6F               	movlw	111
  6925  00230E  EC9E  F012         	call	_send_digit
  6926  002312  0E0D               	movlw	13
  6927  002314                     u3527:
  6928  002314  2EE8               	decfsz	wreg,f,c
  6929  002316  D7FE               	bra	u3527
  6930  002318  F000               	nop	
  6931  00231A  0EE0               	movlw	224
  6932  00231C  128A               	iorwf	3978,f,c	;volatile
  6933  00231E  0012               	return		;funcret
  6934  002320                     __end_of_display3:
  6935                           	opt callstack 0
  6936                           
  6937 ;; *************** function _strlen *****************
  6938 ;; Defined at:
  6939 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  s               1    0[COMRAM] PTR const unsigned char 
  6942 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), buffer(4), 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;  a               1    2[COMRAM] PTR const unsigned char 
  6945 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), buffer(4), 
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  2    0[COMRAM] unsigned int 
  6948 ;; Registers used:
  6949 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6955 ;;      Params:         2       0       0       0       0       0       0       0       0
  6956 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6958 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6959 ;;Total ram usage:        3 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    1
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_display3
  6966 ;;		_pad
  6967 ;;		_stoa
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text33
  6972  002776                     __ptext33:
  6973                           	opt callstack 0
  6974  002776                     _strlen:
  6975                           	opt callstack 22
  6976                           
  6977                           ;incstack = 0
  6978  002776  C001  F003         	movff	strlen@s,strlen@a
  6979  00277A  D001               	goto	l2425
  6980  00277C                     l2423:
  6981  00277C  2A01               	incf	strlen@s,f,c
  6982  00277E                     l2425:
  6983  00277E  5001               	movf	strlen@s,w,c
  6984  002780  6ED9               	movwf	fsr2l,c
  6985  002782  6ADA               	clrf	fsr2h,c
  6986  002784  50DF               	movf	indf2,w,c
  6987  002786  A4D8               	btfss	status,2,c
  6988  002788  D7F9               	goto	l2423
  6989  00278A  5003               	movf	strlen@a,w,c
  6990  00278C  5C01               	subwf	strlen@s,w,c
  6991  00278E  6E01               	movwf	?_strlen,c
  6992  002790  6A02               	clrf	?_strlen+1,c
  6993  002792  BE01               	btfsc	?_strlen,7,c
  6994  002794  0602               	decf	?_strlen+1,f,c
  6995  002796  0012               	return		;funcret
  6996  002798                     __end_of_strlen:
  6997                           	opt callstack 0
  6998                           
  6999 ;; *************** function _send_digit *****************
  7000 ;; Defined at:
  7001 ;;		line 158 in file "main.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  data            1    wreg     unsigned char 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  data            1    0[COMRAM] unsigned char 
  7006 ;;  i               2    1[COMRAM] int 
  7007 ;;  a               1    3[COMRAM] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0
  7018 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7020 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7021 ;;Total ram usage:        4 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    1
  7024 ;; This function calls:
  7025 ;;		Nothing
  7026 ;; This function is called by:
  7027 ;;		_display3
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text34
  7032  00253C                     __ptext34:
  7033                           	opt callstack 0
  7034  00253C                     _send_digit:
  7035                           	opt callstack 27
  7036                           
  7037                           ;incstack = 0
  7038                           ;send_digit@data stored from wreg
  7039  00253C  6E01               	movwf	send_digit@data,c
  7040                           
  7041                           ;main.c: 159:     unsigned char a;;main.c: 160:     POZ com_mask=SER|SRCLK|SRCLR|RCLK ;;
      +                          main.c: 161:     LATB&=~com_mask;
  7042  00253E  0EF0               	movlw	240
  7043  002540  168A               	andwf	3978,f,c	;volatile
  7044                           
  7045                           ;main.c: 163:     LATB|=SRCLR;
  7046  002542  848A               	bsf	3978,2,c	;volatile
  7047                           
  7048                           ;main.c: 165:     for(int i=0;i<8; i++ )
  7049  002544  0E00               	movlw	0
  7050  002546  6E03               	movwf	send_digit@i+1,c
  7051  002548  0E00               	movlw	0
  7052  00254A  6E02               	movwf	send_digit@i,c
  7053  00254C                     l3411:
  7054                           
  7055                           ;main.c: 166:     {;main.c: 168:         data= (data<<1) | (data>>7);
  7056  00254C  3401               	rlcf	send_digit@data,w,c
  7057  00254E  3601               	rlcf	send_digit@data,f,c
  7058                           
  7059                           ;main.c: 169:         a=LATB & ~(SER|SRCLK);
  7060  002550  508A               	movf	3978,w,c	;volatile
  7061  002552  0BFC               	andlw	252
  7062  002554  6E04               	movwf	send_digit@a,c
  7063                           
  7064                           ;main.c: 171:         a =a| (data & SER);
  7065  002556  5001               	movf	send_digit@data,w,c
  7066  002558  0B01               	andlw	1
  7067  00255A  1004               	iorwf	send_digit@a,w,c
  7068  00255C  6E04               	movwf	send_digit@a,c
  7069                           
  7070                           ;main.c: 172:         LATB=a;
  7071  00255E  C004  FF8A         	movff	send_digit@a,3978	;volatile
  7072                           
  7073                           ;main.c: 173:         LATB|=SRCLK;
  7074  002562  828A               	bsf	3978,1,c	;volatile
  7075                           
  7076                           ;main.c: 174:     }
  7077  002564  4A02               	infsnz	send_digit@i,f,c
  7078  002566  2A03               	incf	send_digit@i+1,f,c
  7079  002568  BE03               	btfsc	send_digit@i+1,7,c
  7080  00256A  D7F0               	goto	l3411
  7081  00256C  5003               	movf	send_digit@i+1,w,c
  7082  00256E  E105               	bnz	u3370
  7083  002570  0E08               	movlw	8
  7084  002572  5C02               	subwf	send_digit@i,w,c
  7085  002574  B0D8               	btfsc	status,0,c
  7086  002576  0012               	return	
  7087  002578  D7E9               	goto	l3411
  7088  00257A                     u3370:
  7089  00257A  0012               	return		;funcret
  7090  00257C                     __end_of_send_digit:
  7091                           	opt callstack 0
  7092                           
  7093 ;; *************** function _character_table *****************
  7094 ;; Defined at:
  7095 ;;		line 119 in file "main.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  symbol          1    wreg     unsigned char 
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;  symbol          1    2[COMRAM] unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      unsigned char 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0
  7110 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7111 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7112 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7113 ;;Total ram usage:        3 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    1
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_display3
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text35
  7124  001EC6                     __ptext35:
  7125                           	opt callstack 0
  7126  001EC6                     _character_table:
  7127                           	opt callstack 27
  7128                           
  7129                           ;incstack = 0
  7130                           ;character_table@symbol stored from wreg
  7131  001EC6  6E03               	movwf	character_table@symbol,c
  7132                           
  7133                           ;main.c: 122:     c_t o=0x00;;main.c: 123:     c_t a=0x01;;main.c: 124:     c_t b=0x01<<
      +                          1;;main.c: 125:     c_t c=0x01<<2;;main.c: 126:     c_t d=0x01<<3;;main.c: 127:     c_t 
      +                          e=0x01<<4;;main.c: 128:     c_t f=0x01<<5;;main.c: 129:     c_t g=0x01<<6;;main.c: 130: 
      +                              c_t h=0x01<<7;;main.c: 133:     switch (symbol){
  7134  001EC8  D030               	goto	l3395
  7135  001ECA                     l3313:
  7136  001ECA  0E77               	movlw	119
  7137  001ECC  0012               	return	
  7138  001ECE                     l3317:
  7139  001ECE  0E7C               	movlw	124
  7140  001ED0  0012               	return	
  7141  001ED2                     l3321:
  7142  001ED2  0E39               	movlw	57
  7143  001ED4  0012               	return	
  7144  001ED6                     l3325:
  7145  001ED6  0E5E               	movlw	94
  7146  001ED8  0012               	return	
  7147  001EDA                     l3329:
  7148  001EDA  0E79               	movlw	121
  7149  001EDC  0012               	return	
  7150  001EDE                     l3333:
  7151  001EDE  0E71               	movlw	113
  7152  001EE0  0012               	return	
  7153  001EE2                     l3337:
  7154  001EE2  0E3F               	movlw	63
  7155  001EE4  0012               	return	
  7156  001EE6                     l3341:
  7157  001EE6  0E06               	movlw	6
  7158  001EE8  0012               	return	
  7159  001EEA                     l3345:
  7160  001EEA  0E5B               	movlw	91
  7161  001EEC  0012               	return	
  7162  001EEE                     l3349:
  7163  001EEE  0E4F               	movlw	79
  7164  001EF0  0012               	return	
  7165  001EF2                     l3353:
  7166  001EF2  0E66               	movlw	102
  7167  001EF4  0012               	return	
  7168  001EF6                     l3357:
  7169  001EF6  0E6D               	movlw	109
  7170  001EF8  0012               	return	
  7171  001EFA                     l3361:
  7172  001EFA  0E7D               	movlw	125
  7173  001EFC  0012               	return	
  7174  001EFE                     l3365:
  7175  001EFE  0E07               	movlw	7
  7176  001F00  0012               	return	
  7177  001F02                     l3369:
  7178  001F02  0E7F               	movlw	127
  7179  001F04  0012               	return	
  7180  001F06                     l3373:
  7181  001F06  0E6F               	movlw	111
  7182  001F08  0012               	return	
  7183  001F0A                     l3377:
  7184  001F0A  0E03               	movlw	low character_table@h
  7185  001F0C  6EF6               	movwf	tblptrl,c
  7186  001F0E                     	if	1	;There is more than 1 active tblptr byte
  7187  001F0E  0E08               	movlw	high character_table@h
  7188  001F10  6EF7               	movwf	tblptrh,c
  7189  001F12                     	endif
  7190  001F12                     	if	0	;There are less than 3 active tblptr bytes
  7191  001F12                     	endif
  7192  001F12  0008               	tblrd		*
  7193  001F14  50F5               	movf	tablat,w,c
  7194  001F16  0012               	return	
  7195  001F18                     l3381:
  7196  001F18  0E0B               	movlw	low character_table@o
  7197  001F1A  6EF6               	movwf	tblptrl,c
  7198  001F1C                     	if	1	;There is more than 1 active tblptr byte
  7199  001F1C  0E08               	movlw	high character_table@o
  7200  001F1E  6EF7               	movwf	tblptrh,c
  7201  001F20                     	endif
  7202  001F20                     	if	0	;There are less than 3 active tblptr bytes
  7203  001F20                     	endif
  7204  001F20  0008               	tblrd		*
  7205  001F22  50F5               	movf	tablat,w,c
  7206  001F24  0012               	return	
  7207  001F26                     l3389:
  7208  001F26  0EF3               	movlw	243
  7209  001F28  0012               	return	
  7210  001F2A                     l3395:
  7211  001F2A  5003               	movf	character_table@symbol,w,c
  7212  001F2C  6E01               	movwf	??_character_table& (0+255),c
  7213  001F2E  6A02               	clrf	(??_character_table+1)& (0+255),c
  7214                           
  7215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7216                           ; Switch size 1, requested type "simple"
  7217                           ; Number of cases is 1, Range of values is 0 to 0
  7218                           ; switch strategies available:
  7219                           ; Name         Instructions Cycles
  7220                           ; simple_byte            4     3 (average)
  7221                           ;	Chosen strategy is simple_byte
  7222  001F30  5002               	movf	??_character_table+1,w,c
  7223  001F32  0A00               	xorlw	0	; case 0
  7224  001F34  A4D8               	btfss	status,2,c
  7225  001F36  D7F7               	goto	l3389
  7226                           
  7227                           ; Switch size 1, requested type "simple"
  7228                           ; Number of cases is 19, Range of values is 0 to 111
  7229                           ; switch strategies available:
  7230                           ; Name         Instructions Cycles
  7231                           ; simple_byte           58    30 (average)
  7232                           ;	Chosen strategy is simple_byte
  7233  001F38  5001               	movf	??_character_table,w,c
  7234  001F3A  0A00               	xorlw	0	; case 0
  7235  001F3C  B4D8               	btfsc	status,2,c
  7236  001F3E  D7EC               	goto	l3381
  7237  001F40  0A2E               	xorlw	46	; case 46
  7238  001F42  B4D8               	btfsc	status,2,c
  7239  001F44  D7E2               	goto	l3377
  7240  001F46  0A1E               	xorlw	30	; case 48
  7241  001F48  B4D8               	btfsc	status,2,c
  7242  001F4A  D7CB               	goto	l3337
  7243  001F4C  0A01               	xorlw	1	; case 49
  7244  001F4E  B4D8               	btfsc	status,2,c
  7245  001F50  D7CA               	goto	l3341
  7246  001F52  0A03               	xorlw	3	; case 50
  7247  001F54  B4D8               	btfsc	status,2,c
  7248  001F56  D7C9               	goto	l3345
  7249  001F58  0A01               	xorlw	1	; case 51
  7250  001F5A  B4D8               	btfsc	status,2,c
  7251  001F5C  D7C8               	goto	l3349
  7252  001F5E  0A07               	xorlw	7	; case 52
  7253  001F60  B4D8               	btfsc	status,2,c
  7254  001F62  D7C7               	goto	l3353
  7255  001F64  0A01               	xorlw	1	; case 53
  7256  001F66  B4D8               	btfsc	status,2,c
  7257  001F68  D7C6               	goto	l3357
  7258  001F6A  0A03               	xorlw	3	; case 54
  7259  001F6C  B4D8               	btfsc	status,2,c
  7260  001F6E  D7C5               	goto	l3361
  7261  001F70  0A01               	xorlw	1	; case 55
  7262  001F72  B4D8               	btfsc	status,2,c
  7263  001F74  D7C4               	goto	l3365
  7264  001F76  0A0F               	xorlw	15	; case 56
  7265  001F78  B4D8               	btfsc	status,2,c
  7266  001F7A  D7C3               	goto	l3369
  7267  001F7C  0A01               	xorlw	1	; case 57
  7268  001F7E  B4D8               	btfsc	status,2,c
  7269  001F80  D7C2               	goto	l3373
  7270  001F82  0A58               	xorlw	88	; case 97
  7271  001F84  B4D8               	btfsc	status,2,c
  7272  001F86  D7A1               	goto	l3313
  7273  001F88  0A03               	xorlw	3	; case 98
  7274  001F8A  B4D8               	btfsc	status,2,c
  7275  001F8C  D7A0               	goto	l3317
  7276  001F8E  0A01               	xorlw	1	; case 99
  7277  001F90  B4D8               	btfsc	status,2,c
  7278  001F92  D79F               	goto	l3321
  7279  001F94  0A07               	xorlw	7	; case 100
  7280  001F96  B4D8               	btfsc	status,2,c
  7281  001F98  D79E               	goto	l3325
  7282  001F9A  0A01               	xorlw	1	; case 101
  7283  001F9C  B4D8               	btfsc	status,2,c
  7284  001F9E  D79D               	goto	l3329
  7285  001FA0  0A03               	xorlw	3	; case 102
  7286  001FA2  B4D8               	btfsc	status,2,c
  7287  001FA4  D79C               	goto	l3333
  7288  001FA6  0A09               	xorlw	9	; case 111
  7289  001FA8  B4D8               	btfsc	status,2,c
  7290  001FAA  D7B6               	goto	l3381
  7291  001FAC  D7BC               	goto	l3389
  7292  001FAE                     __end_of_character_table:
  7293                           	opt callstack 0
  7294                           
  7295 ;; *************** function _my_ISR *****************
  7296 ;; Defined at:
  7297 ;;		line 212 in file "main.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0
  7312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7314 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7315 ;;Total ram usage:        0 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; This function calls:
  7318 ;;		Nothing
  7319 ;; This function is called by:
  7320 ;;		Interrupt level 2
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	intcode
  7325  000008                     __pintcode:
  7326                           	opt callstack 0
  7327  000008                     _my_ISR:
  7328                           	opt callstack 20
  7329                           
  7330                           ;incstack = 0
  7331  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7332  00000A  EDFA  F012         	call	int_func,f	;refresh shadow registers
  7333                           
  7334                           	psect	intcode_body
  7335  0025F4                     __pintcode_body:
  7336                           	opt callstack 20
  7337  0025F4                     int_func:
  7338                           	opt callstack 20
  7339  0025F4  0006               	pop		; remove dummy address from shadow register refresh
  7340                           
  7341                           ;main.c: 215:     if( (INTCON & BIT_5) && (INTCON & BIT_2) ) {
  7342  0025F6  BAF2               	btfsc	4082,5,c	;volatile
  7343  0025F8  A4F2               	btfss	4082,2,c	;volatile
  7344  0025FA  D015               	goto	i2l142
  7345                           
  7346                           ;main.c: 216:         INTCON &= ~BIT_2;
  7347  0025FC  94F2               	bcf	4082,2,c	;volatile
  7348                           
  7349                           ;main.c: 218:         count++;
  7350  0025FE  0100               	movlb	0	; () banked
  7351  002600  2BBC               	incf	_count& (0+255),f,b
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;main.c: 219:         if(count>=30) {
  7355  002602  0E1D               	movlw	29
  7356  002604  65BC               	cpfsgt	_count& (0+255),b
  7357  002606  D00F               	goto	i2l142
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;main.c: 220:             count-=30;
  7361  002608  0E1E               	movlw	30
  7362  00260A  5FBC               	subwf	_count& (0+255),f,b
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;main.c: 221:             NR++;
  7366  00260C  4BBA               	infsnz	_NR& (0+255),f,b
  7367  00260E  2BBB               	incf	(_NR+1)& (0+255),f,b
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;main.c: 222:             if(NR==1000) NR=0;
  7371  002610  0EE8               	movlw	232
  7372  002612  19BA               	xorwf	_NR& (0+255),w,b
  7373  002614  E108               	bnz	i2l142
  7374  002616  0E03               	movlw	3
  7375  002618  19BB               	xorwf	(_NR+1)& (0+255),w,b
  7376  00261A  A4D8               	btfss	status,2,c
  7377  00261C  D004               	goto	i2l142
  7378                           
  7379                           ; BSR set to: 0
  7380  00261E  0E00               	movlw	0
  7381  002620  6FBB               	movwf	(_NR+1)& (0+255),b
  7382  002622  0E00               	movlw	0
  7383  002624  6FBA               	movwf	_NR& (0+255),b
  7384  002626                     i2l142:
  7385  002626  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7386  002628  0011               	retfie		f
  7387  00262A                     __end_of_my_ISR:
  7388                           	opt callstack 0
  7389                           
  7390                           	psect	rparam
  7391  0000                     
  7392                           	psect	temp
  7393  00005F                     btemp:
  7394                           	opt callstack 0
  7395  00005F                     	ds	1
  7396  0000                     int$flags	set	btemp
  7397  0000                     wtemp8	set	btemp+1
  7398  0000                     ttemp5	set	btemp+1
  7399  0000                     ttemp6	set	btemp+4
  7400  0000                     ttemp7	set	btemp+8
  7401                           tosu	equ	0xFFF
  7402                           tosh	equ	0xFFE
  7403                           tosl	equ	0xFFD
  7404                           stkptr	equ	0xFFC
  7405                           pclatu	equ	0xFFB
  7406                           pclath	equ	0xFFA
  7407                           pcl	equ	0xFF9
  7408                           tblptru	equ	0xFF8
  7409                           tblptrh	equ	0xFF7
  7410                           tblptrl	equ	0xFF6
  7411                           tablat	equ	0xFF5
  7412                           prodh	equ	0xFF4
  7413                           prodl	equ	0xFF3
  7414                           indf0	equ	0xFEF
  7415                           postinc0	equ	0xFEE
  7416                           postdec0	equ	0xFED
  7417                           preinc0	equ	0xFEC
  7418                           plusw0	equ	0xFEB
  7419                           fsr0h	equ	0xFEA
  7420                           fsr0l	equ	0xFE9
  7421                           wreg	equ	0xFE8
  7422                           indf1	equ	0xFE7
  7423                           postinc1	equ	0xFE6
  7424                           postdec1	equ	0xFE5
  7425                           preinc1	equ	0xFE4
  7426                           plusw1	equ	0xFE3
  7427                           fsr1h	equ	0xFE2
  7428                           fsr1l	equ	0xFE1
  7429                           bsr	equ	0xFE0
  7430                           indf2	equ	0xFDF
  7431                           postinc2	equ	0xFDE
  7432                           postdec2	equ	0xFDD
  7433                           preinc2	equ	0xFDC
  7434                           plusw2	equ	0xFDB
  7435                           fsr2h	equ	0xFDA
  7436                           fsr2l	equ	0xFD9
  7437                           status	equ	0xFD8


Data Sizes:
    Strings     52
    Constant    27
    Data        10
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     37      93
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> buffer(BANK0[4]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 4
		 -> buffer(BANK0[4]), 

    strncmp@_r	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[4]), STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), 
		 -> STR_61(CODE[4]), STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), 
		 -> STR_41(CODE[3]), STR_36(CODE[3]), STR_31(CODE[4]), STR_26(CODE[3]), 
		 -> STR_22(CODE[3]), STR_17(CODE[3]), STR_13(CODE[3]), STR_8(CODE[4]), 
		 -> STR_4(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[4]), STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), 
		 -> STR_61(CODE[4]), STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), 
		 -> STR_41(CODE[3]), STR_36(CODE[3]), STR_31(CODE[4]), STR_26(CODE[3]), 
		 -> STR_22(CODE[3]), STR_17(CODE[3]), STR_13(CODE[3]), STR_8(CODE[4]), 
		 -> STR_4(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), buffer(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), buffer(BANK0[4]), 

    snprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    snprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> buffer(BANK0[4]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    S1005_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 4
		 -> buffer(BANK0[4]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 4
		 -> buffer(BANK0[4]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> vsnprintf@f(BANK0[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    display3@data3	PTR const unsigned char  size(1) Largest target is 4
		 -> buffer(BANK0[4]), 


Critical Paths under _main in COMRAM

    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->___lodiv
    _stoa->_fputc
    _otoa->_pad
    _dtoa->___aodiv
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _display3->_send_digit

Critical Paths under _my_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_numarator
    _numarator->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf

Critical Paths under _my_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   47405
                                             32 BANK0      5     0      5
                          _numarator
                   _setupPortDisplay
                         _setup_TMR0
 ---------------------------------------------------------------------------------
 (1) _setup_TMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPortDisplay                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _numarator                                            2     2      0   47405
                                             30 BANK0      2     2      0
                           _display3
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                             9     3      6   46669
                                             21 BANK0      9     3      6
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           18    13      5   46295
                                              3 BANK0     18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3   45532
                                             93 COMRAM     1     1      0
                                              0 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           41    38      3   45071
                                             61 COMRAM    32    29      3
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                38    28     10    7151
                                             22 COMRAM    38    28     10
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                31    22      9    6191
                                             25 COMRAM    31    22      9
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     3      4    5013
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) _stoa                                                19    17      2    2215
                                              8 COMRAM    19    17      2
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                33    24      9    5636
                                             22 COMRAM    33    24      9
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                35    26      9    6790
                                             26 COMRAM    35    26      9
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 6     4      2    4905
                                             22 COMRAM     4     2      2
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     5      4    4685
                                             13 COMRAM     9     5      4
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _fputs                                                5     3      2    1691
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                8     5      3    1290
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display3                                             7     6      1     712
                                              4 COMRAM     7     6      1
                    _character_table
                         _send_digit
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2     318
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _send_digit                                           4     4      0     115
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _character_table                                      3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _my_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _numarator
     _display3
       _character_table
       _send_digit
       _strlen
     _snprintf
       _vsnprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _setupPortDisplay
   _setup_TMR0

 _my_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      5D       5       58.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BB      20        0.0%
DATA                 0      0      BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun 05 14:19:52 2019

                        _OE 0816                          _NR 00BA                 __CFG_BOR$ON 000000  
       ___wmul@multiplicand 0003                 __CFG_BORV$3 000000                __CFG_CP0$OFF 000000  
              __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000  
                       l202 2348                         l220 1324                         l301 150A  
                       l222 132C                         l245 18BE                         l247 18C6  
                       l265 1E10                         l284 171C                         l286 1724  
                       l299 1502                         l847 205A                         l857 21C4  
              __CFG_CPB$OFF 000000                __CFG_CPD$OFF 000000                         _SER 081B  
                       _abs 265E                         _pad 2320                         wreg 000FE8  
              __CFG_LVP$OFF 000000                 display3@bit 000B                __CFG_WDT$OFF 000000  
                      l1115 1C8A                        ?_abs 0013                        l1221 211A  
                      l3011 096A                        l1084 2686                        l3101 0D10  
                      l3031 0A2A                        l3007 094A                        l3033 0A32  
                      l3009 0962                        l1194 2462                        l3131 0DEA  
                      l2413 23B6                        l3029 0A12                        l2423 277C  
                      l2511 1A64                        l3231 1126                        l3135 0DF4  
                      l3127 0DA2                        l3119 0D54                        l3055 0B36  
                      l3321 1ED2                        l3313 1ECA                        l2425 277E  
                      l2433 26FA                        l2505 1A3C                        l3217 1060  
                      l3209 1012                        l3081 0C10                        l3049 0AC0  
                      l3411 254C                        l2451 2340                        l2611 21AE  
                      l2603 2152                        l3171 0F02                        l3163 0E88  
                      l3155 0E48                        l3091 0C8C                        l3075 0BF0  
                      l3059 0B68                        l3307 2506                        l3341 1EE6  
                      l3333 1EDE                        l3325 1ED6                        l3317 1ECE  
                      l2437 270C                        l2461 238C                        l2453 2352  
                      l2517 1A8A                        l2533 1B10                        l2605 2166  
                      l3181 0F4A                        l3149 0E38                        l3069 0BB8  
                      l3309 2520                        l3501 2474                        l2623 25B2  
                      l2447 2332                        l2631 24C6                        l2519 1A9E  
                      l3191 0FCE                        l3361 1EFA                        l3353 1EF2  
                      l3345 1EEA                        l3337 1EE2                        l3329 1EDA  
                      l2457 2366                        l2633 24D2                        l2537 1B36  
                      l2529 1AFA                        l2553 1CE4                        l3273 1244  
                      l3433 20B6                        l3283 127E                        l3267 1222  
                      l3259 11B8                        l3427 2092                        l3507 24A8  
                      l3381 1F18                        l3373 1F06                        l3365 1EFE  
                      l3357 1EF6                        l3349 1EEE                        l2573 1D96  
                      l2565 1D5A                        l2557 1CFE                        l2549 1CC0  
                      l2661 1346                        l2717 1904                        l2805 175A  
                      l3445 2122                        l2559 1D12                        l2647 1306  
                      l2583 1FD4                        l2815 1842                        l3279 1274  
                      l3447 212E                        l3377 1F0A                        l3369 1F02  
                      l3457 22CA                        l2913 1BC2                        l2569 1D70  
                      l2665 1354                        l2729 1986                        l2585 1FE8  
                      l3289 1288                        l3395 1F2A                        l3475 2300  
                      l2923 1C2A                        l2915 1BCA                        l2907 1BB2  
                      l2675 1448                        l2747 19F0                        l2595 2044  
                      l3389 1F26                        l2917 1BCE                        l2773 1E3C  
                      l2853 156E                        l2845 154C                        ?_pad 000E  
                      l2919 1BF6                        l2695 14B0                        l2791 1EA8  
                      l2783 1E78                        l2759 1DD8                        l2943 2208  
                      l2839 151E                        l2777 1E5A                        l2769 1E28  
                      l2945 2212                        l2699 14C4                        l2787 1E94  
                      l2891 16DE                        l2867 15FC                        l2875 166E  
                      l2971 089C                        l2991 08B6                        l2983 08A8  
                      l2975 08A0                        l2967 0890                        l2897 1B6A  
                      l2969 0892                        l2993 08F6                        l2899 1B6C  
                      l2987 08AC                        l2979 08A4                        _DIG1 081A  
                      _DIG2 0815                        _DIG3 0814                        STR_1 084D  
                      STR_2 0820                        STR_4 0820                        STR_6 0824  
                      STR_8 0824                        u2001 1A6A                        u2020 1AA2  
                      u2111 1FB4                        u2210 12D8                        u2130 1FEC  
                      u3010 0A68                        u2300 1478                        u2220 12DA  
                      u3100 0BE8                        u3020 0A6A                        u2301 1476  
                      u2310 1486                        u3030 0A76                        _LATB 000F8A  
                      u2080 1D16                        u2320 148C                        u2160 216A  
                      u3200 0E6A                        u3120 0C54                        u2250 131A  
                      u2410 19B6                        u2340 149A                        u2420 19C4  
                      u3060 0B04                        u2190 25AE                        u2270 1340  
                      u2430 19CA                        u2510 1E50                        u2280 1456  
                      u2600 187A                        u3320 119A                        u3160 0D76  
                      u3080 0BAC                        u2370 18B4                        u2610 1880  
                      u2380 1962                        u2540 1EBC                        u1900 26EA  
                      u1820 26B8                        u2700 15DC                        u3340 11FC  
                      u3260 1034                        u2461 1DC2                        u2390 1994  
                      u1910 2656                        u1830 26BA                        u2630 14F8  
                      u2800 1BAE                        u2560 1712                        u1920 2658  
                      u2720 164A                        u3280 10A4                        u2385 1950  
                      u3370 257A                        u3434 22A8                        u1770 23AE  
                      u1930 244A                        u2730 167E                        u2650 156A  
                      u3435 22A4                        u3444 22BE                        u2820 1C5A  
                      u2900 225E                        u1940 244C                        u2660 15A0  
                      u3460 2484                        u3517 22F2                        u3445 22BA  
                      u2725 1638                        u2830 1C5C                        u1790 23F0  
                      u2590 186C                        u2750 16A0                        u2670 15A2  
                      u3390 20A2                        u3527 2314                        u2591 186A  
                      u2751 169E                        u1960 2748                        u1880 266C  
                      u2760 16AE                        u1970 274A                        u1890 26E8  
                      u2770 16B4                        u2690 15DA                        u2960 09A0  
                      u2970 09A2                        u2980 09AE                        _RCLK 0817  
                      abs@a 0013                        _dbuf 006A                        _atoi 1B58  
                      _ctoa 24B2                        _main 27B6                        _dtoa 12B0  
                      _prec 0066                        _otoa 18A0                        _nout 0062  
                      pad@i 0013                        pad@p 0010                        fsr1h 000FE2  
                      fsr2h 000FDA                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 0015                        fsr2l 000FD9                        _stoa 1DB8  
                      btemp 005F                        _utoa 16FE                        _xtoa 14E4  
                      prodh 000FF4                        prodl 000FF3                        start 000E  
             __CFG_IESO$OFF 000000                ___param_bank 000000                       ??_abs 0015  
                     ??_pad 0012               __CFG_PLLDIV$1 000000              __CFG_CCP2MX$ON 000000  
           __end_of___aodiv 1B58                       ?_atoi 0008                       ?_ctoa 0017  
                     ?_main 00AE                       ?_dtoa 001B             __end_of___aomod 1DB8  
                     STR_20 083B                       STR_13 0821                       STR_22 083B  
                     STR_31 082C                       STR_24 083E                       STR_17 0825  
                     STR_41 0844                       STR_26 083E                       STR_51 0829  
                     STR_36 082D                       STR_44 0828                       STR_61 0830  
                     STR_29 082C                       STR_46 0828                       STR_54 0841  
                     STR_71 0847                       STR_39 0844                       STR_80 081C  
                     STR_56 0841                       STR_66 0831                       STR_74 0834  
                     STR_59 0830                       STR_76 0834                       STR_92 084A  
                     STR_85 0835                       STR_69 0847                       STR_94 084A  
                     STR_78 081C                       STR_96 0838                       STR_89 081D  
                     STR_98 0838                       ?_otoa 0017                       _CMCON 000FB4  
                     ?_stoa 0009                       _BIT_0 0813                       ?_utoa 001A  
                     _BIT_1 0812                       _BIT_2 0811                       _BIT_3 0810  
                     _BIT_4 080F                       _BIT_5 080E                       _BIT_6 080D  
                     _BIT_7 080C                       _T0CON 000FD5             __end_of___lodiv 207C  
                     ?_xtoa 0017             __end_of___lomod 21E6                       i2l142 2626  
              vfpfcnvrt@fmt 003F                       _TMR0H 000FD7                vfpfcnvrt@llu 0056  
                     _TMR0L 000FD6                       _PORTB 000F81                       _SRCLK 0819  
                     _SRCLR 0818               __CFG_USBDIV$1 000000                       _TRISB 000F93  
             __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000                       _flags 0068  
                     _count 00BC                       _errno 0060                       _fputc 23A2  
           __end_of_isalpha 265E                       _fputs 26F0             __end_of_isdigit 2750  
                     atoi@n 0015                       pad@fp 000E                       atoi@s 0008  
                     _width 0064                       ctoa@c 0018                       _putch 2804  
                     ctoa@w 0019                       dtoa@d 001C                       dtoa@i 003C  
                     dtoa@n 0034                       dtoa@p 002E                       dtoa@s 0032  
                     dtoa@w 0030             __end_of_islower 26C0             __end_of_isspace 25BA  
           __end_of_isupper 26F0                       tablat 000FF5                       otoa@d 0018  
                     otoa@i 0036                       otoa@n 002E                       otoa@p 0028  
                     otoa@t 002A                       otoa@w 002C                       plusw1 000FE3  
                     plusw2 000FDB                       stoa@i 0013                       stoa@l 001A  
                     stoa@p 0018                       stoa@s 000A                       stoa@w 0015  
                     ttemp5 0060                       ttemp6 0063                       ttemp7 0067  
                     utoa@d 001B                       utoa@i 0037                       utoa@n 002F  
                     utoa@p 002B                       utoa@w 002D                       status 000FD8  
                     wtemp8 0060                       xtoa@c 003B                       xtoa@d 0018  
                     xtoa@i 0039                       xtoa@n 0031                       xtoa@p 002D  
                     xtoa@w 002F                       xtoa@x 0020             __end_of_strncmp 2284  
           __end_of_toupper 246C            ___lodiv@dividend 0001                __end_of_DIG1 081B  
              __end_of_DIG2 0816                __end_of_DIG3 0815                _toupper$1072 000D  
              __end_of_RCLK 0818              __CFG_MCLRE$OFF 000000             __initialization 25BA  
              __end_of_atoi 1C94                __end_of_ctoa 24F8                __end_of_main 27D0  
              __end_of_dtoa 14E4                __end_of_otoa 1A10                __end_of_stoa 1EC6  
              __end_of_utoa 18A0                __end_of_xtoa 16FE                      ??_atoi 000A  
                    ??_ctoa 0019                      ??_main 005F                      ??_dtoa 0024  
                    ??_otoa 0020                      ??_stoa 000B                      ??_utoa 0023  
                    ??_xtoa 0021               __activetblptr 000002               display3@data3 0005  
          ___lodiv@quotient 0011               display3@csize 000A                      _ADCON1 000FC1  
                    ?_fputc 0001                      ?_fputs 0009                      ?_putch 0001  
  __end_ofcharacter_table@a 080B    __end_ofcharacter_table@b 080A    __end_ofcharacter_table@c 0809  
  __end_ofcharacter_table@d 0808    __end_ofcharacter_table@e 0807    __end_ofcharacter_table@f 0806  
  __end_ofcharacter_table@g 0805    __end_ofcharacter_table@h 0804    __end_ofcharacter_table@o 080C  
                    _INTCON 000FF2                      _OSCCON 000FD3               vfpfcnvrt@done 0045  
           _character_table 1EC6              __CFG_XINST$OFF 000000            _setupPortDisplay 27D0  
              vfprintf@cfmt 005E            __end_of_display3 2320                   ??___aodiv 0011  
                 ??___aomod 0011                      ___wmul 2750              __CFG_STVREN$ON 000000  
                 ??___lodiv 0011                   ??___lomod 0011                      _buffer 008A  
                    _my_ISR 0008                      clear_0 25E0                      pad@buf 000F  
                    ctoa@fp 0017                      dtoa@fp 001B                      _strlen 2776  
                    fputc@c 0001                      fputs@c 000B                      fputs@i 000C  
                    fputs@s 0009                   ??_isalpha 0003                   ??_isdigit 0003  
                 ??_islower 0003                __mediumconst 0000                   ??_isspace 0003  
                    otoa@fp 0017                      tblptrh 000FF7                   ??_isupper 0003  
                    tblptrl 000FF6                      tblptru 000FF8                      stoa@cp 0017  
                    stoa@fp 0009                      putch@c 0001            __end_of_vfprintf 253C  
                    utoa@fp 001A            __end_of_snprintf 27B6                      xtoa@fp 0017  
                 ??_strncmp 0005                   ??_toupper 0009                  __accesstop 0060  
   __end_of__initialization 25E6             __CFG_PBADEN$OFF 000000               ___rparam_used 000001  
             __end_of_BIT_0 0814               __end_of_BIT_1 0813               __end_of_BIT_2 0812  
             __end_of_BIT_3 0811               __end_of_BIT_4 0810               __end_of_BIT_5 080F  
             __end_of_BIT_6 080E               __end_of_BIT_7 080D               __end_of_SRCLK 081A  
             __end_of_SRCLR 0819              __pcstackCOMRAM 0001       character_table@symbol 0003  
              __pidataBANK0 27FA               __end_of_fputc 2422               __end_of_fputs 2720  
             __end_of_putch 2806                  __end_of_OE 0817            display3@dig_mask 0801  
                   ??_fputc 0004                     ??_fputs 000B                     ??_putch 0001  
                __pbssBANK0 0060     __end_of_character_table 1FAE                     ?___wmul 0001  
                   ?_my_ISR 0001                     ?_strlen 0001          __size_of_numarator 0046  
        __size_of_vfpfcnvrt 0A5E                 send_digit@a 0004                 send_digit@i 0002  
                 ?_display3 0005            ___lomod@dividend 0001             __CFG_VREGEN$OFF 000000  
                   __Hparam 0000                     __Lparam 0000          __size_of_vsnprintf 00BC  
                   ___aodiv 1A10                     ___aomod 1C94             __size_of___wmul 0026  
                   ___lodiv 1FAE                     ___lomod 2138                   ?_vfprintf 008E  
              __psmallconst 0800                   ?_snprintf 00A3                     __pcinit 25BA  
           __size_of_my_ISR 2622                     __ramtop 0800                     __ptext0 27B6  
                   __ptext1 27E6                     __ptext2 27D0                     __ptext3 246C  
                   __ptext4 2798                     __ptext5 207C                     __ptext6 24F8  
                   __ptext7 0852                     __ptext8 14E4                     __ptext9 2422  
           __size_of_strlen 0022                __size_of_abs 0032                __size_of_pad 0082  
                   _isalpha 262A                     _isdigit 2720                     _islower 2690  
                   _isspace 257C                     _isupper 26C0    __end_of_setupPortDisplay 27E6  
                   atoi@neg 000E                  ??_display3 0006                     _strncmp 21E6  
            __pintcode_body 25F4                     _toupper 2422        end_of_initialization 25E6  
          ?_character_table 0001                     fputc@fp 0003                  _send_digit 253C  
             __Lmediumconst 0000                     int_func 25F4                     fputs@fp 000A  
         __end_of_numarator 24B2           __end_of_vfpfcnvrt 12B0                     postdec1 000FE5  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                  ??_vfprintf 005E                  ??_snprintf 005F  
                   strlen@a 0003                     strlen@s 0001                  _setup_TMR0 27E6  
               numarator@nr 00AC           __end_of_vsnprintf 2138    __end_ofdisplay3@dig_mask 0802  
               vfpfcnvrt@ap 0040                 vfpfcnvrt@cp 004B                 vfpfcnvrt@fp 003E  
               vfpfcnvrt@ll 004C              __end_of___wmul 2776                 vfpfcnvrt@vp 0054  
            __end_of_my_ISR 262A              __end_of_strlen 2798         start_initialization 25BA  
           ___lodiv@divisor 0009             ___lodiv@counter 0019                 __end_of_SER 081C  
               __end_of_abs 2690                 __end_of_pad 23A2  __end_ofsend_digit@com_mask 0803  
               ?_send_digit 0001                 vfprintf@fmt 008F                    ??___wmul 0005  
               __pdataBANK0 00B3            __CFG_LPT1OSC$OFF 000000                    ??_my_ISR 0001  
               ?_setup_TMR0 0001                    ??_strlen 0003                vsnprintf@cnt 009C  
              vsnprintf@fmt 0094               __pcstackBANK0 008E            ___aodiv@dividend 0001  
               snprintf@fmt 00A6           __size_of_display3 009C                   __pintcode 0008  
                  ?___aodiv 0001                    ?___aomod 0001            ___aodiv@quotient 0013  
                  ?___lodiv 0001                    ?___lomod 0001           __size_of_vfprintf 0044  
         __size_of_snprintf 001E         __size_of_send_digit 0040             ___lomod@divisor 0009  
               __smallconst 0800             ___lomod@counter 0011                    ?_isalpha 0001  
                  ?_isdigit 0001                    ?_islower 0001                    ?_isspace 0001  
                  ?_isupper 0001           ?_setupPortDisplay 0001              __size_of_fputc 0080  
            __size_of_fputs 0030                    ?_strncmp 0001                    ?_toupper 0007  
            __size_of_putch 0002          ??_setupPortDisplay 0001              ___wmul@product 0005  
       __size_of_setup_TMR0 0014                    _RCONbits 000FD0            __CFG_WDTPS$32768 000000  
                 _numarator 246C                   _vfpfcnvrt 0852           ___wmul@multiplier 0001  
                vfpfcnvrt@c 0055                   copy_data0 25CE                   _vsnprintf 207C  
                  __Hrparam 0000                  vfprintf@ap 0090                    __Lrparam 0000  
                vfprintf@fp 008E    __size_of_character_table 00E8                  ?_numarator 0001  
          __size_of___aodiv 0148            __size_of___aomod 0124                 vsnprintf@ap 0095  
          __size_of___lodiv 00CE            __size_of___lomod 00AE                  ?_vfpfcnvrt 003E  
                snprintf@ap 00AB             ___aodiv@divisor 0009             ___aodiv@counter 0011  
                  _atoi$965 0010                    _atoi$966 0014                    _atoi$967 0012  
          __size_of_isalpha 0034            __size_of_isdigit 0030                    _dtoa$352 002C  
          __size_of_islower 0030            __size_of_isspace 003E                    __ptext10 2690  
                  __ptext11 26C0                    __ptext20 265E                    __ptext12 262A  
                  __ptext21 1C94                    __ptext13 16FE                    __ptext30 2720  
                  __ptext22 1A10                    __ptext14 2138                    __ptext31 2750  
                  __ptext23 24B2                    __ptext15 1FAE                    __ptext32 2284  
                  __ptext24 2320                    __ptext16 21E6                    __ptext33 2776  
                  __ptext25 26F0                    __ptext17 1DB8                    __ptext34 253C  
                  __ptext26 23A2                    __ptext18 18A0                    __ptext35 1EC6  
                  __ptext27 2804                    __ptext19 12B0                    __ptext28 1B58  
                  __ptext29 257C            __size_of_isupper 0030                    _display3 2284  
          __size_of_strncmp 009E            __size_of_toupper 004A                  ?_vsnprintf 0091  
              ??_send_digit 0001               __size_of_atoi 013C               __size_of_ctoa 0046  
             __size_of_main 001A               __size_of_dtoa 0234               __size_of_otoa 0170  
             __size_of_stoa 010E               __size_of_utoa 01A2               __size_of_xtoa 021A  
        send_digit@com_mask 0802                   stoa@F1152 00B3                    int$flags 005F  
                  _xtoa$388 0029                    _xtoa$389 002B                    _vfprintf 24F8  
                  _snprintf 2798                    main@argc 00AE                    main@argv 00B0  
              ??_setup_TMR0 0001                 _isspace$992 0007            ___aomod@dividend 0001  
     __CFG_CPUDIV$OSC1_PLL2 000000          __end_of_send_digit 257C                  _INTCONbits 000FF2  
                  isalpha@c 0001                    isdigit@c 0001                  vsnprintf@f 009E  
                vsnprintf@n 0092                  vsnprintf@s 0091                   snprintf@n 00A4  
                 snprintf@s 00A3                    intlevel2 0000                    islower@c 0001  
                  isspace@c 0001          __end_of_setup_TMR0 27FA                    isupper@c 0001  
                 strncmp@_l 0001                   strncmp@_r 0002                 ??_numarator 005F  
           ___aomod@divisor 0009            character_table@a 080A            character_table@b 0809  
          character_table@c 0808            character_table@d 0807            character_table@e 0806  
          character_table@f 0805            character_table@g 0804            character_table@h 0803  
          character_table@o 080B                 ??_vfpfcnvrt 0041               _vfpfcnvrt$403 0047  
             _vfpfcnvrt$404 0049                    stoa@nuls 000C             ___aomod@counter 0011  
         ??_character_table 0001         __CFG_FOSC$INTOSC_EC 000000              _vsnprintf$1104 009A  
                  strncmp@l 0006                    strncmp@n 0003                    strncmp@r 0007  
                  toupper@c 0007                ___aodiv@sign 0012                 ??_vsnprintf 0096  
            send_digit@data 0001                ___aomod@sign 0012   __size_of_setupPortDisplay 0016  
